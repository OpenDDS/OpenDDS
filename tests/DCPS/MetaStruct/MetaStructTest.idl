@final
struct A_t {
  string s;
  long l;
  wchar w;
  char c;
};

typedef short ShortArray[3];
typedef ShortArray ArrayOfShortArray[4];
typedef string StringArray [3];
typedef sequence<A_t> StructSeq;
enum MyEnum {b, d, as, sa, ss, other1, other2};

@final
union MyUnion switch (MyEnum) {
case b: boolean u_b;
case d: double u_d;
case as: A_t u_as;
case sa: ShortArray u_sa;
case ss: StructSeq u_ss;
default: float u_f;
};

@mutable
union MutableUnion switch (MyEnum) {
case b: boolean u_b;
case d: double u_d;
case as: A_t u_as;
case sa: ShortArray u_sa;
case ss: StructSeq u_ss;
default: float u_f;
};

@topic
@final
struct FinalStruct {
  A_t a;
  ShortArray sa;
  ArrayOfShortArray asa;
  StructSeq ss;
  MyEnum e;
  MyUnion u;
  MutableUnion mu;
  sequence<A_t> anon_seq;
  StringArray stra;
  string astra[3];
  string s;
};

@topic
@appendable
struct AppenableStruct {
  A_t a;
  ShortArray sa;
  ArrayOfShortArray asa;
  StructSeq ss;
  MyEnum e;
  MyUnion u;
  MutableUnion mu;
  sequence<A_t> anon_seq;
  StringArray stra;
  string astra[3];
  string s;
};

@topic
@mutable
struct MutableStruct {
  A_t a;
  ShortArray sa;
  ArrayOfShortArray asa;
  StructSeq ss;
  MyEnum e;
  MyUnion u;
  MutableUnion mu;
  sequence<A_t> anon_seq;
  StringArray stra;
  string astra[3];
  string s;
};
