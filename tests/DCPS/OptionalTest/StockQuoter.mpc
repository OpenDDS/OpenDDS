project(*Common) : dcps_idl_only_lib, opendds_cxx11 {
  sharedname     = StockQuoterCommon
  dynamicflags   = STOCKQUOTERCOMMON_BUILD_DLL
  requires += tao_orbsvcs
  requires += no_opendds_safety_profile
  after    += Svc_Utils
  includes      += $(TAO_ROOT)/orbsvcs
  idlflags      += -I$(TAO_ROOT)/orbsvcs \
                   -Wb,export_macro=StockQuoterCommon_Export \
                   -Wb,export_include=StockQuoterCommon_Export.h
  dcps_ts_flags += -Wb,export_macro=StockQuoterCommon_Export\
  dcps_ts_flags += -Gxtypes-complete

  TypeSupport_Files {
    StockQuoter_optional.idl
  }

  IDL_Files {
    StockQuoter_optionalTypeSupport.idl
    StockQuoter_optional.idl
  }
}

project(*Publisher) : dcpsexe, dcps_tcp, svc_utils {
  after    += *Common
  exename   = publisher
  requires += tao_orbsvcs
  requires += no_opendds_safety_profile

  includes += $(TAO_ROOT)/orbsvcs
  libs     += StockQuoterCommon

  IDL_Files {
  }

  TypeSupport_Files {
  }

  Header_Files {
  }

  Source_Files {
    publisher.cpp
  }

  Documentation_Files {
    dds_tcp_conf.ini
    dds_udp_conf.ini
  }
}


project(*Subscriber) : dcpsexe, dcps_tcp {
  after    += *Common
  exename   = subscriber
  requires += tao_orbsvcs
  requires += no_opendds_safety_profile

  includes += $(TAO_ROOT)/orbsvcs
  libs     += StockQuoterCommon

  TypeSupport_Files {
  }

  IDL_Files {
  }

  Header_Files {
    ExchangeEventDataReaderListenerImpl.h
    QuoteDataReaderListenerImpl.h
  }

  Source_Files {
    ExchangeEventDataReaderListenerImpl.cpp
    QuoteDataReaderListenerImpl.cpp
    subscriber.cpp
  }

  Documentation_Files {
    dds_tcp_conf.ini
    dds_udp_conf.ini
  }
}
