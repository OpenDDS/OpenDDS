project(DDS*idl): dcps_test_idl_only_lib {
  requires += no_opendds_safety_profile
  idlflags      += -Wb,stub_export_include=Messenger_export.h \
                   -Wb,stub_export_macro=Messenger_Export
  dcps_ts_flags += -Wb,export_macro=Messenger_Export
  dynamicflags  += MESSENGER_BUILD_DLL

  TypeSupport_Files {
    Messenger.idl
  }
}

project(DDS*Publisher): dcpsexe, dcps_test, dcps_tcp, dcps_multicast, dcps_rtps_udp, dcps_shmem {
  requires += no_opendds_safety_profile
  exename   = publisher
  after    += DDS*idl
  libs     += DDS*idl

  Idl_Files {
  }

  Source_Files {
    publisher.cpp
    Writer.cpp
  }
}

project(DDS*Subscriber): dcpsexe, dcps_test, dcps_tcp, dcps_multicast, dcps_rtps_udp, dcps_shmem {
  requires += no_opendds_safety_profile
  exename   = subscriber
  after    += DDS*idl
  libs     += DDS*idl

  Idl_Files {
  }

  Source_Files {
    subscriber.cpp
    DataReaderListener.cpp
  }
}

project(stub) : aceexe {
  Source_Files {
    stub.cpp
  }
}
