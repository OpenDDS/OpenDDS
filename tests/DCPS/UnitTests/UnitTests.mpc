project(*DisjointSequence): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    DisjointSequence.cpp
  }
}

project(*LivelinessCompatibility): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    LivelinessCompatibility.cpp
  }
}

project(*SequenceNumber): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    SequenceNumber.cpp
  }
}

project(*DurationToTimeValue): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    DurationToTimeValue.cpp
  }
}

project(*TimeTSubtraction): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    TimeTSubtraction.cpp
  }
}

project(*Fragmentation): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    Fragmentation.cpp
  }
}

project(*Reassembly): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    ut_Reassembly.cpp
  }
}

project(*RtpsFragmentation): dcpsexe, dcps_test, dcps_rtps_udp {
  exename   = *

  Source_Files {
    RtpsFragmentation.cpp
  }
}

project(*RtpsDuration): dcps_rtpsexe, dcps_test {
  exename = *

  Source_Files {
    RtpsDuration.cpp
  }
}

project(*RtpsSequenceNumberSet): dcps_rtpsexe, dcps_test {
  exename = *

  Source_Files {
    RtpsSequenceNumberSet.cpp
  }
}

project(*GuidGenerator): dcps_rtpsexe, dcps_test {
  exename   = *

  Source_Files {
    GuidGenerator.cpp
  }
}

project(*ParameterListConverter): dcps_rtpsexe, dcps_test {
  exename   = *

  Source_Files {
    ut_ParameterListConverter.cpp
  }
}

project(*RepoIdSequence) : dcps_rtpsexe, dcps_test {
  exename   = *

  Source_Files {
    ut_RepoIdSequence.cpp
  }
}

project(*BIT_DataReader): dcps_rtps_udp, dcps_default_discovery, dcps_test {
  exename   = *
  requires += built_in_topics

  Source_Files {
    ut_BIT_DataReader.cpp
  }
}

project(*MultiTask): dcpsexe, dcps_test {
  exename = *

  Source_Files {
    ut_MultiTask.cpp
  }
}

project(*NetworkConfig): dcps_test, googletest {
  exename = *
  Source_Files {
    NetworkConfig.cpp
  }
}

project(*XTypesAssignability): dcps_test, googletest {
  exename = *
  Source_Files {
    XTypesAssignability.cpp
  }
}

project(*Serializer): dcps_test, googletest {
  exename = *
  Source_Files {
    Serializer.cpp
  }
}

project(*GuidUtils): dcps_test, googletest {
  exename = *
  Source_Files {
    GuidUtils.cpp
  }
}

project(*JsonValueWriter): dcps_test, googletest, rapidjson {
  exename = *
  Source_Files {
    JsonValueWriter.cpp
  }
}

project(*JsonValueReader): dcps_test, googletest, rapidjson {
  exename = *
  Source_Files {
    JsonValueReader.cpp
  }
}
