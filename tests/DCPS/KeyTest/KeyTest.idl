/*
 *
 *
 * Distributed under the OpenDDS License.
 * See: http://www.opendds.org/license.html
 */

#include <dds/OpenDDSConfigWrapper.idl>

// Struct with no keys
module Messenger1 {

  @topic
  struct Message {
    string from;
    string subject;
    long subject_id;
    string text;
    long   count;
  };
};

// Struct with one key
module Messenger2 {

  @topic
  struct Message {
    string from;
    string subject;
    @key
    long subject_id;
    string text;
    long   count;
  };
};

// Struct with two keys
module Messenger3 {

  @topic
  struct Message {
    string from;
    string subject;
    @key
    long subject_id;
    string text;
    @key
    long   count;
  };
};

// Struct with many keys (of all possible types)
module Messenger4 {

  enum EnumType {
    FIRST, SECOND, THIRD
  };

  @topic
  struct Message {
    @key
    short short_field;
    @key
    unsigned short unsigned_short_field;
    @key
    long long_field;
    @key
    unsigned long unsigned_long_field;
    @key
    long long long_long_field;
    @key
    unsigned long long unsigned_long_long_field;
    @key
    char char_field;
    @key
    wchar wchar_field;
    @key
    float float_field;
    @key
    double double_field;
    @key
    long double long_double_field;
    @key
    boolean boolean_field;
    @key
    octet octet_field;
    @key
    EnumType enum_field;
    @key
    string string_field;
#if !OPENDDS_CONFIG_SAFETY_PROFILE
    @key
    wstring wstring_field;
#endif
  };

  @topic
  struct NestedMessage {
    @key
    Message mess;
  };

};

// Struct with nested key
module Messenger5 {

  typedef long ResponseArray[10];

  struct HeaderType {
    string from;
#if !OPENDDS_CONFIG_SAFETY_PROFILE
    @key
    wstring wsubject;
#endif
    long subject_id;
  };

  @topic
  struct Message {
#if !OPENDDS_CONFIG_SAFETY_PROFILE
    @key
#endif
    HeaderType header;
    string text;
    long   count;
    ResponseArray responses;
  };
};

// Struct with doubly nested key
module Messenger6 {

  typedef long ResponseArray[10];

  struct HeaderType {
    string from;
    string subject;
    @key
    long subject_id;
  };

  struct PayloadType {
    HeaderType header;
    string text;
    long   count;
  };

  @topic
  struct Message {
    @key
    PayloadType payload;
    ResponseArray responses;
  };
};
