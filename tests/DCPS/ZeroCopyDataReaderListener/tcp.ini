# Note:
#    1) The configuration defaults to not configure via file. The configuration file name
#       should be specified via command line option -DCPSConfigFile.
#    2) Use # or ; for comments
#    3) The command line option can overwrite the configuration value specified in this
#       file.
#    4) Run application with -DCPSDebugLevel [>0] to help debugging dds configuration.

# This "common" section configures the data in Service_Participant.
[common]
# DCPS specific debug level.
DCPSDebugLevel=0
# DCPS repository ior file name.
DCPSInfoRepo=file://repo.ior
# Number of chunks that the DataWriter's cached allocator can allocate when the resource
# limits are infinite.
DCPSChunks=20
# maximum number of expected associations for publishers and subscribers.  This is used
# to pre allocate enough memory and reduce heap allocations.
DCPSChunkAssociationMultiplier=10
# The propagation delay factor.
DCPSLivelinessFactor=80
# The port number for the builtin topic.
#DCPSBitTransportPort=
# The timeout for lookup data from the builtin topic datareader (in milliseconds).
#DCPSBitLookupDurationMsec=
DCPSGlobalTransportConfig=$file


# Configuration for a specific TransportInst object. The section name has the "transport/"
# as prefix and appeneds the TransportInst name.
[transport/t1]
transport_type=tcp
# The local endpoint with host:port format (e.g. localhost:4444).
# Without specifying local_address or without specifying port number in
# local_address(e.g. localhost:), the OS will pick a random port.
# This would avoid the impact of using a port currently used by other
# applications.
#local_address=localhost:
#transport configuration
#swap_bytes=
# Number of pre-created link (list) objects per pool for the
# "send queue" of each DataLink.  Each link references a sample
# or framework control message.
#queue_messages_per_pool=
# Initial number of pre-allocated pools of link (list) objects
# for the "send queue" of each DataLink.
#queue_initial_pools=
#Max size (in bytes) of a packet (packet header + sample(s))
#max_packet_size=
# Max number of samples that should ever be in a single packet.
#max_samples_per_packet=
# Optimum size (in bytes) of a packet (packet header + sample(s)).
#optimum_packet_size=
# This is just for tcp transport.
#enable_nagle_algorithm=

###=== Configurations for connector side during reconnecting===

# The initial retry delay in milliseconds.
# The first connection retry will be when the loss of connection
# is detected.  The second try will be after this delay.
# The default is 500 miliseconds.
#conn_retry_initial_delay=

# The backoff multiplier for reconnection strategy.
# The third and so on reconnect will be this value * the previous delay.
# Hence with conn_retry_initial_delay=500 and conn_retry_backoff_multiplier=1.5
# the second reconnect attempt will be at 0.5 seconds after first retry connect
# fails; the third attempt will be 0.75 seconds after the second retry connect
# fails; the fourth attempt will be 1.125 seconds after the third retry connect
# fails.
# The default value is 2.0.
#conn_retry_backoff_multiplier=

# Number of attemps to reconnect before giving up and calling
# on_publication_lost() and on_subscription_lost() callbacks.
# The default is 3.
#conn_retry_attempts=

# Maximum period (in milliseconds) of not being able to send queued
# messages. If there are samples queued and no output for longer
# than this period then the connection will be closed and on_*_lost()
# callbacks will be called. If the value is zero, the default, then
# this check will not be made.
#max_output_pause_period=

###=== Configurations for acceptor side during reconnecting===

# The time period in milliseconds for the acceptor side
# of a connection to wait for the connection to be reconnected.
# If not reconnected within this period then
# on_publication_lost() and on_subscription_lost() callbacks
# will be called.
# The default is 2 seconds (2000 millseconds).
#passive_reconnect_duration=
