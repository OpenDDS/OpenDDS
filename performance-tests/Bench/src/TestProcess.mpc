project(BenchIdl): dcps {
  // This project ensures the common components get built first.
  requires += no_opendds_safety_profile
  TypeSupport_Files {
    Test.idl
  }

  custom_only = 1
}

project(BenchProcess) : dcpsexe, dcps_transports_for_test, svc_utils {
  requires += no_opendds_safety_profile
  exename = testprocess
  exeout  = ../bin
  after  += BenchIdl

  TypeSupport_Files {
    Test.idl
  }

  Header_Files {
    Shutdown.h
  }

  Source_Files {
    StatisticalValue.cpp
    EntityProfiles.cpp
    Options.cpp
    Publication.cpp
    Subscription.cpp
    DataReaderListener.cpp
    Process.cpp
    testprocess.cpp
  }
}

project(BenchUdpLatency) : aceexe {
  exename = udp_latency
  exeout  = ../bin
  macros  += NOMINMAX         //don't #define min and max in Win32 headers

  Source_Files {
    udp_latency.cpp
  }
}

project(BenchTcpLatency) : aceexe {
  exename = tcp_latency
  exeout  = ../bin
  macros  += NOMINMAX         //don't #define min and max in Win32 headers

  Source_Files {
    tcp_latency.cpp
  }
}