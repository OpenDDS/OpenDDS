
schedules:
- cron: "0 7 * * SUN"
  displayName: Weekly Sunday
  branches:
    include:
    - master
  always: true

jobs:
- job: VisualStudio2017
  timeoutInMinutes: 120
  pool:
    vmImage: vs2017-win2016
  strategy:
    matrix:
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
        MyBuildId: a
      Debug64WChar:
        BuildPlatform: x64
        BuildConfiguration: Debug
        MyBuildId: b
      Debug64NoWChar:
        BuildPlatform: x64
        BuildConfiguration: Debug
        MyBuildId: c
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\vcpkg
  steps:
  - script: |
      if %BuildPlatform%==x64 (set VCVARS_ARCH=x64) else set VCVARS_ARCH=x86
      echo ##vso[task.setvariable variable=VcVarsArch]%VCVARS_ARCH%
    displayName: Set VcVarsArch
  - script: |
      git clone -q --depth 1 git://github.com/Microsoft/vcpkg %VCPKG_ROOT%
      call %VCPKG_ROOT%\bootstrap-vcpkg.bat
      set VCPKG_ARCH=$(VcVarsArch)-windows
      %VCPKG_ROOT%\vcpkg install --triplet %VCPKG_ARCH% openssl xerces-c
      rmdir /s/q %VCPKG_ROOT%\packages %VCPKG_ROOT%\buildtrees %VCPKG_ROOT%\downloads
      echo ##vso[task.setvariable variable=VcPkgInst]%VCPKG_ROOT%\installed\%VCPKG_ARCH%
    displayName: Vcpkg
    condition: not(and(eq(variables['BuildConfiguration'], 'Debug'), eq(variables['BuildPlatform'], 'x64')))
  - task: BatchScript@1
    displayName: VcVars
    inputs:
      filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"'
      arguments: $(VcVarsArch)
      modifyEnvironment: true
  - task: BatchScript@1
    displayName: Put perl on PATH
    inputs:
      filename: tools\scripts\prepend_path
      arguments: 'C:\Strawberry\perl\bin'
      modifyEnvironment: true
  - script: |
      if %BuildConfiguration%==Release set OPT=--no-tests --no-debug --optimize
      if %MyBuildId%==b set OPT=--features=uses_wchar=1
      set SEC=--security --xerces3=$(VcPkgInst) --openssl=$(VcPkgInst)
      if %BuildConfiguration%==Debug if %BuildPlatform%==x64 set SEC=
      call configure -v --ace-github-latest --tests %SEC% %OPT%
      perl tools\scripts\show_build_config.pl
      if %BuildConfiguration%==Release (set SLN=DDS_TAOv2.sln) else set SLN=DDS_TAOv2_all.sln
      echo ##vso[task.setvariable variable=BuildSolution]%SLN%
    failOnStderr: #
    displayName: Run configure script
  - script: |
      for /d %%x in (tests\googletest\build\*) do @if not %%x==tests\googletest\build\install del /s/q %%x
      del /s/q ACE_TAO\ACE\protocols ACE_TAO\ACE\contrib ACE_TAO\ACE\examples
      del /s/q ACE_TAO\ACE\tests ACE_TAO\ACE\netsvcs ACE_TAO\ACE\websvcs
      del /s/q ACE_TAO\ACE\ASNMP ACE_TAO\ACE\performance-tests
      del /s/q ACE_TAO\ACE\tests ACE_TAO\ACE\Kokyu ACE_TAO\TAO\interop-tests
      del /s/q ACE_TAO\TAO\DevGuideExamples ACE_TAO\TAO\examples
      del /s/q ACE_TAO\TAO\orbsvcs\tests ACE_TAO\TAO\orbsvcs\performance-tests
      del /s/q ACE_TAO\TAO\orbsvcs\examples
    displayName: Remove unused files from external repos
  - task: BatchScript@1
    displayName: Setenv from configure script
    inputs:
      filename: setenv.cmd
      modifyEnvironment: true
  - task: VSBuild@1
    displayName: Build solution
    inputs:
      solution: $(BuildSolution)
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true
  - script: |
      perl "%ACE_ROOT%/bin/mwc.pl" -type vs2017 tests\DCPS\Messenger DevGuideExamples\DCPS\Messenger
    condition: ne(variables['BuildConfiguration'], 'Debug')
    displayName: Generate Messenger sln files
  - task: VSBuild@1
    displayName: Build Messenger Test
    inputs:
      solution: $(DDS_ROOT)\tests\DCPS\Messenger\Messenger.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
    condition: ne(variables['BuildConfiguration'], 'Debug')
  - task: VSBuild@1
    displayName: Build Messenger Example
    inputs:
      solution: $(DDS_ROOT)\DevGuideExamples\DCPS\Messenger\Messenger.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
    condition: ne(variables['BuildConfiguration'], 'Debug')
  - script: |
      del /s/q *.obj *.idb
    displayName: Remove unused build outputs
  - script: |
      if %BuildConfiguration%==Release (set SUBDIR_FOR_MESSENGER=Release) else set SUBDIR_FOR_MESSENGER=.
      cd tests\DCPS\Messenger
      perl run_test.pl rtps -ExeSubDir %SUBDIR_FOR_MESSENGER%
    displayName: Run DCPS Messenger Test
  - script: |
      if %BuildConfiguration%==Release (set SUBDIR_FOR_MESSENGER=Release) else set SUBDIR_FOR_MESSENGER=.
      cd DevGuideExamples\DCPS\Messenger
      perl integration_run_test.pl -ExeSubDir %SUBDIR_FOR_MESSENGER%
    displayName: Run Examples DCPS Messenger
  - script: |
      perl tests\cmake_integration\run_ci_tests.pl --build-config=$(BuildConfiguration) --generator="Visual Studio 15 2017" --arch $(BuildPlatform)
    displayName: Compile and run CMake tests

