name: "macOS-15 MPC Builds"

on:
  push:
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "pull_request.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  pull_request:
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "push.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TRIGGERING_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}\vcpkg\installed
  CTEST_OUTPUT_ON_FAILURE: ON
  VCPKG_GIT_COMMIT: f7423ee180c4b7f40d43402c2feb3859161ef625
  SCOREBOARD_UPLOAD_BRANCH: refs/heads/master

jobs:

  # macOS 15

  ACE_TAO_m15_sec:

    runs-on: macos-15

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: get ACE_TAO commit
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        export ACE_COMMIT=$(git rev-parse HEAD)
        echo "ACE_COMMIT=$ACE_COMMIT" >> $GITHUB_ENV
    - name: get compiler version
      shell: bash
      run: |
        export COMPILER_VERSION=$(c++ --version 2>&1 | head -n 1)
        echo "COMPILER_VERSION=$COMPILER_VERSION" >> $GITHUB_ENV
    - name: Cache Artifact
      id: cache-artifact
      uses: actions/cache@v4
      with:
        path: ${{ github.job }}.tar.xz
        key: c01_${{ github.job }}_ace6tao2_${{ env.ACE_COMMIT }}_${{ env.COMPILER_VERSION }}
    - name: install xerces-c
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        brew install xerces-c
    - name: checkout MPC
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: configure OpenDDS
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        cd OpenDDS
        XERCESC_ROOT=$(find /opt/homebrew/Cellar/xerces-c -iname "3\.*\.*" -type d | sort -r | head -n 1)
        ./configure --std=c++17 --tests --security --ace=$GITHUB_WORKSPACE/OpenDDS/ACE_TAO/ACE --mpc=$GITHUB_WORKSPACE/MPC --xerces3=$XERCESC_ROOT --openssl=/opt/homebrew/opt/openssl@1.1 --compile-warnings=WARNING
    - name: build ACE and TAO
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        cd OpenDDS
        . setenv.sh
        cd ACE_TAO/ACE
        make -j4
        cd ../TAO
        make -j4
    - name: create ACE_TAO tar.xz artifact
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        perl -ni.bak -e "print unless /opendds/" ACE/bin/MakeProjectCreator/config/default.features remove opendds features from here, let individual build configure scripts handle those
        find . -iname "*\.o" | xargs rm
        gtar cvf ../../${{ github.job }}.tar ACE/ace/config.h
        git clean -xdfn | cut -d ' ' -f 3- | xargs gtar uvf ../../${{ github.job }}.tar
        xz -3 ../../${{ github.job }}.tar
    - name: upload ACE_TAO artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  build_m15_sec:

    runs-on: macos-15

    needs: ACE_TAO_m15_sec

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
        submodules: true
    - name: install xerces-c
      run: |
        brew install xerces-c
    - name: checkout MPC
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout ACE_TAO
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v4
      with:
        name: ACE_TAO_m15_sec_artifact
        path: OpenDDS/ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        gtar xvfJ ACE_TAO_m15_sec.tar.xz
    - name: configure OpenDDS
      run: |
        cd OpenDDS
        clang++ --version
        XERCESC_ROOT=$(find /opt/homebrew/Cellar/xerces-c -iname "3\.*\.*" -type d | sort -r | head -n 1)
        ./configure --std=c++17 --tests --rapidjson --security --ace=$GITHUB_WORKSPACE/OpenDDS/ACE_TAO/ACE --mpc=$GITHUB_WORKSPACE/MPC --xerces3=$XERCESC_ROOT --openssl=/opt/homebrew/opt/openssl@1.1 --compile-warnings=WARNING
    - name: check build configuration
      shell: bash
      run: |
        cd OpenDDS
        . setenv.sh
        tools/scripts/show_build_config.pl
    - uses: ammaraskar/gcc-problem-matcher@0.3.0
    - name: build OpenDDS
      shell: bash
      run: |
        cd OpenDDS
        . setenv.sh
        make -j4
    - name: Build CMake Tests
      run: |
        source OpenDDS/setenv.sh
        mkdir OpenDDS/tests/cmake/build
        cd OpenDDS/tests/cmake/build
        cmake -DCMAKE_CXX_STANDARD=17 ..
        cmake --build . -- -j4
    - name: create OpenDDS tar.xz artifact
      shell: bash
      run: |
        cd OpenDDS
        rm -rf ACE_TAO
        find . -iname "*\.o" | xargs rm
        find bin dds lib tests -type f -print0 | xargs -0 shasum > manifest 2> manifest_errors || true
        gtar cvf ../${{ github.job }}.tar setenv.sh manifest manifest_errors
        git clean -xdfn | cut -d ' ' -f 3- | xargs gtar uvf ../${{ github.job }}.tar
        xz -3 ../${{ github.job }}.tar
    - name: upload OpenDDS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  test_m15_sec:

    runs-on: macos-15

    needs: build_m15_sec

    permissions:
      contents: read
      id-token: write

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
        submodules: true
    - name: install xerces-c
      run: |
        brew install xerces-c
    - name: checkout MPC
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout autobuild
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/autobuild
        path: autobuild
    - name: checkout ACE_TAO
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v4
      with:
        name: ACE_TAO_m15_sec_artifact
        path: OpenDDS/ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        gtar xvfJ ACE_TAO_m15_sec.tar.xz
    - name: download OpenDDS artifact
      uses: actions/download-artifact@v4
      with:
        name: build_m15_sec_artifact
        path: OpenDDS
    - name: extract OpenDDS artifact
      shell: bash
      run: |
        cd OpenDDS
        gtar xvfJ build_m15_sec.tar.xz
    - name: check build configuration
      shell: bash
      run: |
        cd OpenDDS
        . setenv.sh
        tools/scripts/show_build_config.pl
    - name: run OpenDDS tests
      shell: bash
      run: |
        ulimit -c unlimited
        sudo chmod o+w /cores
        cd OpenDDS
        echo "export ACE_TEST_LOG_STUCK_STACKS=1" >> setenv.sh
        . setenv.sh
        mkdir ${{ github.job }}_autobuild_workspace
        cd ${{ github.job }}_autobuild_workspace
        echo using commit $TRIGGERING_COMMIT for SHA
        echo $TRIGGERING_COMMIT >> ./SHA
        cat > config.xml <<EOF
        <autobuild>
        <configuration>
        <variable name="log_file" value="output"/>
        <variable name="log_root" value="$DDS_ROOT/${{ github.job }}_autobuild_workspace/logs"/>
        <variable name="project_root" value="$DDS_ROOT"/>
        <variable name="root" value="$DDS_ROOT/${{ github.job }}_autobuild_workspace"/>
        <variable name="junit_xml_output" value="Tests"/>
        </configuration>
        <command name="log" options="on"/>
        <command name="print_os_version"/>
        <command name="print_ace_config"/>
        <command name="print_cmake_version"/>
        <command name="print_make_version"/>
        <command name="check_compiler" options="gcc"/>
        <command name="print_perl_version"/>
        <command name="print_autobuild_config"/>
        <command name="auto_run_tests" options="script_path=tests dir=$GITHUB_WORKSPACE/OpenDDS -Config STATIC_MESSENGER -Config STATIC_COMPILER -Config STATIC_COMPILER2 -Config STATIC_UNIT_TESTS -Config XERCES3 -Config OPENDDS_SECURITY -Config RAPIDJSON -Config NO_SHMEM -Config DDS_NO_ORBSVCS --no-dcps tests/core_ci_tests.lst"/>
        <command name="log" options="off"/>
        <command name="process_logs" options="move prettify index"/>
        </autobuild>
        EOF
        $GITHUB_WORKSPACE/autobuild/autobuild.pl "$GITHUB_WORKSPACE/OpenDDS/${{ github.job }}_autobuild_workspace/config.xml"
    - name: upload autobuild output
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}_autobuild_output
        path: OpenDDS/${{ github.job }}_autobuild_workspace
    # - name: Authenticate to Google Cloud
    #   uses: google-github-actions/auth@v2
    #   with:
    #     workload_identity_provider: projects/30587790497/locations/global/workloadIdentityPools/gha-scoreboard-upload/providers/gha-provider
    #     service_account: gha-scoreboard-uploader@opendds-support.iam.gserviceaccount.com
    #   if: ${{ github.repository == 'OpenDDS/OpenDDS' && github.ref == env.SCOREBOARD_UPLOAD_BRANCH }}
    # - name: get OpenDDS version
    #   shell: bash
    #   run: |
    #     cd OpenDDS
    #     echo "OPENDDS_MAJOR_VERSION=$(grep '#define OPENDDS_MAJOR_VERSION' dds/Version.h | cut -d' ' -f3)" >> $GITHUB_ENV
    # - name: upload to Google Cloud
    #   uses: 'google-github-actions/upload-cloud-storage@v2'
    #   with:
    #     path: OpenDDS/${{ github.job }}_autobuild_workspace/logs
    #     destination: opendds-gha-scoreboard-uploads/${{ env.OPENDDS_MAJOR_VERSION }}/${{ github.job }}
    #     parent: false
    #     process_gcloudignore: false
    #   if: ${{ github.repository == 'OpenDDS/OpenDDS' && github.ref == env.SCOREBOARD_UPLOAD_BRANCH }}
    - name: check results
      shell: bash
      run: |
        $GITHUB_WORKSPACE/OpenDDS/tools/scripts/autobuild_brief_html_to_text.pl "$GITHUB_WORKSPACE/OpenDDS/${{ github.job }}_autobuild_workspace/logs/"*_Brief.html
        cat "$GITHUB_WORKSPACE/OpenDDS/${{ github.job }}_autobuild_workspace/logs/latest.txt"
        grep -q 'Failures: 0' "$GITHUB_WORKSPACE/OpenDDS/${{ github.job }}_autobuild_workspace/logs/latest.txt"
