name: Check Test Results

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Build & Test"]
    types:
      - completed

jobs:
  get_info:
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion != 'cancelled' }}
    outputs:
      info: ${{ steps.get-info.outputs.result }}
    steps:
      - name: 'Get Autobuild Artifact Info'
        id: get-info
        uses: actions/github-script@v4
        with:
          script: |
            var page = 1;
            var artifacts;
            var temp_artifacts;
            while (page == 1 || page * 100 <= temp_artifacts.data.total_count) {
              temp_artifacts = await github.actions.listWorkflowRunArtifacts({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 run_id: ${{ github.event.workflow_run.id }},
                 per_page: 100,
                 page: page,
              });
              if (page == 1) {
                artifacts = temp_artifacts;
              } else {
                artifacts.data.artifacts.concat(temp_artifacts.data.artifacts);
              }
              page++;
            }
            var matchArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name.indexOf("_autobuild_output") > -1;
            });
            var result = new Array(matchArtifacts.length);
            for (var i = 0; i < matchArtifacts.length; i++) {
              result[i] = [matchArtifacts[i].name.substring( 0, matchArtifacts[i].name.indexOf( "_autobuild_output")), matchArtifacts[i].id];
            }
            console.log(result);
            return result;

  download_and_publish:
    needs: get_info
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        info: ${{ fromJSON(needs.get_info.outputs.info) }}
    if: ${{ github.event.workflow_run.conclusion != 'cancelled' }}
    steps:
      - name: 'Download Autobuild Artifact'
        uses: actions/github-script@v4
        with:
          script: |
            var fs = require('fs');
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: '${{ matrix.info[1] }}',
               archive_format: 'zip',
            });
            fs.writeFileSync('${{ github.workspace }}/${{ matrix.info[0] }}_autobuild_output.zip', Buffer.from(download.data));

      - name: 'Setup'
        shell: bash
        run: |
          mkdir ${{ matrix.info[0] }}_autobuild_output
          mv ${{ matrix.info[0] }}_autobuild_output.zip ${{ matrix.info[0] }}_autobuild_output
          cd ${{ matrix.info[0] }}_autobuild_output
          unzip ${{ matrix.info[0] }}_autobuild_output.zip
          export TRIGGERING_COMMIT=$(cat ./SHA)
          echo "TRIGGERING_COMMIT=$TRIGGERING_COMMIT" >> $GITHUB_ENV

      - name: 'Avoid relative paths in XML testcase names'
        shell: bash
        run: |
          sed '/<testcase name="/s/\.\.\///g' -i ${{ matrix.info[0] }}_autobuild_output/Tests_JUnit.xml
          sed '/<testcase name="/s/\.\///g' -i ${{ matrix.info[0] }}_autobuild_output/Tests_JUnit.xml

      - name: 'Publish Unit Test Results'
        uses: simpsont-oci/action-junit-report@v2.2.0.1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Test Results: ${{ matrix.info[0] }}"
          report_paths: ${{ matrix.info[0] }}_autobuild_output/Tests_JUnit.xml
          commit: ${{ env.TRIGGERING_COMMIT }}
