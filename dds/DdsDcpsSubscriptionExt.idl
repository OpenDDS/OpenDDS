/*
 *
 *
 * Distributed under the OpenDDS License.
 * See: http://www.opendds.org/license.html
 */

#ifndef OPENDDS_DDSDCPSSUBSCRIPTIONEXT_IDL
#define OPENDDS_DDSDCPSSUBSCRIPTIONEXT_IDL

// OpenDDS extensions to the DDS Subscription Module

#include <dds/DdsDcpsSubscription.idl>
#include <dds/DdsDcpsGuid.idl>

module OpenDDS
{

  module DCPS
  {

    struct SubscriptionLostStatus {
      ::DDS::InstanceHandleSeq publication_handles;
    };

    typedef SubscriptionLostStatus SubscriptionDisconnectedStatus;
    typedef SubscriptionLostStatus SubscriptionReconnectedStatus;

    local interface DataReaderListener : ::DDS::DataReaderListener {

      /// Called when a connection failure has been detected
      /// and there are still associations using the connection
      /// after the configurable graceful_disconnected_period.
      /// When connection is gracefully disconnected, this callback
      /// is also triggered.
      void on_subscription_disconnected(
        in ::DDS::DataReader reader,
        in SubscriptionDisconnectedStatus status);

      /// Called when a disconnected connection
      /// has been reconnected.
      void on_subscription_reconnected(
        in ::DDS::DataReader reader,
        in SubscriptionReconnectedStatus status);

      /// Called when a connection is lost and hence one
      /// or more associations from this subscription to
      /// some publishers have been lost.
      /// A connection is "lost" when the retry attempts
      /// have been exhausted.
      void on_subscription_lost(
        in ::DDS::DataReader reader,
        in SubscriptionLostStatus status);
    };

  };

};

#endif /* OPENDDS_DCPS_SUBSCRIPTION_EXT_IDL */
