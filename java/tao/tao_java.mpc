project: taolib, idl2jni, install {
  libout        = $(DDS_ROOT)/lib
  idl2jniflags += -SS -Wb,stub_export_include=tao_java_export.h \
                      -Wb,stub_export_macro=tao_java_Export \
                      -Wb,tao_include_prefix=tao/
  includes     += $(TAO_ROOT)/tao
  dynamicflags += TAO_JAVA_BUILD_DLL
  postclean    += <%rm%> CORBA

  // Older versions of Visual Studio will create the intermediate directories
  // in all-lowercase, so we have to create them first to get the correct case.
  specific(vc71, vc8) {
    prebuild   += <%mkdir%> CORBA 2<%gt%> <%nul%> <%or%> <%cat%> <%nul%> <%gt%> <%nul%>
    prebuild   += <%mkdir%> classes<%slash%>CORBA 2<%gt%> <%nul%> <%or%> <%cat%> <%nul%> <%gt%> <%nul%>
  }

  specific {
    jarname     = tao_java
  }

  Idl2Jni_Files {
    $(TAO_ROOT)/tao/BooleanSeq.pidl
    $(TAO_ROOT)/tao/CharSeq.pidl
    $(TAO_ROOT)/tao/DoubleSeq.pidl
    $(TAO_ROOT)/tao/FloatSeq.pidl
    $(TAO_ROOT)/tao/LongLongSeq.pidl
    $(TAO_ROOT)/tao/LongSeq.pidl
    $(TAO_ROOT)/tao/OctetSeq.pidl
    $(TAO_ROOT)/tao/ShortSeq.pidl
    $(TAO_ROOT)/tao/StringSeq.pidl
    $(TAO_ROOT)/tao/ULongLongSeq.pidl
    $(TAO_ROOT)/tao/ULongSeq.pidl
    $(TAO_ROOT)/tao/UShortSeq.pidl
  }

  verbatim(gnuace, postinstall) {
"	cp $(DDS_ROOT)/lib/tao_java.jar $(DESTDIR)$(INSTALL_PREFIX)/lib"
  }
}
