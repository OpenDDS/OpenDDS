/*
 *
 *
 * Distributed under the OpenDDS License.
 * See: http://www.opendds.org/license.html
 */

#include "tao/OctetSeq.pidl"
#include "tao/StringSeq.pidl"

module Complex_Idl {

    struct CastMember {
        string python;
        string role;
    };

    struct Quote {
        string skit_name;
        string episode_name;

        CastMember cast_member;

        string line;
    };

    enum DataType { DATA_IDL, DATA_STREAM };

    union DataUnion switch (DataType) {
        case DATA_IDL:      Quote idl_quote;
        case DATA_STREAM:   CORBA::OctetSeq stream;
    };

    @topic
    struct Data {
        @key long id;
        DataUnion payload;
    };

    struct Position {
        double x;
        double y;
        double z;
    };

    @topic
    struct TimePosition {
        @key long time;
        Position pos;
    };

    typedef unsigned long Vote_t;
    struct Candidate_t {
        string name;
        Vote_t votes;
    };

    struct ElectionResult_t {
        Candidate_t winner;
        Vote_t total_votes;
    };

    enum ElectionNewsType_t {
        ELECTION_STATUS,
        ELECTION_RESULT
    };

    @topic
    union ElectionNews_t switch (@key ElectionNewsType_t) {
    case ELECTION_STATUS:
        Candidate_t status;
    case ELECTION_RESULT:
        ElectionResult_t result;
    };
};
