Released 2024-07-26

Download :ghrelease:`this release on GitHub <DDS-3.29>`.

Read `the documentation for this release on Read the Docs <https://opendds.readthedocs.io/en/dds-3.29>`__.

Additions
=========

- Added support for the :ref:`xtypes--optional` IDL annotation for the IDL-to-C++11 mapping. ``@optional`` maps to either ``std::optional`` or a similar custom implementation in the generated code. (:ghpr:`4364`)

- Implemented the ``create_sample``, ``create_sample_rc``, ``create_dynamic_sample``, and ``create_dynamic_sample_rc`` methods on ``TypeSupport`` to convert samples to and from ``DynamicData``. (:ghpr:`4373`)

  - Also documented the existing ``DynamicDataAdapter`` class for wrapping IDL-generated types in a ``DynamicData``.
  - See :ref:`xtypes-dynamicdata-and-idl-generated-types` for details.
- Samples from DynamicDataReaders can be modified and passed to DynamicDataWriters. (:ghpr:`4609`)
- Added config properties to give more control over what UDP ports RTPS uses: (:ghpr:`4655`)

  - For RTPS Discovery:

    - Added :cfg:val:`[rtps_discovery]SedpPortMode=probe`, which will use ports similar to how the RTPS specification defines them.
      This uses the existing port parameter properties for SPDP and a new one, :cfg:prop:`[rtps_discovery]DY`.
    - Added :cfg:prop:`[rtps_discovery]SpdpPortMode` as an alias to the now deprecated :cfg:prop:`[rtps_discovery]SpdpRequestRandomPort`.
    - Added :cfg:prop:`[rtps_discovery]SpdpMulticastAddress`, :cfg:prop:`[rtps_discovery]Ipv6SpdpMulticastAddress`, :cfg:prop:`[rtps_discovery]SedpMulticastAddress`, and :cfg:prop:`[rtps_discovery]Ipv6SedpMulticastAddress` to set the multicast addresses and ports separately on SPDP and SEDP.
    - See :ref:`here <config-ports-used-by-rtps-disc>` for the full overview of port usage.

  - For RTPS/UDP Transport:

    - Added :cfg:val:`[transport@rtps_udp]PortMode=probe`, which will use ports exactly as the RTPS specification defines them.
      This uses new port parameter properties: :cfg:prop:`[transport@rtps_udp]PB`, :cfg:prop:`[transport@rtps_udp]DG`, :cfg:prop:`[transport@rtps_udp]PG`, :cfg:prop:`[transport@rtps_udp]D2`, and :cfg:prop:`[transport@rtps_udp]D3`.
    - See :ref:`here <config-ports-used-by-rtps-udp>` for the full overview of port usage.

  - All ports calculated using port parameter properties now warn if they overflow the 16 bit integer.
  - :cfg:val:`[rtps_discovery]SedpPortMode=probe` and :cfg:val:`[transport@rtps_udp]PortMode=probe` might make :ref:`config template customizations <run_time_configuration--adding-customizations>` unnecessary.
- Added :ghfile:`dds/OpenDDSConfigWrapper.h` and :ghfile:`dds/OpenDDSConfigWrapper.idl`. (:ghpr:`4659`)

  - These files will provide defaults for various configuration macros.

  - These files should be included in preference to ``dds/OpenDDSConfig.h``
- Added a new data member, ``monotonic_timestamp`` to the ``InternalThreadBuiltInTopic`` IDL struct. (:ghpr:`4677`)

  - ``monotonic_timestamp`` is the time of the sample was written (time of last update of this instance) on the monotonic clock.
  - On systems that don't support a monotonic clock, this will be the same value as the corresponding ``SampleInfo``'s ``source_timestamp``.
- The ParticipantLocation BIT instance is now published before participant discovery completes. (:ghpr:`4693`)

  - Applications can use ParticipantLocation to get notified that discovery is in progress. The spec-defined Participant BIT won't be published until participant discovery is complete.
- The Info Destination submessage is now used if present in incoming SPDP messages (:ghpr:`4710`)

- The ParticipantLocation BIT has a new data member: the SPDP user tag of the peer (0 if none present) (:ghpr:`4711`)

  - Also added the SPDP user tag to outbound messages which are directed to a specific destination
- :cfg:prop:`[rtps_discovery]ResendPeriod` now accepts fractions of a second. (:ghpr:`4712`)
- OpenDDS now sends pre-emptive (pre-association) acknacks in a form that RTI Connext understands. (:ghpr:`4735`)
- Pre-association acknacks now fall off like heartbeats. (:ghpr:`4735`)

Platform Support and Dependencies
=================================

- ACE/TAO

  - Added support for building with `ACE 8.0.0 / TAO 4.0.0 <https://github.com/DOCGroup/ACE_TAO/releases/tag/ACE%2BTAO-8_0_0>`__.
  - Updated ACE 6/TAO 2 from 6.5.20 to `6.5.21 <https://github.com/DOCGroup/ACE_TAO/releases/tag/ACE%2BTAO-6_5_21>`__.

- CMake

  - Allow using the ACE/TAO master branch which now requires C++17. (:ghpr:`4618`)

- Building with CMake

  - Visual Studio now defaults to using at least C++11 with ACE 6/TAO 2 instead of C++03. (:ghpr:`4618`)
  - Fixed :ghissue:`configure error <4645>` when using :cmake:var:`OPENDDS_JUST_BUILD_HOST_TOOLS` with CMake <3.28. (:ghpr:`4646`)

Removals
========

- Removed ``OPENDDS_IGNORE_OPENDDSCONFIG_H_FILE`` macro. (:ghpr:`4687`)

  - Users manually configuring a build will need to create ``dds/OpenDDSConfig.h`` which may be empty.

Fixes
=====

- When :cfg:prop:`DCPSThreadStatusInterval` is enabled, threads that run the ACE Reactor now use timers instead of a time-limited ``select()`` system call to update the ``InternalThreadBuiltInTopic``. (:ghpr:`4677`)

  - This allows the ``InternalThreadBuiltInTopic`` to be updated accurately on systems that suspend/resume and are configured for boottime timers.
- :cfg:prop:`[rtps_discovery]MaxSpdpSequenceMsgResetChecks` is recognized again. (:ghpr:`4696`)
- RtpsRelay: Recognize clients that are using different IP addresses for SPDP and SEDP. (:ghpr:`4718`)
- Fixed memory leak of remote locators in the RTPS/UDP transport. (:ghpr:`4731`)

Documentation
=============

- Documented :option:`RtpsRelay -LogHttp`, :option:`RtpsRelay -AdmissionControlQueueSize`, and :option:`RtpsRelay -AdmissionControlQueueDuration`. (:ghpr:`4699`)
- Documented :ref:`SPDP <spdp>` and :ref:`SEDP <sedp>`. (:ghpr:`4699`)

