Tue Dec 22 22:35:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0fd1fbbac1ed161b05e3c2f7e1cf5de04c6fe5b3

        * INSTALL.md:
        * README.md:
        * configure.cmd:

          README.md and other docs: updates for 3.15 (#2232)

          * README.md: updates for 3.15

          * Review updates

Tue Dec 22 05:44:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4f3eba4be2a7f4d7412d4d041852bb2cbd79719a

          Merge pull request #2230 from
          simpsont-oci/fix_remove_from_bit_locking

          Fix locking around SEDP's remove_from_bit methods

Tue Dec 22 02:04:38 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 614f80e155799500a635ada1de16a56afed2189b

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          Fix locking around SEDP's remove_from_bit methods

Sun Dec 20 18:40:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c07c0df80242f0a0466c78b00863f857cfe7a575

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          fixed Coverity warning

Sun Dec 20 18:39:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9f0176918dbf0d41b94fae36b9f72fff570cdfc0

          Merge pull request #2228 from jrw972/durable-frag-gap

          Extend durability gaps fixes to fragments

Sun Dec 20 15:00:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 36a89f059df79809ac2a68ff631be9fe14cfb57e

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Extend durability gaps fixes to fragments

Sun Dec 20 00:27:14 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0ee3d12de7b9d87e2694b0f3547f4d5ad5719c9b

          Merge pull request #2226 from jrw972/durable-gaps

          Durable replay not complete for nack (round 2)

Sat Dec 19 20:46:14 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d392738a0e4733fc8aafc7c729ae0c7667169e14

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Durable replay not complete for nack (round 2)

          Problem
          -------

          Before, the datalink thread was responsible for invoking the
          callback
          that replayed durable data. Thus, durable replay was done when
          the
          call returned. Now, the discovery and/or user thread is
          responsible
          for replaying durable data and it might not be finished by the
          time
          the first nack arrives. This results in a request that is gapped
          leading to missed durable data.

          Solution
          --------

          Do not process requests for missing data messages when the reader
          is
          still expecting durable data.  See
          f19f4d0f3f533918735d9832b4c241b8455cc932.

Sat Dec 19 14:14:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 62be4b5e4607d951b256a58c6530fcf2a63c56f8

          Merge pull request #2223 from jrw972/durable-nack-race

          Durable replay not complete for nack

Sat Dec 19 01:58:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f19f4d0f3f533918735d9832b4c241b8455cc932

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Durable replay not complete for nack

          Problem
          -------

          Before, the datalink thread was responsible for invoking the
          callback
          that replayed durable data. Thus, durable replay was done when
          the
          call returned. Now, the discovery and/or user thread is
          responsible
          for replaying durable data and it might not be finished by the
          time
          the first nack arrives. This results in a request that is gapped
          leading to missed durable data.

          Solution
          --------

          Prevent further nack processing by clearing the requests if the
          durable data is not complete.

Fri Dec 18 20:49:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a8a4ac80d016de4bc18551eb9a3ed75f71cdd959

          Merge pull request #2211 from
          simpsont-oci/bench2_worker_logs_and_json_decimals

          Bench2: Improved Log Integration and Sane JSON Decimal Precision

Fri Dec 18 20:49:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 749350693486a5cf4f4b86ea85de926b46d1780a

          Merge pull request #2221 from mitza-oci/discoverybase

          DiscoveryBase: initialization for new member of
          DiscoveredPublicaton/Subscription

Fri Dec 18 20:49:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9f81444d9695f0ec19a3ab3851e75b72e5b50554

          Merge pull request #2217 from
          simpsont-oci/avoid_datablanker_callbacks_raw_ptr

          Switching to RcHandle / WeakRcHandle instead of raw pointers for
          DataReaderCallbacks / DataWriterCallbacks

Fri Dec 18 20:48:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c3fe556bafc0bc340a3e5a22f90d96ebd68a3b4b

          Merge pull request #2216 from jrw972/volatile-writer-leaks

          Volatile Writer leaks resources

Fri Dec 18 17:52:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d085d6809878967d9a9ec34b28d45f89b7ba20fa

        * dds/DCPS/DiscoveryBase.h:

          DiscoveryBase: initialization for new member of
          DiscoveredPublicaton/Subscription

Fri Dec 18 16:56:58 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit d84b356f9a1291cb95b018c6f3faf548a44debee

        * performance-tests/bench_2/common/json_conversion.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/main.cpp:

          fixes for older compilers

Fri Dec 18 16:38:17 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7a17aab445fe95894c5c14ecc40b6ed37fb2f59d

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Apply suggestions from code review

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Fri Dec 18 16:24:55 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 1bf50ccc32e5a7edd901546d77a57e3d4af4b44e

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          add reader / writer_info protections to DeliverHeldData

Fri Dec 18 05:47:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a444367518f40349273c99b1f7f54da5ed37bdd7

          Merge pull request #2215 from
          kuznetsovmoci/best_effort_reader_ipv6

          Best Effort Reader Test Fix for IPv6

Fri Dec 18 05:47:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6ee6471ede226aeeaed017e422d34f3d882fd8bf

          Merge pull request #2214 from mitza-oci/master

          RtpsUdpReceiveStrategy: removed a spurious error message

Fri Dec 18 05:47:21 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit effe21d435605f72b069cf6bc9eecfad9d0ba17d

          Merge pull request #2213 from jrw972/rtps-init-heartbeat-first

          RTPS heartbeat first is not initialized

Fri Dec 18 05:47:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ed125d437250374eab5d9529622d199a1f48a6d5

          Merge pull request #2210 from
          iguessthislldo/igtd/secure-user-data

          Improve Secure Participant User Data

Fri Dec 18 04:26:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit efcdc22bf4f922c921bcb715a0b91c4b788efb43

        * dds/DCPS/DataReaderCallbacks.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterCallbacks.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Discovery.h:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RecorderImpl.cpp:
        * dds/DCPS/Replayer.h:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/StaticDiscovery.cpp:
        * tests/DCPS/DCPSInfoRepo/pubsub.cpp:

          switching to RcHandle / WeakRcHandle instead of raw pointers for
          DataReaderCallbacks / DataWriterCallbacks

Fri Dec 18 03:45:53 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8caedfa0433948cdf20dd97a127ff3a1a0968e15

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Volatile Writer leaks resources

          Problem
          -------

          The maxiumum expected sequence number is tracked for each reader
          of a
          volatile writer. The maximum sequence number doesn't advance
          unless a
          message is sent to the reader. At steady state, there will be one
          reader whose maximum expected sequence number is lower than every
          other reader. This places a bound on what can be released by the
          `acked_by_all_helper_i` function. Consequently, the send buffer
          for
          the volatile writer will accumulate messages in a long-running
          process.

          Solution
          --------

          Track the sequence numbers that send to each volatile reader and
          use
          these to free elements in the send buffer using the assumption
          that
          each sample is directed at a single reader.

Fri Dec 18 03:38:33 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 5d3f571c827b2b6fc6995cdf1ad625ad21de00ab

        * performance-tests/bench_2/common/json_conversion.h:
        * performance-tests/bench_2/test_controller/main.cpp:

          resolving review templates, make idl_2_json templated on writer
          type

Thu Dec 17 22:27:34 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4f02f728d43f47f130fb79b46c4fb7d4d77bdcef

        * tests/security/attributes/DataReaderListener.cpp:
        * tests/security/attributes/subscriber.cpp:
        * tests/security/security_tests.lst:

          tests/security/attributes: Avoid BITs

Thu Dec 17 22:13:09 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 2f08e9d4cfccf6cb57273f50d06ef1084c2b0e62

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          applying review suggestions

Thu Dec 17 22:12:38 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit db823839e2145cfa765a6cbb4ed7543a0c6c957b

        * performance-tests/bench_2/test_controller/main.cpp:

          Apply suggestions from code review

          Co-authored-by: Son Dinh <technology789@gmail.com>

Thu Dec 17 21:44:29 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 743095265b2f6bd1d5fa8a979a88687ddbafe09e

        * tests/transport/best_effort_reader/SocketWriter.cpp:

          Fix for IPv6: address conversion

Thu Dec 17 21:06:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fc674704d5f28370c0369049782a5c27e8cb6c9b

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          RtpsUdpReceiveStrategy: removed a spurious error message

Thu Dec 17 21:04:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit eb5e9cf07f06d0cad305df3f5d5d64b2eabc3d2f

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RTPS heartbeat first is not initialized

          Problem
          -------

          RTPS heartbeat first is not initialized.

          Solution
          --------

          Initialize heartbeat first.

Thu Dec 17 17:28:12 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d4cfd4a132264ebf4ce5f745a9233058068d7725

        * tests/security/unit_tests/AccessControlTest.cpp:
        * tests/security/unit_tests/Authentication/AuthenticationTest.cpp:
        * tests/security/unit_tests/Authentication/LocalCredentialDataTest.cpp:

          Fix Paths in tests/security/unit_tests

Thu Dec 17 16:37:27 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 409f7c6cb9f5b62f7c14dd0cc314a1f336040086

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          secure_part_user_data without OpenDDS Security

Thu Dec 17 16:26:58 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9dc965344299c13c1c70b93497a2575d4c3ef2f0

        * performance-tests/bench_2/common/json_conversion.h:
        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/run_test.pl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          Bench2: Improved Log Integration and Sane JSON Decimal Precision

Thu Dec 17 08:19:15 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit cdafee034d23cff35a4bf3bad45c8ea99c5f837b

        * tests/security/attributes/run_test.pl:

          attributes/run_test.pl: Fix Comments

Thu Dec 17 07:53:10 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2b8a5690b6acd650fa51c3217c36aabb08dfe29c

        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * tests/security/attributes/Args.cpp:
        * tests/security/attributes/Args.h:
        * tests/security/attributes/DataReaderListener.cpp:
        * tests/security/attributes/DataReaderListener.h:
        * tests/security/attributes/Writer.cpp:
        * tests/security/attributes/Writer.h:
        * tests/security/attributes/publisher.cpp:
        * tests/security/attributes/run_test.pl:
        * tests/security/attributes/subscriber.cpp:
        * tests/security/security_tests.lst:

          Improve Secure Participant User Data

          Building on #2066, if `SecureParticipantUserData` is active only
          allow
          publishing to the Participant BIT if the data is valid. Since
          this
          behavior change is on the receiving side, it means the
          `SecureParticipantUserData` setting is required in all
          participants for
          this to work properly, not just on the sending side as before.

          Also added two cases for this to the security attributes test.

Thu Dec 17 05:18:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 17c08c2a5f91fc9c5c7b35987597c8ac1291e035

          Merge remote-tracking branch 'upstream/master'

Thu Dec 17 05:17:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 78db0a3defa41e55e5b35dbcf0223686a60acc65

        * NEWS.md:

          Updated NEWS for 3.15

Thu Dec 17 05:17:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9413901451546a327bfee216ef52ec135869fd8c

          Merge pull request #2207 from jwillemsen/jwi-uninitwarning

          Fixed unitialized warning on rhel75 with gcc48

Thu Dec 17 05:17:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1790757f1e2b52806c825516f658edf1a453c026

          Merge pull request #2206 from jwillemsen/jwi-cpp11using

          Make use of using when generating the C++11 mapping for typedefs,
          iss…

Thu Dec 17 05:17:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5f1c82aa91e8f74d6ccf005530bc48f0979e6972

          Merge pull request #2205 from jwillemsen/jwi-rtpsudplog

          Small change to make a log message consistent with the others

Thu Dec 17 05:16:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit adffdd5ea72f2df0ab0db0ef386f1a657e1768bc

          Merge pull request #2203 from jwillemsen/jwi-datalinklogging

          Small change to simplify the log for the user when there are no
          entit…

Thu Dec 17 05:16:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8f4b72210bab12e49df26a203d16457f55586db3

          Merge pull request #2209 from
          jrw972/service-participant-get-discovery-lock

          Service_Participant::get_discovery is not thread safe

Thu Dec 17 05:16:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5ab6c8ad2c09ad13c0b1d1395f2ec9d4c8a82228

          Merge pull request #2200 from simpsont-oci/fix_bundling_counts

          Fix RTPS submessage counts when bundling alters outbound
          submessage order

Thu Dec 17 00:32:23 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 4a9494064fdc9b1618bbcc7934e0c140ef284233

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/StaticDiscovery/DataReaderListenerImpl.cpp:

          minor adjustments for static discovery & test

Wed Dec 16 21:40:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e908d3bb59ce8053a71adb66a44c010367388e76

        * dds/DCPS/Service_Participant.cpp:

          Service_Participant::get_discovery is not thread safe

          Problem
          -------

          Service_Participant::get_discovery can be called from multiple
          threads
          but is not thread safe.

          Solution
          --------

          Add synchronization.

Wed Dec 16 17:58:17 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit dac4e9970cf5f67664b95d2c77093e6240498ce4

        * tools/rtpsrelay/utility.h:

          Fixed unitialized warning on rhel75 with gcc48

          * tools/rtpsrelay/utility.h:

Wed Dec 16 17:33:39 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit d29db14c29c4d5bb45a62f1790284d99de988992

        * dds/DCPS/transport/framework/DataLink.cpp:

          Update dds/DCPS/transport/framework/DataLink.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Dec 16 17:21:54 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 16c27962b848559aade718eb974d0e7023ebb409

        * dds/idl/langmap_generator.cpp:

          Update dds/idl/langmap_generator.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Dec 16 17:21:43 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit d4c299bb2f8108caa8235e5e5cc21f858d10741c

        * dds/idl/langmap_generator.cpp:

          Update dds/idl/langmap_generator.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Dec 16 16:57:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 26ebfa025278edb040c5f834ca6b5adf2a058f66

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          resolving review comments

Wed Dec 16 16:52:56 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cc7337abf6e285a2dc71eb7e13c89b9aedf4e651

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * tests/DCPS/StaticDiscovery/DataReaderListenerImpl.cpp:
        * tests/DCPS/StaticDiscovery/StaticDiscoveryTest.cpp:

          Fixing acknack counts for registered writers by tracking
          throughout datalink similarly to heartbeat, fixing assumptions in
          StaticDiscoveryTest

Wed Dec 16 14:32:52 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 42c776796126815d5208635ec799773412a71e8b

        * dds/idl/langmap_generator.cpp:

          Make use of using when generating the C++11 mapping for typedefs,
          issue #2093

          * dds/idl/langmap_generator.cpp:

Wed Dec 16 12:47:06 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 50227c59f6d14b97e074f727abefec3b296f20cb

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          Small change to make a log message consistent with the others

          * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

Wed Dec 16 12:24:23 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 7acf1dcca481a264aeb269ff15411a32edb1dcb9

        * dds/DCPS/transport/framework/DataLink.cpp:

          Small change to simplify the log for the user when there are no
          entities using this link

          * dds/DCPS/transport/framework/DataLink.cpp:

Wed Dec 16 06:45:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit a8b91124104381588db126bea6d422ad8b55cdf9

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          move inserts outside asserts

Wed Dec 16 06:16:52 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 6a21f19a0e06d2016086ed672698f1f736eca93b

        * dds/DCPS/GuidUtils.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Fix submessage counts when bundling reorders outbound submessages

Wed Dec 16 03:29:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9ac3dc24b403830e68f554a51ab0682857fb9b51

          Merge pull request #2199 from simpsont-oci/fix_test_behaviors

          Fixing Various RTPS Test Behaviors

Wed Dec 16 03:29:41 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4839f52677cb730e16664084ff600f4b0fdd07f2

          Merge pull request #2197 from mitza-oci/master

          minor cleanup as a follow-on to #2188, only removes unused code

Wed Dec 16 03:29:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 386456a4214712faa06b5eca66159af2de123fc3

          Merge pull request #2067 from jwillemsen/jwi-deletetopic_i

          Added some logging to delete_topic_i so that when the topic is
          not re…

Wed Dec 16 03:29:14 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2e90fa4b63b80753975f4716c5e472e425b6d2c1

          Merge pull request #2187 from jrw972/resend-auth-final2

          SPDP stops sending auth final

Tue Dec 15 23:18:05 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8c1827f7761d719c86779a76e170064f99ad6cda

        * tests/DCPS/DelayedDurable/DelayedDurable.cpp:
        * tests/DCPS/ManyTopicTest/subscriber.cpp:

          fixing various test behaviors

Tue Dec 15 20:11:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8a8c4cc7dc9f89e3b2a857a8f91526eb5e7a539d

          Merge pull request #2192 from
          jwillemsen/jwi-TcpTransport_passive_connection

          Minor logging enhancements to TcpTransport::passive_connection

Tue Dec 15 20:10:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1ac82f0f42eeed694820322baa023d0f1f9969fd

          Merge pull request #2190 from jwillemsen/jwi-arrayinitializers

          Only use {{}} as array initializer for arrays of pod types

Tue Dec 15 20:10:37 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a2df45d4abc7dfaf43b8a376c5e605f283220195

          Merge pull request #2189 from jwillemsen/jwi-messengerwarnings

          Changed count to a unsinged long, fixes the last warnings on
          RHEL75 (…

Tue Dec 15 20:10:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9f4bc5ea2602c7da92efabad2df2e9b1b09ab3fd

          Merge pull request #2172 from sonndinh/durable_thrasher_test

          Fix durable thrasher test

Tue Dec 15 20:10:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cfd3ddec7165b74ccccedb10a759412395f4a819

          Merge pull request #2075 from jonesc-oci/cmake_changes

          CMake build extensions and IDL compiler change supporting IDL
          files including files in subdirectories

Tue Dec 15 16:32:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 802d1df0881d05af44f1e4eeb3bf4d5c87ed8732

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          minor cleanup as a follow-on to #2188, only removes unused code

Mon Dec 14 23:24:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4a3d29f2fdc985da596379f20d1a097ebff83882

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          SPDP stops sending auth final

          Problem
          -------

          The auth requester transitions immediately from
          HANDSHAKE_STATE_WAITING_FOR_TOKEN to HANDSHAKE_STATE_DONE due to
          the
          fact that association completes immediately.  This causes the
          requester to only send the auth final once and not attempt any
          resends.

          Solution
          --------

          Eliminate the HANDSHAKE_STATE_WAITING_FOR_TOKEN state. To handle
          resends, a participant will send its most recent auth message
          when it
          receives an auth message when in HANDSHAKE_STATE_DONE.

Tue Dec 15 14:53:34 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ab352ce08d1fac93f41ed10a81d2825df603d6a6

        * tests/cmake_integration/Nested_IDL/CMakeLists.txt:
        * tests/cmake_integration/Nested_IDL/run_test.pl:

          Update test for Win32 Debug and Release builds.

Tue Dec 15 13:52:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit df9be472fdef1f91d5a7f1c9c36470c66686a330

          Merge pull request #2163 from jwillemsen/jwi-regencheck

          Generate check that the generated header still matches with the
          current OpenDDS version

Tue Dec 15 13:51:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 06d1338d154533521d881dc6e92446308b774303

          Merge pull request #2184 from kuznetsovmoci/RapidJSON_warning

          RapidJSON warning fix

Tue Dec 15 13:51:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 18009b76a13dd7fb06d9dd931bbcb9dc3d630c94

          Merge pull request #2183 from mitza-oci/master

          Updated docs

Tue Dec 15 13:51:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 376808f2b0d893d256fc40d58d8b860de2bbbd38

          Merge pull request #2188 from mitza-oci/interop-directed-hb

          Remove assumption of reliable writer behavior in rtps_udp

Tue Dec 15 11:08:06 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 4846bb12d324d9e86a25b7185c48848e51d79067

        * dds/DCPS/transport/tcp/TcpTransport.cpp:

          Minor logging enhancements to TcpTransport::passive_connection

          * dds/DCPS/transport/tcp/TcpTransport.cpp:

Tue Dec 15 09:08:29 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 473ba30cc9d669de1f383dcbfe1b3d3fe75bae7d

        * dds/idl/langmap_generator.cpp:
        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:

          Only use {{}} as array initializer for arrays of pod types

          * dds/idl/langmap_generator.cpp:
          * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:

Tue Dec 15 08:33:13 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 33bd7e62388336b41125c766501bb4a31dc38a9f

        * tests/DCPS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/Messenger/DataReaderListener.h:
        * tests/DCPS/Messenger/Messenger.idl:

          Changed count to a unsinged long, fixes the last warnings on
          RHEL75 (tested manually)

          * tests/DCPS/Messenger/DataReaderListener.cpp:
          * tests/DCPS/Messenger/DataReaderListener.h:
          * tests/DCPS/Messenger/Messenger.idl:

Tue Dec 15 07:18:45 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit f2c5bab8a578ea102488ddf64c25eb7744d60bf4

          Fixed merge conflicts

Tue Dec 15 07:18:08 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 7695346afd33d7ec5fd884c22c90749bc58a1890

          Fixed merge conflicts

Tue Dec 15 03:46:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2c423ddd9f5b0d458f6da7d8939ff90ca364e57d

        * dds/DCPS/RTPS/Spdp.cpp:

          Use PFLAGS_EMPTY constant

Tue Dec 15 02:40:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8f5a657c109a890a87e3070e24e82fe85f3c3b68

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          rtps_udp: use the participant flags from the extra "context"
          provided to the transport

Tue Dec 15 01:24:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6fb9c1ab1be97cf5563a6260eb2111ea3898007d

        * dds/DCPS/AssociationData.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/RtpsCore.idl:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/RecorderImpl.cpp:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/StaticDiscovery.cpp:
        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DdsDcpsInfoUtils.idl:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/Federator.idl:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/UpdateDataTypes.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * tests/transport/spdp/spdp_transport.cpp:

          An additional field in AssociationData for "transport context" is
          provided to each transport

          Discovery populates it for local endpoints and communicates it
          with the endpoint info
          For RTPS Discovery that is done using OpenDDSParticipantFlags_t

Tue Dec 15 00:59:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6b7df7c0578fa622eef9e25f9a2e4406fd443e5e

          Merge pull request #2182 from jonesc-oci/coverity-fn

          Fix Coverity issue. Add check for null pointer.

Tue Dec 15 00:59:42 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c78e2466b3cc3a396c417430169f7fe681a7c3fb

          Merge pull request #2181 from
          jwillemsen/jwi-simplifybooleanexpressions

          Simplify boolean expressions

Tue Dec 15 00:59:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b54f03d0cbdfdc5b5566a331b872c2152b89f8ce

          Merge pull request #2178 from
          simpsont-oci/allow_customized_ip_without_port

          Allow Transport Template Customization of IP Without Port

Tue Dec 15 00:39:48 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d1c4378edfda4803cf85b415ca71c1a0c94d04f5

        * tests/security/security_tests.lst:
        * tests/security/.gitignore  tests/security/unit_tests/.gitignore:
        * tests/security/AccessControlTest.cpp  tests/security/unit_tests/AccessControlTest.cpp:
        * tests/security/Authentication/AuthenticationTest.cpp  tests/security/unit_tests/Authentication/AuthenticationTest.cpp:
        * tests/security/Authentication/LocalCredentialDataTest.cpp  tests/security/unit_tests/Authentication/LocalCredentialDataTest.cpp:
        * tests/security/CryptoKeyExchangeTest.cpp  tests/security/unit_tests/CryptoKeyExchangeTest.cpp:
        * tests/security/CryptoKeyFactoryTest.cpp  tests/security/unit_tests/CryptoKeyFactoryTest.cpp:
        * tests/security/CryptoTransformTest.cpp  tests/security/unit_tests/CryptoTransformTest.cpp:
        * tests/security/run_test.pl  tests/security/unit_tests/run_test.pl:
        * tests/security/DDS_Security.mpc  tests/security/unit_tests/security_unit_tests.mpc:

          Move Loose Files in tests/security

Mon Dec 14 23:19:09 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f951c3eef0126f65d5a11a0147570213cacae1e2

        * dds/idl/be_global.cpp:

          Fix tabs issue.

Mon Dec 14 22:47:44 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 79dce85128b642100a22fc4001764a23c6e9190a

        * tests/cmake_integration/Nested_IDL/run_test.pl:

          Update run_test to change directory on Windows.

Mon Dec 14 22:46:44 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 632a2c6aecc4147b43d31b13d6d8b66191244fa9

        * dds/idl/be_global.cpp:

          Handle #include paths that use both '/' and '\'.

          Handle #include paths that use both '/' and '\'.
          Fixes a Windows CMake build issue.

Mon Dec 14 19:35:58 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit b9d937145ac9487bb1919c38f9ac08ea52148c84

        * tools/IntermediateTypeLang/cpp/itl/itl.hpp:

          RapidJSON warning fix

Mon Dec 14 19:31:44 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e648302b01d87a679850ca70772a46a52c1c2efd

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update DomainParticipantImpl.cpp

Mon Dec 14 19:11:34 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 18d0b7205cf99653e9fe531b72a5d6b4ef8e74c0

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Mon Dec 14 18:02:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0755f6d916f642acbb592a99506dd2fef683802b

        * tools/rtpsrelay/utility.h:

          Added an #include

Mon Dec 14 18:02:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 18adf2cc1401cb7dd0e8769b6eaaade0d12fc905

        * docs/dependencies.md:
        * java/INSTALL:
        * java/dds/OpenDDS/.gitignore:

          Updated documentation of dependencies.

          Also fixed a gitignore.

Mon Dec 14 17:53:52 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 02aacb175b17b1838296a3522865ae9d63e03b8d

        * dds/DCPS/DCPS_Utils.cpp:

          Update dds/DCPS/DCPS_Utils.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Mon Dec 14 17:52:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c3e21a83403b91ea06e532506932bc9f8339722e

          Merge pull request #2180 from jwillemsen/jwi-boolliterals2

          Use bool literals

Mon Dec 14 17:52:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 752595230eb3063c312fd06be36e792bd49c8231

          Merge pull request #2176 from jwillemsen/jwi-monitorwarnings

          Fix warnings when compiling monitor tool with latest fedora
          releases

Mon Dec 14 17:52:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ecd5a94192ffc5f072065889eec6d09b50a3db9d

          Merge pull request #2175 from jwillemsen/jwi-unitializedwarning

          Fixed unitialized warning on rhel75

Mon Dec 14 17:52:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4b87a5b6772f24b3b58d376d5fd2ed44750a7c4f

          Merge pull request #2174 from jwillemsen/jwi-messengerwarning

          Change expected to size_t to fix comparison warning

Mon Dec 14 17:52:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ea17fd8ee74278b8ba4fc0735aef15c01233723c

          Merge pull request #2173 from jwillemsen/jwi-securitytest

          Remove usage of localtime

Mon Dec 14 17:51:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 781b2e69db54517bc268e73880db2276cd0fc197

          Merge pull request #2171 from
          ClaytonCalabrese/androidapi30_monitorexport

          Segmentation Fault Due to Missing Export Android Api30

Mon Dec 14 17:51:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 65f0a10310502ba641c1f824a562df3723e3970c

          Merge pull request #2169 from jwillemsen/jwi-arrayinitializer

          generate correct initializer for arrays in the C++11 mapping,
          trigge…

Mon Dec 14 17:51:20 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 27c0806db84d9c6e2ed83980cae4585c6eac3f30

          Merge pull request #2159 from kuznetsovmoci/clang_warnings

          clang warning fixes

Mon Dec 14 17:51:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7a8d33464d420aa33d547ec1e192b6f6ff002f11

          Merge pull request #2158 from simpsont-oci/worker_wait_for_acks

          Bench2: Make worker's WriteAction use infinite wait_for_acks on
          stop()

Mon Dec 14 17:25:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6f6485cba582e2654aaabd5307d5adbb3255498f

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Update dds/DCPS/transport/framework/TransportRegistry.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Mon Dec 14 17:02:18 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 2a954954919e4b1653db9a2e7723b7f1fbfc9f18

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          remove duplicate check for transport customization

Mon Dec 14 17:01:22 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 810fdcde5adc1ba48cc304b1a45313636dc5377f

        * tests/DCPS/Thrasher/Publisher.cpp:

          Remove seed command-line option

Mon Dec 14 16:03:58 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit bd10b981a485022456e9b944469d8b54edf5cba5

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Coverity issue. Add check for null pointer.

Mon Dec 14 10:10:24 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit c7aa10d73b1e9f4e9df694ee158d8a33bb14a7ab

          Merge branch 'master' into jwi-deletetopic_i

Mon Dec 14 08:14:38 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e0623a3e56debaa5cb2db8b4ede7da0decee7b33

        * dds/DCPS/DCPS_Utils.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/FilterEvaluator.cpp:
        * dds/DCPS/MessageTracker.cpp:
        * dds/DCPS/NetworkConfigMonitor.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Simplify boolean expressions

          * dds/DCPS/DCPS_Utils.cpp:
          * dds/DCPS/DataWriterImpl.cpp:
          * dds/DCPS/DomainParticipantImpl.cpp:
          * dds/DCPS/FilterEvaluator.cpp:
          * dds/DCPS/MessageTracker.cpp:
          * dds/DCPS/NetworkConfigMonitor.cpp:
          * dds/DCPS/PublisherImpl.cpp:
          * dds/DCPS/SubscriberImpl.cpp:
          * dds/DCPS/WriteDataContainer.cpp:
          * dds/DCPS/transport/framework/NetworkAddress.cpp:

Mon Dec 14 08:02:30 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e2bc7164abc9cb163031a5448fb9abd3e7d5eaae

        * dds/DCPS/ConfigUtils.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/RawDataSample.cpp:
        * dds/DCPS/RecorderImpl.cpp:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/StaticDiscovery.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Use bool literals

          * dds/DCPS/ConfigUtils.cpp:
          * dds/DCPS/DataWriterImpl.cpp:
          * dds/DCPS/RawDataSample.cpp:
          * dds/DCPS/RecorderImpl.cpp:
          * dds/DCPS/ReplayerImpl.cpp:
          * dds/DCPS/Service_Participant.cpp:
          * dds/DCPS/StaticDiscovery.cpp:
          * dds/DCPS/security/framework/SecurityRegistry.cpp:
          * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
          * dds/DCPS/transport/framework/TransportRegistry.cpp:

Mon Dec 14 02:32:20 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7f8b01188b32c46eb54b05b2bc2cf942d0fdee68

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Allow transport template customization of ip without port

Mon Dec 14 00:46:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5743c7e0118b609f7563eae594ff6c228f3a70ee

          Merge pull request #2146 from
          jrw972/rtps-reliability-init-reliable-reader

          Reliable RTPS readers don't know where to begin

Sun Dec 13 21:22:17 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 3d7e48dcfedce96417af2492031b0b4bf542dcbe

        * tools/monitor/TreeNode.h:

          Update tools/monitor/TreeNode.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Sun Dec 13 19:10:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 59921bbdc4b243864b08036d48a882242523bf1a

        * tests/transport/RtpsUtils.h:

          Transport tests: updated for pre-C++11

Sun Dec 13 00:26:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8cdd8a20ac8f7ae172066b575a37930b42b0a385

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          RtpsUdpReceiveStrategy: moved decode_payload to so that if a
          sample is held it is already decoded

Sat Dec 12 13:19:40 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 69b5bfc5f81e11905a90f39fce07b439e4dae770

        * tools/monitor/MonitorDataStorage.inl:
        * tools/monitor/TreeNode.h:

          Fix warnings when compiling this tool with latest fedora releases

          * tools/monitor/MonitorDataStorage.inl:
          * tools/monitor/TreeNode.h:

Sat Dec 12 12:49:02 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 92f75c8366a6a69c1f9dbf32329d046157e4355c

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:

          Fixed unitialized warning on rhel75

          * dds/DCPS/security/CryptoBuiltInImpl.cpp:

Sat Dec 12 09:27:15 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 2ac3275aaf019bb6d4a7ce6d6bb190737c2a3898

        * tests/DCPS/Messenger/DataReaderListener.cpp:

          Change expected to size_t to fix comparison warning

          * tests/DCPS/Messenger/DataReaderListener.cpp:

Sat Dec 12 09:23:26 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 45a03b23e232b4e81e82f19cb1022a9ad19d15d0

        * tests/security/attributes/run_test.pl:

          Remove usage of localtime, depends on a perl module which is not
          part of a default RHEL installation. Didn't add real
          functionality to the test, the progress is already visible
          because of the test count is shown

          * tests/security/attributes/run_test.pl:

Sat Dec 12 09:15:39 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e7a9bf0666f65eb86ce012118b1989fd7ad43a56

        * tests/DCPS/Compiler/C++11/idl_test1_main/main.cpp:

          Added small test to validate that the array members when part of
          a structured type are all value initialized by default

          * tests/DCPS/Compiler/C++11/idl_test1_main/main.cpp:

Sat Dec 12 09:08:24 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 4f60aba7e094dea7c4179a87a592749348c5a543

        * dds/idl/langmap_generator.cpp:

          Use {{}} for arrays

          * dds/idl/langmap_generator.cpp:

Sat Dec 12 00:37:22 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 076cfe47e70278d53f52f5d8fabb04897cf17397

        * cmake/api_macros.cmake:
        * cmake/init.cmake:
        * docs/cmake.md:
        * tests/cmake_integration/Nested_IDL/CMakeLists.txt:

          Make FILENAME_ONLY_INCLUDES a cache variable. Update cmake.md.

Sat Dec 12 00:25:41 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit af98cb4bdda47cdc8bce05e280d4a9c868be8743

        * bin/dcps_tests.lst:

          Fix lint

Sat Dec 12 00:17:09 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 3cc2b3c60daac51e4cff6ababf87350c94ab6c8f

        * bin/dcps_tests.lst:

          Skip durable tests when ownership_profile is disabled

Sat Dec 12 00:05:02 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit d78bab2298cb982202c1af9093f3a1f4b88d0ea0

        * tests/DCPS/Thrasher/DataReaderListenerImpl.cpp:
        * tests/DCPS/Thrasher/DataReaderListenerImpl.h:
        * tests/DCPS/Thrasher/ParticipantTask.cpp:
        * tests/DCPS/Thrasher/ParticipantTask.h:
        * tests/DCPS/Thrasher/ProgressIndicator.cpp:
        * tests/DCPS/Thrasher/Publisher.cpp:
        * tests/DCPS/Thrasher/Subscriber.cpp:

          Remove random waiting

Fri Dec 11 23:00:31 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit b0fd0ae02180f1dcb8b1ff3f6841242e4bb0db06

        * dds/DCPS/NetworkConfigMonitor.h:

          Added export needed for android api30

Fri Dec 11 22:32:45 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ac8edc08109434f3b13ea682f5d4b69b8314e3da

        * tests/cmake_integration/Nested_IDL/CMakeLists_duplicate_filename.txt:
        * tests/cmake_integration/Nested_IDL/extra/engine_specs.idl:

          Removing files that are not part of test.

Fri Dec 11 22:12:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5ff32c50eaa251a06b817db28ca6aabaa0b7ea7f

          Merge pull request #2164 from jwillemsen/jwi-transportlogging

          Add const and log a few variables on a single line, no need to
          put ea…

Fri Dec 11 22:12:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5b70fe596b0eb1aaaad47fd6aa0a44fde22d9d6d

          Merge pull request #2162 from jwillemsen/jwi-removace6workaround

          Remove workaround for ACE 6.0

Fri Dec 11 22:12:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c17e1acb9b5363cfd1e2467b818eda78ea607bee

          Merge pull request #2156 from jwillemsen/jwi-messenger-sizet

          Use size_t to get rid of some c-style casts

Fri Dec 11 22:11:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d899470e48e066fdd3d81bd51db73775f9127b25

          Merge pull request #2155 from
          jwillemsen/jwi-messenger-instancestateloggign

          Log the instance_state as readable string which says something
          for a …

Fri Dec 11 22:11:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 88aa70f2cb349ff93dd8432a77e607112c898efb

          Merge pull request #2154 from jwillemsen/jwi-rtpudplogging

          Extended logging RtpsUdp logging with send/recv buffer and ttl
          values

Fri Dec 11 22:11:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a9c685a683eb4b9d5b4ceb81ef2f6f3721209fd5

          Merge pull request #2153 from jwillemsen/jwi-rtpsudpconst2

          Add const to some local variables

Fri Dec 11 22:10:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f0b8e57dae51a6fc4c113f1d45b60aa0e22c650c

          Merge pull request #2152 from jwillemsen/jwi-loadconfiglogging2

          Add logging of the config file we opened
          Service_Participant::get_dom…

Fri Dec 11 22:10:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7809dc7c43c7a2db0706e0f0ea1f0595b475da6d

          Merge pull request #2151 from jwillemsen/jwi-sedp_logging

          Correct operation name in several Sedp logging messages

Fri Dec 11 22:10:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bed8de545804bb47d29301d986562efe3582e9b5

          Merge pull request #2150 from jwillemsen/jwi-logversions

          Add a log of the OpenDDS and ACE version

Fri Dec 11 22:10:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d8ab3de6195973d83bd85d7d7895597999bedd8b

          Merge pull request #2149 from jwillemsen/jwi-Tlogging

          Removed %T from the log messages, the timestamp is added by the
          ACE l…

Fri Dec 11 22:09:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 647eef7f23e201f530f7a2a93111624aac9d97ef

          Merge pull request #2134 from jonesc-oci/domain_mem

          DomainRange implementation and test changes to fix memory leak

Fri Dec 11 21:35:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e86b947e3ce027bb4f2c5514ab7e42f2c3fff2b3

        * tests/cmake_integration/Nested_IDL/CMakeLists.txt:

          Copy run_test.pl to build directory for testing.

Fri Dec 11 19:44:22 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 90cb49fb7b6b29c9d125d639433629c1f8c457db

        * tests/DCPS/TcpReconnect/publisher.cpp:

          Fixes, as per PR#2159

Fri Dec 11 19:14:33 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 46cd9b340de24399cb4e840f42fd52ef02bf8fc3

        * java/tests/messenger/publisher/run_test.pl:
        * java/tests/messenger/subscriber/run_test.pl:

          Remove wait_for_acks from Java <-> C++ messenger tests

Fri Dec 11 18:16:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 15c0c66b730a0f6b6aad890f5824d3f6f6127097

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          fixed misplaced debug conditional

Fri Dec 11 18:15:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ab06c160eb09671fa8c0bdd693ae46cac198ef73

        * dds/DCPS/WriteDataContainer.cpp:

          WriteDataContainer::wait_ack_of_seq use of cond var results,
          simplification

Fri Dec 11 18:14:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4f59c64224d572f5f898d4d83f7baf71efef973c

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          DeliverHeldData needs to update recvd_

          Use typedef for HeldMap

Fri Dec 11 16:17:17 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit c689f362c5189981da7e2a5424143be4d8e65e20

        * dds/idl/langmap_generator.cpp:

          Don't generate an initializer for arrays in the C++11 mapping,
          triggers a warning with gcc 4.8.5

          * dds/idl/langmap_generator.cpp:

Fri Dec 11 15:40:16 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a15faf62de8db734ee3b5686a0a3b4453b6449e7

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Remove incorrect error check.

Fri Dec 11 15:25:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 6cc34cb691568958da24aa1868e86da1195b2671

        * cmake/init.cmake:
        * docs/cmake.md:

          Changes from review. Rename option. Update cmake.md.

Fri Dec 11 14:28:15 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 4447e6b1e3fe7d18cd19f6331686f2d9e58178ba

        * tests/DCPS/TcpReconnect/publisher.cpp:

          Fixes

Fri Dec 11 12:34:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8a343a57f7abc361788be9cd00ddee443d5b6589

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * tests/DCPS/Messenger/Args.h:
        * tests/DCPS/Messenger/Writer.cpp:
        * tests/DCPS/Messenger/publisher.cpp:
        * tests/DCPS/Messenger/stack_subscriber.cpp:
        * tests/DCPS/Messenger/subscriber.cpp:
        * tests/DCPS/UnionTopic/UnionTopic.cpp:
        * tests/security/attributes/Args.cpp:
        * tests/security/attributes/Args.h:
        * tests/security/attributes/publisher.cpp:

          Fix wait_for_acknowledgements and tests

Fri Dec 11 12:14:33 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit d36c75b31f5972e70e1bc31c00f1f03e4d558b85

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Fixed some typos

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 12:12:49 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 4892f84a0162ec67f685688470240da8e4d6c5f0

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Const change

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 11:30:18 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 613a19557593b051652359738fefebc306d54952

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Another place where no new line is needed after a hex dump

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 11:21:30 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit cc1fa500e84904bb120fe3cbf4cc6b28e75be884

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          less newlines

          * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

Fri Dec 11 11:21:12 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 84746d28094df789429b4b758c3b26bee7203c05

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          format_hexdump already adds a newline at the end

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 11:09:51 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 582d28b9b3604eabac11a27f8c47eb7ab184b150

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Revert change

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 11:08:31 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 42e7aa9cf85ed12254951df5577ddb52eb664b3b

        * dds/idl/be_produce.cpp:

          Removed test code

          * dds/idl/be_produce.cpp:

Fri Dec 11 11:06:17 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 6e8d206bb007389e499e95fa3453a8185578f0c9

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Add const and log a few variables on a single line, no need to
          put each of them in a separate message

          * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

Fri Dec 11 11:05:39 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit b3bb6f48569aefdf17f2551d7aa23177436576da

        * dds/idl/be_produce.cpp:

          Generate a check whether the generated header still matches with
          the current OpenDDS version. Through this check we force our
          users to regenerate all files with opendds_idl when they change
          their OpenDDS release

          * dds/idl/be_produce.cpp:

Fri Dec 11 10:55:53 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0ebb03c3c1d881a889b299b872745dcbf77017ce

        * dds/DCPS/RTPS/GuidGenerator.cpp:

          Remove workaround for ACE 6.0

          * dds/DCPS/RTPS/GuidGenerator.cpp:

Fri Dec 11 07:03:31 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 402d8b4f6623cf6310dbf395050afd69e2ae207d

        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Update dds/DCPS/transport/framework/QueueTaskBase_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Fri Dec 11 07:02:56 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 953f9bfeb379ae28de87b5a26de8c3625638c16e

        * dds/DCPS/ReactorTask.cpp:

          Update dds/DCPS/ReactorTask.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Fri Dec 11 07:02:51 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0dd31cfde557a6c0e87b0665667c23eda4e6e53c

        * dds/DCPS/DiscoveryBase.h:

          Update dds/DCPS/DiscoveryBase.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Fri Dec 11 07:02:25 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit ca768b1333d695edec0506a9a8cb9a29d791f050

        * dds/DCPS/Service_Participant.cpp:

          Update dds/DCPS/Service_Participant.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Fri Dec 11 04:38:13 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit ade8660d61ea55744d078f8079e5f656a9361b01

        * performance-tests/bench_2/test_controller/main.cpp:
        * tests/DCPS/TcpReconnect/publisher.cpp:

          Fixes

Thu Dec 10 23:50:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2969bff6e9ab57ffacf56a1ab1c2970e00707696

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
        * tests/DCPS/TransientLocalTest/DataReaderListener.h:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:

          Volatile reliable RTPS writers/readers don't start at the end

          Problem
          -------

          The starting sequence number offered by the writer is not stable.

          Solution
          --------

          Associate immediately on the writer side so that samples will
          accumulate in the send buffer.  Record the state of the
          writer (max_sn) at the time of association so that it can be
          offered
          to the reader via the preassociation heartbeat. The reader will
          be
          offered an empty range starting at one past the heartbeat first.

Thu Dec 10 22:56:23 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3474fcc240b5f47b5a3d8c336e801acf30666ab7

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * dds/DCPS/transport/framework/TransportRegistry.inl:
        * dds/DdsDcpsInfrastructure.idl:
        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Changes from review.

Thu Dec 10 22:19:19 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 5c994407f948cf0ce0a85baf33693915901b960d

        * performance-tests/bench_2/test_controller/main.cpp:
        * tests/DCPS/TcpReconnect/publisher.cpp:

          clang warning fixes

Thu Dec 10 17:34:22 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1a57f705e74c4aa09fd663f6e32a383f0d2efce4

        * dds/DCPS/transport/tcp/TcpConnection.cpp:

          More const

          * dds/DCPS/transport/tcp/TcpConnection.cpp:

Thu Dec 10 16:53:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 77f3b64ccdf06b66c0eb95f5f053146ed61455d6

        * tests/DCPS/TransientLocalTest/publisher.cpp:

          TransientLocalTest: updated condition for writer exiting

Thu Dec 10 16:51:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7133e52a403be3997a6d3e34a3f37fc09008f92c

        * tests/transport/RtpsUtils.h:

          fixed whitespace

Thu Dec 10 16:04:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f3f7df0aa3fae4623d6822fe76bd6dc1f7c03a49

        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_config.json:

          default worker's write_action to use infinite final
          wait_for_acknowledgement, but make it configurable

Thu Dec 10 13:59:56 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 2eba804cb372c092f8547e1a4f1c0996ef748c7c

        * cmake/api_macros.cmake:
        * cmake/init.cmake:
        * tests/cmake_integration/Nested_IDL/CMakeLists.txt:

          Build in src or build tree. Add DDS_ALLOW_ENV_REDEFINES flag.

          Modify idl include path to support building in source tree or
          build
          tree. Add DDS_ALLOW_ENV_REDEFINES flag to ignore error if CMake
          project
          files reset environment variables such as DDS_ROOT.

Thu Dec 10 11:30:14 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit b6a98c0b9436d15cd93561309086c4f346e97287

        * tests/DCPS/Messenger/Args.h:
        * tests/DCPS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/Messenger/Writer.cpp:

          Use size_t to get rid of some c-style casts

          * tests/DCPS/Messenger/Args.h:
          * tests/DCPS/Messenger/DataReaderListener.cpp:
          * tests/DCPS/Messenger/Writer.cpp:

Thu Dec 10 11:02:13 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 6a9520d2a0d1e48a968320902ba2f450c2619d06

        * tests/DCPS/Messenger/DataReaderListener.cpp:

          Log the instance_state as readable string which says something
          for a user

          * tests/DCPS/Messenger/DataReaderListener.cpp:

Thu Dec 10 10:07:08 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 7d2e9b22a582780b84a1172cc69b6a42555524f9

        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:

          Extended logging

          * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:

Thu Dec 10 09:39:10 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e46018d97385baf77d07f9f5f90f3264597b9fac

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Add const to some local variables

          * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

Thu Dec 10 09:38:40 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e183a31b2d0349851f39590afa5f3098059713dd

        * dds/DCPS/Service_Participant.cpp:

          Add logging of the config file we opened
          Service_Participant::get_domain_participant_factory

          * dds/DCPS/Service_Participant.cpp:

Thu Dec 10 08:28:22 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit fbcfaf4257e13d1f029cb70c4d8a177536730be9

        * dds/DCPS/Service_Participant.cpp:

          Add OPENDDS_VERSION_METADATA to the log message

          * dds/DCPS/Service_Participant.cpp:

Thu Dec 10 08:12:37 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit f013c13fe37b4677c60defa07509a6cc37cc52d8

        * dds/DCPS/RTPS/Sedp.cpp:

          Correct operation name in several Sedp logging messages

          * dds/DCPS/RTPS/Sedp.cpp:

Thu Dec 10 08:02:02 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0a3dd984469166de0d51e4d81db5ebc733858237

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/MessageTracker.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/Service_Participant.cpp:

          removed more %T from log messages

          * dds/DCPS/DiscoveryBase.h:
          * dds/DCPS/DomainParticipantFactoryImpl.cpp:
          * dds/DCPS/MessageTracker.cpp:
          * dds/DCPS/RTPS/Spdp.cpp:
          * dds/DCPS/ReactorTask.cpp:
          * dds/DCPS/Service_Participant.cpp:

Thu Dec 10 08:00:10 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 25d63593cebf9786f576bfd381782af2db48b13a

        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * tests/DCPS/ManyToMany/Writer.cpp:
        * tests/DCPS/ManyToMany/publisher.cpp:
        * tests/DCPS/ManyToMany/subscriber.cpp:

          Removed %T from the log messages, the timestamp is added by the
          ACE logging framework already when the logging flags are setup

          * dds/DCPS/transport/framework/QueueTaskBase_T.h:
          * tests/DCPS/ManyToMany/Writer.cpp:
          * tests/DCPS/ManyToMany/publisher.cpp:
          * tests/DCPS/ManyToMany/subscriber.cpp:

Thu Dec 10 07:58:56 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0ef9c7f4bdb473ccc91d82d260c92ab86b1a423e

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Add a log of the OpenDDS and ACE version so that we can easily
          determine from the log which versions are used

          * dds/DCPS/Service_Participant.cpp:
          * dds/DCPS/Service_Participant.h:

Thu Dec 10 04:11:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 26d4b1dfc663c1347169a4ca3082f96a04c309d9

          Merge pull request #2125 from simpsont-oci/bench_listener_cleanup

          Bench2: Listener Cleanup, Minor Fixes, Manually Rescheduled
          Writes

Thu Dec 10 04:10:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7613bed758b2bf1680aa5b3b86445dd16596f059

        * tests/transport/RtpsUtils.h:
        * tests/transport/best_effort_reader/SocketWriter.cpp:
        * tests/transport/best_effort_reader/SocketWriter.h:
        * tests/transport/best_effort_reader/publisher.cpp:
        * tests/transport/rtps_directed_write/AppConfig.h:
        * tests/transport/rtps_directed_write/publisher.cpp:
        * tests/transport/rtps_reliability/rtps_reliability.cpp:

          Updated transport tests for new heartbeat requirement

Thu Dec 10 02:08:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3c48fc697e488fd5bac82804366d08885a9c6bd9

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Initialize PVS writer

Wed Dec 09 17:33:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a6945a0d5bd97e928eb2a430cf46eef73dac3eb6

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          peer review changes and cleaned up TODOs

Wed Dec 09 15:18:26 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ee8b678c8f5359bfc595d8a464ca4ea6d620317f

        * performance-tests/bench_2/node_controller/main.cpp:

          remove worker_manager altogether during report sending phase to
          avoid signal trapping

Wed Dec 09 14:22:01 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a080b78e26082db2f5ffafd1abfc4760dfc277da

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Code cleanup.

Wed Dec 09 14:10:11 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f232ef993b13536018ecebd29681416a1fa7502b

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/config.ini:
        * tests/DCPS/DomainRange/run_test.pl:

          Test updates.

          Change number of readers to 5. Add code to create transport
          instance for
          domains that are not part of a template. Add check that test's
          -bind
          option uses the correct multicast group address.

Wed Dec 09 14:02:17 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 66186f88a857e9abd9267df7fd2c3bcce7f988bf

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Change args to OPENDDS_STRING

Wed Dec 09 13:28:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 536890263a60c88b6c63993de4f0e68b36240e53

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:

          Reliable RTPS readers don't know where to begin

          Problem
          -------

          For reliability to work (see below), the reader must have some
          commitment from the writer that it will receive all samples past
          a
          certain sequence number. That sequence number defines the
          beginnning
          of the reliable range. For durable reliable readers, the reliable
          range begins at one. Non-durable readers have a choice. The
          current
          implementation picks the lastSN + 1 offered by the writer based
          on the
          first heartbeat it receives.

          However, given network delay, reordering, etc., the minimum
          sequence
          number the writer has for reliable resend may be greater than the
          sequence number picked by the reader. In this case, the reader
          will
          receive a gap to catch up. If the reader has received some data
          after
          the beginning of it's reliable range, then that data will be
          delivered
          (still in order but stopping, otherwise, no gap). If there is
          gap,
          the application reader uses monotonically increasing counter,
          then it
          detect a missing sample.

          Solution
          --------

          The writer and the reader have to agree on the beginning of the
          reliable range.  The writer has to offer a starting sequence
          number (through a heartbeat) and the reader has to accept it
          (through
          an acknack). In order to offer, the writer must not allow changes
          to
          the send buffer until the reader has accepted the offer. This is
          accomplished by not removing data from the send buffer while
          offers
          are outstanding, i.e., there are pre-associated readers. The
          reader
          has to accept the sequence number (or a subsequent sequence
          number)
          offered by the writer. To do this, logic was added to initialize
          the
          reader on a directed heartbeat.  This breaks interoperability.

          Note
          ----

          There are a couple of use cases where agreement on the beginning
          of
          the reliable range is important. First, tests and applications
          often
          use the publication matched status as a signal that every
          subsequent
          sample will fall in the reliable range. Thus, there is a
          guarantee
          that subsequent samples will be delivered to the reader. Second,
          the
          participant volatile secure (PVS) writer for DDS Security is
          reliable
          but not durable. Thus, the PVS writer must defer writting samples
          until the reliable range has started. Thus, the PVS writer uses
          the
          same technique as publication matched status.

Wed Dec 09 13:26:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dc02563832a4c65dcdae29765fcdda06e2ee1075

          Merge pull request #2145 from mitza-oci/accesscontroltest

          AccessControl: shut down RevokePermissionsTask cleanly

Wed Dec 09 13:26:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6f3f4e90048415c92e06527460f05156989b4ca2

          Merge pull request #2143 from
          simpsont-oci/fix_client_stop_reader_cleanup

          Do full cleanup for RtpsReaders in RtpsUdpDatalink::client_stop()

Wed Dec 09 13:25:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a0e823dbe57b9462f410015cf81ea6042e193212

          Merge pull request #2139 from jwillemsen/jwi-showbuildconfig

          Log the VERSION.txt in show_build_config.pl

Wed Dec 09 03:35:05 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 1ed3eb8f2b0aecaca1140ab3f0b6f96e4fc4670b

        * performance-tests/bench_2/builder/ConfigSectionManager.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.cpp:
        * performance-tests/bench_2/builder/PublisherManager.cpp:
        * performance-tests/bench_2/builder/Topic.cpp:

          Apply suggestions from code review

          Co-authored-by: Son Dinh <technology789@gmail.com>

Wed Dec 09 03:19:31 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 807e2fe712836c10cc72b0e45040cf3c85d14810

        * tests/DCPS/DomainRange/config.ini:

          Update config.ini with second config.

Wed Dec 09 03:16:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 637622434bee6a9e26caf89d9dff01b70d6c9243

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Fixes for test failures.

Tue Dec 08 23:50:43 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit ba6b8e903797051ebc9e1fbcd76fc00f052e0a61

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * tests/security/AccessControlTest.cpp:

          Added TearDown function to call shutdown to resolve access
          violation.

Tue Dec 08 23:46:08 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c94328907f5ff3c378fd7546f466c34bd0cc83d3

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          fix best effort reader cleanup

Tue Dec 08 23:27:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cadf2986c282910fd98b9b9b0f160f738efabdbb

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          do full cleanup for readers in client_stop()

Tue Dec 08 21:56:21 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 7487eb5f04154bf68da95b4527fa63480828523f

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Test change for wchar.

Tue Dec 08 20:33:43 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ec77cfdb8a82f3d76135fc9ae2c1f92018bf271c

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Add #include

Tue Dec 08 18:59:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3088e76cb09b6f470b8cb9496b537a9696993888

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:

          Revert change.

Tue Dec 08 18:42:36 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c0210c2aaaaa9598606c338421e42bbe5f6cd540

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Update DomainRange test.

Tue Dec 08 18:42:20 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ce7d0f929ccd89162f9c4be7bf8f4e14d9e50e52

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Update transport templates to support binding to alternate
          configs

Tue Dec 08 14:56:54 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit c23678560184ec4ceac6be9f91005b081cbf692b

        * tools/scripts/show_build_config.pl:

          Log the VERSION.txt so that we also can easily the user OpenDDS
          version

          * tools/scripts/show_build_config.pl:

Tue Dec 08 01:11:54 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 26969498ab7d5ea8990cddbb480dc3bc7426537b

        * performance-tests/bench_2/builder/ConfigSectionManager.cpp:
        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataWriter.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.cpp:
        * performance-tests/bench_2/builder/DiscoveryManager.cpp:
        * performance-tests/bench_2/builder/ListenerFactory.h:
        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/builder/Publisher.cpp:
        * performance-tests/bench_2/builder/PublisherManager.cpp:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/TransportInstance.cpp:
        * performance-tests/bench_2/builder/TransportInstanceManager.cpp:
        * performance-tests/bench_2/builder/TypeSupportRegistry.cpp:

          style consistency cleanup

Mon Dec 07 23:41:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3c3b4dca9ee3e4423aa662ed764df14a86e58773

          Merge pull request #2137 from mitza-oci/thrasher-durable-lst

          Removed durable Thrasher from dcps_tests.lst

Mon Dec 07 23:40:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 121f4fb30d9c786e5305747d6ae09bd75db0a7a8

          Merge pull request #2136 from
          jrw972/lost-spdp-prevents-secure-discovery

          Lost SPDP prevents secure discovery

Mon Dec 07 23:40:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ac876f07dbeae0d9405da393a86ccb83dd3190b4

          Merge pull request #2135 from mitza-oci/master

          NEWS for 3.15

Mon Dec 07 23:40:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0a156b75f7d3ee48d603506d23da6d0277e3f01e

          Merge pull request #2132 from jrw972/rtps-nak-responses

          Durable RTPS writers may send gaps

Mon Dec 07 19:53:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 735e36a3cab38b1eba12e9f79980620ff777d392

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Add missing continue and remove unnecessary ones

Mon Dec 07 15:22:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c2fda80bdaf589656d6bce39555824ae91582d59

        * bin/dcps_tests.lst:

          Removed durable Thrasher from dcps_tests.lst

          Currently the test sets up QoS in a way that not every sample is
          guaranteed.
          A subsequent PR will update the QoS and revert this change to
          reinstate the tests.

Mon Dec 07 14:07:31 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 9c3901683f46f282be0a30e5cef6246972cb0aa4

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Wchar fix. Also store config & inst name only if bind_config()
          succeeds.

Mon Dec 07 14:46:07 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 029c661344d587ee534538ff08303e33104fc3e4

        * dds/DCPS/RTPS/Spdp.cpp:

          Lost SPDP prevents secure discovery

          Problem
          -------

          RtpsRelay deployments send directed SPDP announcements with a
          very
          long period. Furthermore, they send one (and only one)
          announcement
          when a client is first discovered. If that announcement is lost,
          discovery will certainly stall and fail.

          Solution
          --------

          Send an SPDP announcement with an authentication resend. The
          client
          will send SPDP to the relay frequently so the relay should
          discover
          the client in a timely manner. The relay will start
          authentication
          resends, which happen with a very small period, so the client
          will
          eventually discover the relay.

          The non-secure case is not handled in this commit.

Sat Dec 05 01:00:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b503b1670057a59fc0687893d25da252e8a2628d

        * dds/DCPS/DisjointSequence.cpp:
        * dds/DCPS/DisjointSequence.h:
        * dds/DCPS/transport/framework/TransportSendBuffer.h:
        * dds/DCPS/transport/framework/TransportSendBuffer.inl:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * tests/DCPS/UnitTests/DisjointSequence.cpp:

          Durable RTPS writers may send gaps

          Problem
          -------

          The `send_and_gather_nack_replies` function attempts to not
          send (undirected) gaps if a durable reader is detected.  This is
          flawed in two ways. First, a durable writer should never send an
          undirected gap because it cannot know when a potential reader
          will
          come online. Second, the existing logic only checks readers that
          need
          a reply instead of all of the readers when making the
          determination.

          Solution
          --------

          Re-write `send_and_gather_nack_replies` so that naks for directed
          data
          receive a directed reply (gap or data) and naks for undirected
          data
          receive receive an undirected reply. Directed data includes
          durable
          resends and messages from the participant volatile secure writer.
          The
          code for responding to naks for durable data will/should not be
          executed until the logic that processes acknacks is updated.

Mon Dec 07 14:13:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7c65d4f23faba2246d0a3847c4d0855ee4c10550

        * NEWS.md:

          NEWS for 3.15

Mon Dec 07 02:09:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 57cffa0adf149110d9310f2d81ac57cfa2c63cd6

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Change how delete_participant() removes dynamic transport
          cfg/inst.

Mon Dec 07 03:35:56 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9497fd9c6e4187c72c202997f537720d7d6cf8e3

        * performance-tests/bench_2/worker/main.cpp:

          allow workers to specifically request posix aio proactor

Mon Dec 07 00:54:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 77e129812aaef732e94466db7d74128206071a2d

        * tests/DCPS/DomainRange/config.ini:
        * tests/DCPS/DomainRange/run_test.pl:

          Update config and test script.

          Update config and test script to avoid multicast address overlap
          issues with 5 readers.

Mon Dec 07 00:53:19 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3cf5d0e86c711a6926b1219ecfc73c0acc83f630

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Set TOTAL_READERS = 5. Clean up test.

Mon Dec 07 00:51:56 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit de573c3d7cd33a3ed46f49d56e70ff91871894e6

        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * dds/DCPS/transport/framework/TransportRegistry.inl:

          Dynamic transport creation returns unique config and instance
          info.

Mon Dec 07 00:48:00 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit debec63d8c4eefca4f21e23b39518c032e41481e

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:

          Changes from review, and have DP store dynamic cfg and inst name.

Mon Dec 07 00:45:59 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 979395d4db84791b439a8a3ebd78b7de9adac702

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Rename function.

Sat Dec 05 21:23:23 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 0bd4780a979cf278af82273fcea9697abc335d85

        * performance-tests/bench_2/worker/configs/simple_action_config.json:

          revert write frequency in example config

Sat Dec 05 21:16:15 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 297ac74bc53c3384bba7a8bec10060aa3ba6ae91

        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_config.json:

          adding option for manual rescheduling to WriteAction

Sat Dec 05 20:56:58 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 255f406abc422787a49c6bdfd760ebe0083153d5

        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:

          fix wait_for_discovery logic & signaling

Sat Dec 05 20:56:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 4433ac021726420de1db498e09460d7e530827a6

        * performance-tests/bench_2/node_controller/main.cpp:

          another hang fix for sigints, this time post-signal

Sat Dec 05 20:55:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 474f596bfd80c1a0df1005ad5fedee1c53edf107

        * performance-tests/bench_2/builder/ConfigSectionManager.cpp:

          avoid considering or displaying empty name / value config pairs

Sat Dec 05 20:54:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7e39c8f5c7437f9fa7e20137b8fe8cc98c9feafa

        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json  performance-tests/bench_2/worker/configs/simple_content_filtered_topics_config.json:

          rename config for clarity

Sat Dec 05 15:51:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 39aebfec0fe766f8dcc66446cb8dc0e9dc23835f

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Check before deleting dynamically created transport

Sat Dec 05 14:24:50 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 9503685f12b419a8249aa5dfdfee4458dda9f1a2

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Revise Domain Range test.

Sat Dec 05 14:24:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ad4c757d57649988af176ddae40a8b77d5467885

        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/DomainRange/DataReaderListenerImpl.h:

          Fix memory leak in domain range test listener.

Sat Dec 05 14:23:05 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit af7e06a1cf6a88c44dcf9c6124ee6e7f357392d2

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Clean up dynamic transport configs and instance

          Remove dynamic transport configuration and instances when the
          participant is deleted.

Sat Dec 05 06:46:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c65ae9a4dca8e6bc2bb19ba8215de8012f3faebd

          Merge pull request #2131 from
          jrw972/rtps-relay-directed-heartbeats

          Application participant sends non-directed heartbeats

Sat Dec 05 06:46:19 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 210ae29ba886703980199231100dddedf91abc0f

          Merge pull request #2127 from jrw972/orphaned-rtps-remotes

          Pending RTPS writers/readers orphaned

Fri Dec 04 23:23:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b2a134ac16822f3382c91f5f219bcb332f85d188

        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Application participant sends non-directed heartbeats

          Problem
          -------

          The reliable SPDP writer in the application participant of the
          RtpsRelay can send undirected heartbeats that will be dropped by
          the
          relay.

          Solution
          --------

          Force directed heartbeats for the reliable SPDP writer. This is a
          work-around that may be removed in the future if the reliable
          SPDP
          writer is disabled in the application participant.  Otherwise,
          additional configuration plumbing will be needed to accomplish
          the
          same result.

Fri Dec 04 15:37:38 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit dc972a4d84739e1314b3d57e8d3f2ef45d043e63

        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/multicast/MulticastTransport.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/DCPS/transport/shmem/ShmemTransport.cpp:
        * dds/DCPS/transport/shmem/ShmemTransport.h:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.h:
        * dds/DCPS/transport/udp/UdpTransport.cpp:
        * dds/DCPS/transport/udp/UdpTransport.h:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          Pending RTPS writers/readers orphaned

          Problem
          -------

          When a reliable TransportClient using RTPS associates with a
          reliable
          peer that peer is put in a pending state. If the client
          disassociates
          with the peer while it is still pending, then it is not cleaned
          up in
          the datalink.  Consequently, the remote peers linger and consume
          resources trying to associate.

          Solution
          --------

          Inform the datalink that the pending peer should be
          disassociated.

Thu Dec 03 23:02:21 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 103176d615f3347484122be17c581add30a10852

        * performance-tests/bench_2/builder/BuilderProcess.cpp:
        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.h:
        * performance-tests/bench_2/builder/DataWriter.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.h:
        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/builder/Participant.h:
        * performance-tests/bench_2/builder/ParticipantListener.h:
        * performance-tests/bench_2/builder/ParticipantManager.cpp:
        * performance-tests/bench_2/builder/ParticipantManager.h:
        * performance-tests/bench_2/builder/Publisher.cpp:
        * performance-tests/bench_2/builder/Publisher.h:
        * performance-tests/bench_2/builder/PublisherListener.h:
        * performance-tests/bench_2/builder/PublisherManager.cpp:
        * performance-tests/bench_2/builder/PublisherManager.h:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Subscriber.h:
        * performance-tests/bench_2/builder/SubscriberListener.h:
        * performance-tests/bench_2/builder/SubscriberManager.cpp:
        * performance-tests/bench_2/builder/SubscriberManager.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder/TopicListener.h:
        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:
        * performance-tests/bench_2/worker/WorkerParticipantListener.cpp:
        * performance-tests/bench_2/worker/WorkerParticipantListener.h:
        * performance-tests/bench_2/worker/WorkerPublisherListener.cpp:
        * performance-tests/bench_2/worker/WorkerPublisherListener.h:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.cpp:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.h:
        * performance-tests/bench_2/worker/WorkerTopicListener.cpp:
        * performance-tests/bench_2/worker/WorkerTopicListener.h:

          clean up various bench files for better usage of DDS listeners
          and ability to detach them cleanly everywhere

Thu Dec 03 23:01:10 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 777da769a1ef77334d2ba8fb290dbe50ac82ae42

        * performance-tests/bench_2/run_test.pl:

          add sm20 to run_test.pl

Thu Dec 03 23:00:39 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 10a7c8ec1c527969163b2526b3ca557001b8dc1c

        * performance-tests/bench_2/test_controller/main.cpp:

          add 'none' option to --override-bench-partition-suffix on
          test_controller to allow tests to be more easily joinable by
          outside processes

Thu Dec 03 22:58:25 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit dc51b2986f622070832ce6c175fe65c5ef0af36b

        * performance-tests/bench_2/control_opendds_config.ini:

          Add DCPSPendingTimeout to bench control plane config for shutdown
          reliability

Thu Dec 03 13:10:31 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 861cecd821bc935f7fe8e5ecbafdb2b8754d3141

          Merge pull request #2123 from
          simpsont-oci/fix_node_controller_hangup

          Bench2: Fix Signal Handling Hang-Up in Node Controller

Thu Dec 03 03:11:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e44618d332e98d22397c0b352dacb70e7cd26fe4

          Merge pull request #2122 from
          simpsont-oci/initialize_remove_result

          Initialize result value in
          RtpsUdpDataLink::RtpsWriter::remove_result()

Thu Dec 03 03:11:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c2350c9c414cbcdcabe853094916e10073c47866

          Merge pull request #2085 from
          ClaytonCalabrese/opendds3_15_failtojoinmulticast

          Failed To Join Multicast (IPv6)

Thu Dec 03 03:11:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 39199574524bb807085dce3acbcad7c9e9cbd29f

          Merge pull request #2077 from sonndinh/bench2_specify_node

          Bench2: Add ability to specify node for allocation

Wed Dec 02 22:44:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 2702d9db056201d7dd88fa259de387889b96d086

        * performance-tests/bench_2/node_controller/main.cpp:

          Due to signal handling, move creating of WorkerManager to after
          reception of full scenario description to avoid hangups. Also
          check for signals to hasten quick and speedy shutdown

Wed Dec 02 20:41:30 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ff9e133634443577e90ed83bd26bb7476a50465a

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          initialize result in RtpsUdpDataLink::RtpsWriter::remove_result()

Wed Dec 02 19:36:23 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 2791ab24da14d0f3b8972521c204ea055afad75a

        * dds/DCPS/RTPS/Spdp.cpp:

          comment explainign static lock and spacing fixes

Wed Dec 02 19:27:48 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit ce85840c1458c3389499280d26bce9c5f8b79d87

        * dds/DCPS/RTPS/Spdp.cpp:

          Removal of ipv4 lock. Removed artificial scope as not needed

Wed Dec 02 17:30:47 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit f1c32f7aa66d32220c93faa4c48cd3e0ff816d4d

        * performance-tests/bench_2/test_controller/unit_tests/unit_tests.mpc:

          Use mpc base files

Wed Dec 02 15:06:36 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit af8e1a309226e26ddc61b9f207271a653a7ddde9

        * tests/cmake_integration/Nested_IDL/run_test.pl:

          Add Nested_IDL/run_test.pl

Wed Dec 02 02:01:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 76c549a724c98e0f3eea1fd905986ac7df288011

          Merge pull request #2116 from jwillemsen/master

          Const additions

Wed Dec 02 02:01:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c4515186304f143b8b0bd5864e972ef188da05f8

          Merge pull request #2117 from
          simpsont-oci/fix_remove_sample_deadlock

          Fix locking / unlocking for RtpsUdpDatalink remove samples

Wed Dec 02 02:00:54 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2b2d40ee73d330f09ebc21f02557666a23ec48f7

          Merge pull request #2088 from jrw972/durable-thrasher

          Thrasher test lacks durability scenarios

Wed Dec 02 02:00:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e93fc9b97b615aa93daf57659e08fdc98e479e57

          Merge pull request #2115 from jrw972/rtps_handle_initial_held

          Rtps handle initial held

Wed Dec 02 00:56:34 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 32b7f5a8ad52b270c19803b7b4f4d14635d75757

        * cmake/api_macros.cmake:

          Update check for IDL files with the same name.

          Remove duplicate path/file entries prior to checking for files
          that have the same name.

Tue Dec 01 23:48:11 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 632f011e545828e70ae420ac630ca5329ecdf4e1

        * tests/cmake_integration/CMakeLists.txt:
        * tests/cmake_integration/Nested_IDL/CMakeLists.txt:
        * tests/cmake_integration/run_ci_tests.pl:

          Add Nested_IDL test to ci tests.

Tue Dec 01 23:47:38 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 777a1f0de21fdb2398d7d897076fb40b6fcb344f

        * cmake/api_macros.cmake:

          Add check for IDL files with the same name.

Tue Dec 01 22:01:17 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ee015363454b049b6111cf07ff83e4850c6ed4a1

        * tests/cmake_integration/idl_test/.gitignore  tests/cmake_integration/Nested_IDL/.gitignore:
        * tests/cmake_integration/idl_test/CMakeLists.txt  tests/cmake_integration/Nested_IDL/CMakeLists.txt:
        * tests/cmake_integration/Nested_IDL/CMakeLists_duplicate_filename.txt:
        * tests/cmake_integration/idl_test/ecu.cpp  tests/cmake_integration/Nested_IDL/ecu.cpp:
        * tests/cmake_integration/idl_test/ecu.idl  tests/cmake_integration/Nested_IDL/ecu.idl:
        * tests/cmake_integration/idl_test/ecu.mpc  tests/cmake_integration/Nested_IDL/ecu.mpc:
        * tests/cmake_integration/idl_test/engine/engine_specs.idl  tests/cmake_integration/Nested_IDL/engine/engine_specs.idl:
        * tests/cmake_integration/idl_test/engine/engine_stats/fuel_stats.idl  tests/cmake_integration/Nested_IDL/engine/engine_stats/fuel_stats.idl:
        * tests/cmake_integration/Nested_IDL/extra/engine_specs.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_specs.idl  tests/cmake_integration/Nested_IDL/transmission/transmission_specs.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_states.idl  tests/cmake_integration/Nested_IDL/transmission/transmission_states.idl:

          Rename CMake IDL test.

Tue Dec 01 21:48:09 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 78a6cd36700dbb94991c94e9542fc5c7ed160e37

        * dds/idl/be_global.h:
        * tests/cmake_integration/CMakeLists.txt:
        * tests/cmake_integration/idl_test/.gitignore:
        * tests/cmake_integration/idl_test/CMakeLists.txt:
        * tests/cmake_integration/idl_test/ecu.cpp:

          Changes from review.

Tue Dec 01 20:59:00 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 4120685b86a16ce899024eabdb21feda46d95509

        * performance-tests/bench_2/test_controller/unit_tests/unit_tests.mpc:

          Minor update

Tue Dec 01 20:42:23 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 376a6e5af48c8a69097ee3eea88a9d7f8e4fcd60

        * performance-tests/bench_2/test_controller/DdsEntities.h:
        * performance-tests/bench_2/test_controller/unit_tests/ScenarioAllocationTest.cpp:

          Minor update

Tue Dec 01 20:24:52 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 69debca51847d4abd0981698359750d8954719ac

        * performance-tests/bench_2/test_controller/DdsEntities.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.h:
        * performance-tests/bench_2/test_controller/unit_tests/.gitignore:
        * performance-tests/bench_2/test_controller/unit_tests/ScenarioAllocationTest.cpp:
        * performance-tests/bench_2/test_controller/unit_tests/run_test.pl:
        * performance-tests/bench_2/test_controller/unit_tests/unit_tests.mpc:

          Unit test for scenario allocation

Tue Dec 01 19:44:45 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5c65b4f8bcf3df9c3103451f905816d93b52b2a1

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Deliver held data after startup callbacks

Tue Dec 01 16:53:24 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 1443e3a919295aedf5afb9a91e006a725535e442

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          fix locking / unlocking in remove_sample and remove_all_msgs

Tue Dec 01 15:29:42 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 96c5eaeeea734eb3362995db0d6d5b7c5c4644d2

        * tests/DCPS/Thrasher/ParticipantTask.h:
        * tests/DCPS/Thrasher/Publisher.cpp:

          Seed random number generator

Tue Dec 01 15:10:23 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit be4b049eecdd577b9ed23ab00fa13f389a2ce164

        * tests/transport/rtps_reliability/rtps_reliability.cpp:

          Fix test

Tue Dec 01 14:55:10 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 1f821db94fdefd51ef29149fee48a4a001e69a41

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Update dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Tue Dec 01 14:23:14 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit f4b3a7f912613bfca87d17d8baeb108f525f73bc

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DiscoveryBase.h:

          Const additions

          * dds/DCPS/DataReaderImpl.cpp:
          * dds/DCPS/DiscoveryBase.h:

Tue Dec 01 07:45:41 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 62f900d0d2c33552b209ecc9fb3ace44145ad02b

          Fixed merge conflicts

Tue Dec 01 04:49:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2bd74c5457911e3ec368fefe4c52878e8bb3d7d6

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Durable writers send non-directed gaps

          Problem
          -------

          A durable writer should never send a non-directed gap unless it
          is a
          gap for all readers because a durable reader could lose data.
          This
          currently happens in two places in the RTPS transport
          corresponding to
          the two places that gaps are generated.

          The first is inserting a gap due to a discontinuity in sequence
          numbers from the TransportClient (DataWriter). The condition of
          not
          sending a gap if skipping sequence number 1 is not sufficient.
          This
          condition was inserted to handle start up situations where data
          is
          being written while the first reader is associating. This
          situation
          of the first reader associating may happen multiple times.

          The second is gaps generated in response to an acknack. This
          logic is
          generally unsound as the decision to send undirected gaps is
          based on
          whether a subset of the current readers is expecting durable
          data.
          This problem is not addressed in this commit.

          Solution
          --------

          Don't insert undirected gaps for durable writers when the
          sequence
          number jumps.

Tue Dec 01 04:07:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d8870a5100a4d4c3a76d1f7e4b7a978e7585b700

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Delivering held data in RTPS is asynchronous

          Problem
          -------

          The decision to deliver held data results in an event handler
          being
          scheduled with the reactor. This puts the system in a state where
          it
          may deliver samples received after the event handler is scheduled
          but
          before it executes.  This results in out-of-order delivery for
          reliable readers.

          Solution
          --------

          Use an RAII job to deliver held data immediately.

Tue Dec 01 04:20:15 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit bd2894270312e643821dfaf22e14b4b787c04404

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/unit_tests/ScenarioAllocationTest.cpp:

          Adding unit test

Mon Nov 30 23:23:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 31cd534f3f3043772da4d9a60b734a64a7129ad7

          Merge pull request #2113 from
          pollocktoci/Enabled-additional-Azure-Pipeline-DCPS-Messenger-tests

          Modified Azure Pipeline to run DCPS Messenger tests on all Linux
          and …

Mon Nov 30 23:23:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9c1d31fe62a00bae4d8bf408447967ac60035bc9

          Merge pull request #2112 from jwillemsen/jwi-commmand

          Typo, command instead of commmand

Mon Nov 30 23:23:21 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c258a539336f592c6e13d7ff1459dee6da066bb1

          Merge pull request #2109 from
          ClaytonCalabrese/opendds3_15_monitor_test_delay

          Monitor Test Too Few Messages Received

Mon Nov 30 23:23:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b4961345a2a866ca09ea685fac130f14b80d00b3

          Merge pull request #2108 from
          jwillemsen/jwi-participantlocationtopic

          Updated ParticipantLocationTopic test to use ACE_DEBUG/ACE_ERROR
          and …

Mon Nov 30 23:22:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit aace636c7b09d3849c07e34762508d0202210057

          Merge pull request #2072 from jwillemsen/jwi-dplogging

          Make all domain participant logging dependent on the log level

Mon Nov 30 22:25:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f0e2ba427a7dd29afad6ffaa8abdb094ba74437f

        * bin/dcps_tests.lst:

          Updated test list

Mon Nov 30 19:41:36 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 7644eb3ecbf55a97a4d0195e308ae2bb88045b10

        * azure-pipelines.yml:

          Disabled DCPS Messenger Azure Pipeline tests and examples for
          some configurations

Mon Nov 30 16:02:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ff5d4572e80379127611e6affa2643829dfde7c4

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Fix initial interaction between WriterInfo's recvd_ and held_

Mon Nov 30 16:01:22 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 509eb97c4e47690f2bea1b9dcb78a64a65a03d2a

        * azure-pipelines.yml:

          Modified Azure Pipeline to run DCPS Messenger tests on all Linux
          and macOS configurations.

Mon Nov 30 15:48:54 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 89057f873fb248e66ca34ee4025113f9838d2d9d

        * bin/run_dds.pl:
        * examples/DCPS/DistributedContent/main.cpp:
        * tools/repoctl/repoctl.cpp:

          Type, command instead of commmand

          * bin/run_dds.pl:
          * examples/DCPS/DistributedContent/main.cpp:
          * tools/repoctl/repoctl.cpp:

Mon Nov 30 03:17:08 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 3f8e3a5add3b20c1e6c198f726ecf96a68b3c328

        * performance-tests/bench_2/test_controller/AllocationHelper.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Fix compile error

Mon Nov 30 00:35:50 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 242f739fccac2246c8f0b3831e4a2e1edb3bbc20

        * performance-tests/bench_2/test_controller/AllocationHelper.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Cleanup

Sun Nov 29 23:31:41 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 89e59dd17e831ff073ff4b7e98fa5903a801a592

        * performance-tests/bench_2/test_controller/AllocationHelper.cpp:
        * performance-tests/bench_2/test_controller/AllocationHelper.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Refactoring

Fri Nov 27 17:17:21 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 5a6703f7760a69367651f2ec3f27186e92d30454

        * dds/DCPS/RTPS/Spdp.cpp:

          spelling error

Thu Nov 26 02:23:19 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 59c584b157a011805217be6d18d284a7d4df3b65

        * docs/internal/bench2.rst:
        * performance-tests/bench_2/test_controller/AllocationHelper.cpp:
        * performance-tests/bench_2/test_controller/AllocationHelper.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Per review changes & refactoring

Thu Nov 26 00:35:49 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 149bf4d144f0797a088ada5d5500d5191c543198

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          switching over to static lock fix rather than reconnect

Thu Nov 26 00:23:42 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 3cc4b64ef265c4dc59eefd76a6259b6890d48de9

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          revert to do alternative fix

Wed Nov 25 21:46:13 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 675b8221c3a7a9c32c32d37b12157539157c562e

        * tests/DCPS/Monitor/publisher.cpp:
        * tests/DCPS/Monitor/subscriber.cpp:

          ACE_OS:: added to sleep to fix vs problems

Wed Nov 25 19:16:31 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 73c16b87913edbf75891df07ad1a9146cd23f4c4

        * tests/DCPS/Monitor/publisher.cpp:
        * tests/DCPS/Monitor/run_test.pl:
        * tests/DCPS/Monitor/subscriber.cpp:

          fixes to monitor test to resolve startup delays recently added.

Wed Nov 25 11:32:48 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit ed3fb075921b9346bb01640d61e4c9712a0314c4

        * tests/DCPS/ParticipantLocationTopic/publisher.cpp:
        * tests/DCPS/ParticipantLocationTopic/subscriber.cpp:

          Updated ParticipantLocationTopic test to use ACE_DEBUG/ACE_ERROR
          and also log an error when the check of all locations failed

          * tests/DCPS/ParticipantLocationTopic/publisher.cpp:
          * tests/DCPS/ParticipantLocationTopic/subscriber.cpp:

Wed Nov 25 07:21:52 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 861678cfb05c2e981d8300532bcf1f0729d2925d

        * dds/DCPS/DomainParticipantImpl.cpp:

          Check new security_debug.new_entity_error in more places

          * dds/DCPS/DomainParticipantImpl.cpp:

Wed Nov 25 07:18:01 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1d898972da46056e1fea6c0b4a786718aeb6b0f2

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/debug.cpp:
        * dds/DCPS/debug.h:
        * tests/security/attributes/run_test.pl:

          Add new debug flags new_entity_warn new_entity_error which are
          check in the domain participant

          * dds/DCPS/DomainParticipantImpl.cpp:
          * dds/DCPS/debug.cpp:
          * dds/DCPS/debug.h:
          * tests/security/attributes/run_test.pl:

Wed Nov 25 07:10:14 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 94a9e502ffbf55b36a7016068b7ca4730710f8c8

          Merge branch 'master' into jwi-dplogging

Wed Nov 25 00:55:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 533810adb9e7ca7ca4217b61db06cb7e7ae22416

          Merge pull request #2107 from
          simpsont-oci/fix_guid_generation_seed

          Fix GuidGenerator Seed Issues

Wed Nov 25 00:55:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0968a549c7612a5a95888c2ea2d05a6237d4da87

          Merge pull request #2106 from jonesc-oci/mtonic-cond

          Configure QueueTaskBase ACE_Condition to use monotonic time.

Tue Nov 24 21:18:31 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ded748d3ae2329da53b66d78127753c42cf851ca

        * dds/DCPS/RTPS/GuidGenerator.cpp:

          Fix GuidGenerator seed issues

Tue Nov 24 19:28:16 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 490bc5e6ad6486f93d66fc1b333161224976999e

        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Configure ACE_Condition to use monotonic time.

          This fixes an internal thread status monitoring high cpu usage
          issue.

Tue Nov 24 17:14:11 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 453e6e890f771a1ce8e2919a18a9f6a4653d780b

        * dds/DCPS/DomainParticipantImpl.cpp:

          Make security logging conditional on
          DCPS::security_debug.auth_warn

          * dds/DCPS/DomainParticipantImpl.cpp:

Tue Nov 24 16:14:34 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 50490888f92d6be0cd80f921942a6b86ec7984f2

        * dds/DCPS/DomainParticipantImpl.cpp:

          Revert indent change

          * dds/DCPS/DomainParticipantImpl.cpp:

Wed Nov 18 08:11:03 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 84654a807326536e7266c28d0f121f1e55ba3f99

        * dds/DCPS/DomainParticipantImpl.cpp:

          Formatting changes

          * dds/DCPS/DomainParticipantImpl.cpp:

Wed Nov 18 08:02:49 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 46025dc538f77aee45deca637055272263d35209

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Nov 18 08:02:41 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 4c19c4aa03ba6cf3060d27cf5cf303fc3864d466

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Nov 18 08:02:34 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit bf17276fd1fe7e6a4ec7d4570e5c584518b7581c

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Nov 18 08:02:25 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1cc16fc3c8fe5287d107a8dc96bd727aab5457c3

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Wed Nov 18 08:02:15 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit ab9e5a87f5a73141d7c0044b95d4d0ec53697f40

        * dds/DCPS/DomainParticipantImpl.cpp:

          Update dds/DCPS/DomainParticipantImpl.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Nov 17 17:07:00 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit f092b2b759b9fc52b12af5767f469f04366260da

        * dds/DCPS/DomainParticipantImpl.cpp:

          Revert logging line which was already dependent on a
          security_debug debug check

          * dds/DCPS/DomainParticipantImpl.cpp:

Tue Nov 17 15:50:42 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 157301dec7f870cd89f14d0c06247fbddfc4cd3e

        * dds/DCPS/DomainParticipantImpl.cpp:

          Make all domain participant logging dependent on the log level so
          that it is silent when logging is enabled which helps user code
          which does error testing

          * dds/DCPS/DomainParticipantImpl.cpp:

Tue Nov 24 15:46:46 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit c381149376d15f60246c5dca771fe0b55133b02e

          Merge branch 'master' into bench2_specify_node

Tue Nov 24 14:40:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e1cf7869a5f0257159e3ea735a288254164f2d4d

          Merge pull request #2105 from
          simpsont-oci/bench_ci_dual_transport_cleanup

          Bench CI Dual Transport and Warning Cleanup

Tue Nov 24 05:49:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ffd9275d3bcc554a942d8f3bc7e55957e38a8aa5

          Merge pull request #2104 from mitza-oci/master

          shmem and multicast cleanups post-2034; updated NEWS and test
          list

Tue Nov 24 05:48:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 68004e0e976bc4304b939dd658ad354b046d167f

          Merge pull request #2101 from jwillemsen/jwi-deadline

          Removed Idl_Files sections, not needed

Tue Nov 24 05:48:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 514cb2e8eef053313abb348c57e7fdc706595ac5

          Merge pull request #2100 from jwillemsen/jwi-docutype

          Fixed typo in BuiltInTopic test's readme

Tue Nov 24 04:52:06 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 035a099385b3f4854b0086f8ec7c693400c22066

        * performance-tests/bench_2/worker/Action.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.cpp:

          Clean up Bench warnings

Tue Nov 24 04:50:10 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f9fbc552a3c2b2916bf4e56949ac280f864e6768

        * performance-tests/bench_2/builder/TransportInstance.cpp:
        * performance-tests/bench_2/example/config/worker/ci_mixed_daemon.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_master.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_worker.json:

          Update Bench ci_mixed scenario workers to cleanly use dual
          transports and avoid multicast address collisions

Mon Nov 23 23:52:48 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit df96fd61146e0ccff03e5ee6b26b84c8a7c6a79f

        * dds/DCPS/transport/multicast/MulticastTransport.cpp:

          multicast: support loopback connection

Mon Nov 23 23:37:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5eb1bc298b1835840d9c780d03a29a5432ce647f

        * tests/transport/simple/PubDriver.cpp:

          transport test PubDriver: restored previous behavior for shmem

Mon Nov 23 23:36:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b212214fe5fa0a3fa861a3b18eadd9524e928b00

        * NEWS.md:

          Added 3.14.1 section in NEWS

Mon Nov 23 23:36:14 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a90814899e63c8bce2f3e23a460252940fd7b114

        * bin/dcps_tests.lst:

          conditional exclusions for tests

Mon Nov 23 19:04:04 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 40e757dc4453af3c0c5c9098623b5702dd994079

        * docs/internal/bench2.rst:

          More docs fix

Mon Nov 23 18:56:56 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 0ad55bc9554090cb1aae2292523933eed77d56ba

        * docs/internal/bench2.rst:

          Fix docs

Mon Nov 23 17:17:06 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 04e2253d66649ff2c01480ad4b59db78d85efdaa

        * docs/internal/bench2.rst:
        * performance-tests/bench_2/example/config/scenario/simple_tags.json:
        * performance-tests/bench_2/run_test.pl:

          Update test and docs

Mon Nov 23 15:52:23 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit beba0877b7530e44f294b82066cb95c61112d79a

        * tests/DCPS/BuiltInTopic/README:

          Fixed typo in readme

          * tests/DCPS/BuiltInTopic/README:

Mon Nov 23 15:51:54 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 43c6e352591c24db765ed7067c8e9a9dba96f4a2

        * tests/DCPS/Deadline/Deadline.mpc:

          Removed Idl_Files sections, not needed

          * tests/DCPS/Deadline/Deadline.mpc:

Mon Nov 23 15:51:20 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 5e5791d8fcf774b4915b53709e9c56b120ac2acd

          Merge branch 'master' of
          https://github.com/objectcomputing/OpenDDS into master

Sun Nov 22 01:27:51 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit fa4f097752751bfc6cb6f7f4f03106441091c735

        * bin/dcps_tests.lst:
        * tests/DCPS/Thrasher/ParticipantTask.cpp:
        * tests/DCPS/Thrasher/ParticipantTask.h:
        * tests/DCPS/Thrasher/Publisher.cpp:
        * tests/DCPS/Thrasher/Subscriber.cpp:
        * tests/DCPS/Thrasher/run_test.pl:

          Thrasher test lacks durability scenarios

          Problem
          -------

          The Thrasher tests create T reliable writers in T participants
          and 1
          reliable subscriber. The writers write N messages and the reader
          checks that all messages are received.  The test stresses
          discovery (especially RTPS) and reliability including features
          like
          waiting for acknowledgements and waiting for match status.
          Durability
          is implicitly tested through discovery. The test could be used to
          diagnose problems with durability if it were extended.

          Solution
          --------

          Add flags to enable durability. When the writer is durable, it
          either
          1) waits for a match and then writes data or 2) writes data and
          then
          waits for a match.

Sun Nov 22 02:38:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 37f2c4f18c1aa802ead144427e9a276501e884a3

          Merge pull request #2087 from jrw972/avoid-durable-gap

          Durable writers can skip initial sequence numbers in RTPS

Sat Nov 21 22:15:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7c50dc9df968c86d571e6c8997f5f734122b9792

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          fixed compile error

Sat Nov 21 18:39:48 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit fd5ca88744d4c6addafab6fffefdb1438c5759ee

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Durable writers can skip initial sequence numbers in RTPS

          Problem
          -------

          If a writer is writing while the first reader associates, the
          initial
          sequence number will jump from
          to N creating a gap from 1 to N-1
          which fouls durable readers.

          Solution
          --------

          Don't insert a gap from 1 to N-1.

Sat Nov 21 17:56:44 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 199b265614857164e38290812d9ff99a01271221

        * tests/cmake_integration/idl_test/ecu.cpp:

          Replace main with ACE_TMAIN.

Sat Nov 21 16:55:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e51ba6d0d31ff53dd80ea6fc69f5dff75b0a5168

          Merge pull request #2084 from lij-oci/livelinesstimeout_leak

          Fix memory leaks detected in the LivelinessTimeout test

Sat Nov 21 14:47:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0359b458326fa0331ea9a8d2e5c5f762f47af0b3

          Merge pull request #2086 from jrw972/fix-multicast-transport

          Fix multicast transport

Sat Nov 21 00:04:50 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f5f8c59a591d501e213afc57db6d4fa539074e03

        * tests/cmake_integration/CMakeLists.txt:

          Add idl_test to CMake builds

Sat Nov 21 00:02:36 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ac3a080fd0abc183cb6cb9ca165cbe124028458b

        * cmake/api_macros.cmake:
        * tests/cmake_integration/idl_test/CMakeLists.txt:

          Add FILENAME_ONLY_INCLUDES arg to OPENDDS_TARGET_SOURCES macro.

Fri Nov 20 23:59:19 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ea047c64b3069b6c14f9a93d9a1c0dae041265f5

        * tests/cmake_integration/idl_test/ecu.cpp:
        * tests/cmake_integration/idl_test/transmission/transmission_states.idl:

          Update enum.

Fri Nov 20 23:08:52 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit e0aeb4d898a1d2f20a1af3aef02c224acc899e5e

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Fix allocated config initialization

Fri Nov 20 22:01:52 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit ae5cfd521ae14d5b729cec1e0f965e2d87ee8445

        * dds/DCPS/RTPS/Sedp.cpp:

          consistent size+padding

Fri Nov 20 21:26:18 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit a08b6e9e127bcc7c1dc40087aac080c04ff9ef5c

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Minor cleanup

Fri Nov 20 21:01:34 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 1439dce01967affc1174010f86d973bf4d305a32

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Any node allocation

Fri Nov 20 20:52:21 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 533f15352f2565a7c5198319b6b5aaa63e6389b5

        * dds/DCPS/RTPS/Spdp.cpp:

          added debug level check to warnings

Fri Nov 20 20:37:22 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c03646c8e11b07419ef4e9f257dbdaeaaf808844

        * dds/DCPS/transport/multicast/MulticastDataLink.cpp:
        * dds/DCPS/transport/multicast/MulticastDataLink.h:
        * dds/DCPS/transport/multicast/MulticastSession.cpp:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:

          Fix multicast transport

Fri Nov 20 20:23:12 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 1ecbaa43bc8242b6074dd49fa3811425e5205052

        * dds/DCPS/RTPS/Spdp.cpp:

          spacing fix

Fri Nov 20 20:20:12 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 51a4ee1c401bc612060482dbe26a0f9fdead9890

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Fix for simuntaneous joins of multicast windows 7

Fri Nov 20 19:12:47 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit b137fde7a506168f04210ba20282096c8eb29196

        * dds/DCPS/RTPS/Sedp.cpp:

          historic flag in write_participant_message

Fri Nov 20 17:52:29 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 97333aeb37d3e2f50114449245a23ff7393441af

        * cmake/api_macros.cmake:
        * tests/cmake_integration/idl_test/CMakeLists.txt:

          OPENDDS_TARGET_SOURCES macro updates IDL compiler include paths.

          Move the logic from the ADD_IDL_PATH, ADD_IDL_FILES_IN_PATH, and
          ADD_DDS_IDL_FLAG macros to the OPENDDS_TARGET_SOURCES macro.

Fri Nov 20 04:18:46 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 6425ad8e9d3fc17dd0d0475898b5f06e118b3bc1

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:

          Allocate exclusive and non-exclusive nodes

Fri Nov 20 03:45:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f3dcfa53ad01914259fc2535ae43e2f1326b8c86

          Merge pull request #2082 from kuznetsovmoci/JFT_CFT1

          Whitespace and eof fixes for Bench_2 content filtered topics code

Fri Nov 20 03:45:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5d07a526cfbf28cd7180219ac345099ed8b7bd11

          Merge pull request #2043 from jrw972/rtps-reliable-race

          RTPS reliability has a race condition

Fri Nov 20 02:50:37 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 4f1427b3fad4bc90f3a50b0daecae766a0b62958

        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:

          Not done

Thu Nov 19 22:38:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit df98ac3ca62b4d9846854472952330c5040ff632

        * dds/DCPS/transport/multicast/MulticastSession.cpp:
        * tests/Utils/WaitForSample.h:

          MulticastSession: added #include

Thu Nov 19 22:08:00 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit a87c1e0a337ec839fdb815389ef014dc4f9e028d

        * docs/internal/bench2.rst:

          Documentation fix as per PR#2082 review

Thu Nov 19 22:04:30 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 52ee747a5530862bc9e60b79450ef616925f6273

        * dds/DCPS/transport/multicast/MulticastSession.cpp:
        * dds/DCPS/transport/multicast/MulticastSession.h:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/multicast/ReliableSession.cpp:

          Reliability in multicast transport is broken

          Problem
          -------

          The association of two reliable multicast transports can finish
          before
          the reader is associated with the writer through discovery. This
          means a writer may start writing data with the expectation that
          the
          reader will receive it. However, the association may not exist on
          the
          reader side so it will not receive the data.

          Solution
          --------

          Extend the SYN+ACK protocol to include reader-writer pairs.  The
          passive side will only ACK a pair when the association has been
          made
          known through discovery. The SYNACK packet can be interpretted as
          association complete and the callback on the writer is invoked.

Thu Nov 19 21:24:20 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit e5f2feb401a1095480b2e138d2a480bc81bbf1cb

        * docs/internal/bench2.rst:

          Documented content filtered topics

Thu Nov 19 16:29:45 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 74fc26fd9ff18488e8492157a7a5fe0e59230e48

          Merge master

Thu Nov 19 16:00:21 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a3f25858b7abba7cff07f8878556d934b8a0dbca

        * tests/cmake_integration/idl_test/CMakeLists.txt:
        * tests/cmake_integration/idl_test/ecu.mpc:

          Update test with --filename-only-includes flag.

Thu Nov 19 15:56:39 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a6ccde83e941380798b6718ddd840b1061aa2368

        * dds/idl/be_global.cpp:
        * dds/idl/be_global.h:
        * dds/idl/be_util.cpp:

          Change compiler flag to --filename-only-includes.

Wed Nov 18 21:58:20 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 351b8d94555b2b6426638b70e3a73c6e7c99ce84

        * tests/cmake_integration/idl_test/ecu.mpc:

          Remove tabs.

Wed Nov 18 16:53:24 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3d5947a86e9e6ac0f49d04cba3a3a5cb455461b9

        * tests/cmake_integration/idl_test/.gitignore:
        * tests/cmake_integration/idl_test/ecu.cpp:
        * tests/cmake_integration/idl_test/ecu.mpc:

          Update .gitignore. Add ecu.cpp.

Tue Nov 17 22:38:42 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 2fc69ee8448006753c526bd75b0483b40036b5cf

        * tests/cmake_integration/idl_test/CMakeLists.txt:

          Update CMakeLists.txt

Tue Nov 17 22:33:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 889268e904357c0806605a1c11382a9e6a242f2f

        * tests/cmake_integration/idl_test/ecu.idl:
        * tests/cmake_integration/idl_test/engine/engine_specs.idl:
        * tests/cmake_integration/idl_test/engine/engine_stats/fuel_stats.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_specs.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_states.idl:

          Add #ifdefs

Tue Nov 17 20:47:15 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 487927bfddbf645c7d4b3c8a9aac9b9c8ea485cb

        * dds/idl/be_global.cpp:
        * dds/idl/be_global.h:
        * dds/idl/be_util.cpp:

          Add -FilenameOnlyIncludes option to opendds_idl

          -FilenameOnlyIncludes strip leading directories from generated
          #include lines

Tue Nov 17 20:37:31 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 51aab0e1c88159bec3f19442a592a5042d033ba3

        * tests/cmake_integration/idl_test/.gitignore:
        * tests/cmake_integration/idl_test/CMakeLists.txt:
        * tests/cmake_integration/idl_test/car.cpp:
        * tests/cmake_integration/idl_test/car.mpc:
        * tests/cmake_integration/idl_test/car.idl  tests/cmake_integration/idl_test/ecu.idl:
        * tests/cmake_integration/idl_test/ecu.mpc:
        * tests/cmake_integration/idl_test/engine/engine_specs.idl:
        * tests/cmake_integration/idl_test/engine/engine_stats/fuel_stats.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_specs.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_states.idl:

          Update cmake idl_test.

Thu Nov 12 21:38:48 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5258c37ba9cb6439834056bf05c0cc2df645f0b3

        * cmake/api_macros.cmake:

          ADD_DDS_IDL_FLAG macro

Wed Nov 11 23:01:32 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8f8f632384edbde830516e2c8820cf7d4f548047

        * tests/cmake_integration/idl_test/.gitignore:
        * tests/cmake_integration/idl_test/CMakeLists.txt:
        * tests/cmake_integration/idl_test/car.cpp:
        * tests/cmake_integration/idl_test/car.idl:
        * tests/cmake_integration/idl_test/car.mpc:
        * tests/cmake_integration/idl_test/engine/engine_specs.idl:
        * tests/cmake_integration/idl_test/transmission/transmission_specs.idl:

          CMake IDL preliminary example.

Wed Nov 11 22:59:34 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 0814a0f595dd124393add4bfdadbf0f29339538a

        * cmake/api_macros.cmake:

          CMake macros to support IDL files that include other IDL files.

Wed Nov 11 22:22:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit bb5487832110def572a3ebc1e2947a67dba9fd9c

        * docs/cmake.md:

          Update auxiliary idl library documentation.

Thu Nov 19 15:25:40 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7240ff3cfa2cc53c8447c11a8a8fb7ae15398d25

        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimpleDataReader.cpp:
        * tests/transport/simple/SimpleDataReader.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimpleDataWriter.h:
        * tests/transport/simple/SubDriver.cpp:

          Fix transport tests

Thu Nov 19 15:13:18 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 94e866878a20875a37f4ae68080c294638ed9a88

        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Whitespace and eof fixes

Thu Nov 19 14:22:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a1b44ea8aa504ee8d0300dba6558ba316cdca873

          Merge branch 'master' into pr2043

          # Conflicts:
          #       tests/DCPS/QueryCondition/rtps_disc.ini

Thu Nov 19 10:28:34 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit ac8e4f6fc07d635dd5abe3825a1ad95bc814b7e3

          Merge branch 'master' into jwi-deletetopic_i

Thu Nov 19 08:15:07 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 7f0b6abf8d66b8a0c4ad339d203fe3d020b0964e

          Merge branch 'master' of
          https://github.com/objectcomputing/OpenDDS into master

Thu Nov 19 05:54:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit be23c968c6240bb28b4492859b91c72d6c7a301b

          Merge pull request #2074 from
          simpsont-oci/add_raw_json_output_to_test_controller

          Bench2: Add raw JSON output to Test Controller

Thu Nov 19 05:54:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1278d510d6b08daffa077f780d3dfd129193b6f5

          Merge pull request #2066 from
          iguessthislldo/igtd/secure-user-data

          RTPS Discovery Option to Secure Part. User Data

Thu Nov 19 05:53:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 68ae91b0b780772c715cd0ee826fadd84680df72

          Merge pull request #2028 from kuznetsovmoci/JFT_CFT

          Bench2: Support For Definition of Content Filtered Topics, Worker
          "Action" to Adjust Content Filter Parameters

Thu Nov 19 05:53:33 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7cad51b7d81ee8f26ce81207e51c7cab80bc66c3

          Merge pull request #1366 from iguessthislldo/igtd/linter

          Rename dds_fuzz.pl to lint.pl and Have it do Generic Text File
          Checks

Thu Nov 19 05:16:29 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit c5655b6c26430eafc35d3969da3d4a3ae5095191

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Updating to use wildcard

Thu Nov 19 03:35:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 844183557f7b81aef31da39281195e2de07f6e46

        * tests/Utils/ListenerRecorder.h:

          fixed double ;

Thu Nov 19 02:54:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 26219ae92c911bc915630932bc59a6e17df04756

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/Utils/ListenerRecorder.h:

          Fix safety profile build

Thu Nov 19 01:05:27 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c5349179b21a50947c8303ba7b5b4a797385d60b

        * dds/DCPS/RTPS/Spdp.cpp:

          Restrict SecureParticipantUserData More

          Try to reduce to just the Secure Participant Writer. Also attempt
          to fix
          C++03 issue.

Wed Nov 18 23:14:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e04f325effdb6f689b140a3db59917fe224acb05

        * dds/DCPS/transport/tcp/TcpTransport.cpp:

          Remove TODOs

Wed Nov 18 22:40:29 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b79c13563749a6b3f38b91428f5c0f86471d2230

        * dds/DCPS/transport/tcp/TcpDataLink.cpp:
        * dds/DCPS/transport/tcp/TcpDataLink.h:
        * dds/DCPS/transport/tcp/TcpReceiveStrategy.cpp:
        * tests/DCPS/PersistentInfoRepo/Publisher.cpp:
        * tests/DCPS/PersistentInfoRepo/Subscriber.cpp:
        * tests/Utils/ListenerRecorder.h:

          Simplify synchronization for TCP transport

          The flow when establishing a connection with the TCP transport is
          now
          as follows:

          When a connection is made to or found on the reader side, the
          reader's
          callbacks are executed to make the framework ready to receive
          messages
          and the ack request is sent to the writer to indicate that the
          reader
          is ready to receive messages.

          When the writer receives the ack request, it's callbacks are
          invoked
          and it can start writing data.

Wed Nov 18 18:55:16 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3786e30f37d52928d54441415cc2f49b111ad279

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Only turn on leader/lagger check if debug build

Wed Nov 18 17:58:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ce8e9743ae68b274399901f4ca618561e3d9e7e4

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RtpsUdpDataLink: corrected meta submessage tracking

Wed Nov 18 15:34:14 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2f6f354db2d956658b74705a88f8d459890c2fb5

          Merge pull request #2076 from mitza-oci/wireshark34

          Wireshark 3.4 support

Wed Nov 18 15:33:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2e3b2c4d12e593e2653fecd0dc38c6af607276c7

          Merge pull request #2073 from plabanca/FixCoverityWarning

          Fix unreachable code warning

Wed Nov 18 14:38:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6065ab6de45ca13750042f2b30c423335ab150c9

        * tests/DCPS/Thrasher/ParticipantTask.cpp:
        * tests/DCPS/Thrasher/Subscriber.cpp:

          Add logging to test

Wed Nov 18 05:14:05 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 25ee7359478871b515196d90d264b6aee91bf04d

        * performance-tests/bench_2/test_controller/DdsEntities.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:
        * performance-tests/bench_2/test_controller/StatusListener.h:
        * performance-tests/bench_2/test_controller/main.cpp:

          Fix headers order

Wed Nov 18 04:25:56 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit baecccdb7ca4f9e1be39219d04100f99c8c30ed5

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:

          Update scenario allocation

Wed Nov 18 03:36:04 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 094f0ccbbf854d01348927566a46530f4e293a46

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          More fixes to make_leader_lagger

Wed Nov 18 03:09:34 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4509d2386a518abf1f5de05a835a5fa6a3cf5df8

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Fix make_leader_lagger

          Doesn't handle directed writes for durable data correctly when
          there
          is a preassociation reader.

Wed Nov 18 01:20:58 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 20a55b464c04ca4d698c193ed543da2e41c660ea

        * performance-tests/bench_2/builder/Topic.cpp:

          Minor fix

Wed Nov 18 00:17:20 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 5bbf4b84d0f2d67499b0e278daf04132f707d685

        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Layout fixes

Wed Nov 18 00:15:38 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 1533f5a11ae1e6a4bc36aa412f143aee3322fa96

        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Tab fixes

Wed Nov 18 00:13:29 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 3390e3a3c8e997f18bc33a57e421ab6b6107c4d9

        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Tab fixes

Wed Nov 18 00:08:05 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit a73a417581ef13fd3ec0167157fc269b6dee09e5

        * performance-tests/bench_2/common/util.cpp:
        * performance-tests/bench_2/common/util.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:
        * performance-tests/bench_2/worker/run_test.pl:

          Fixes as per PR#2028 review

Wed Nov 18 00:02:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 96c4d83872f4f8429363d11997e8481c8c46c0bc

        * tools/dissector/packet-opendds.cpp:

          Wireshark 3.4 support

Tue Nov 17 23:24:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit aff3440b30f23d0112f84688a75c55841f7eb045

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Fix invariant and bug

Tue Nov 17 23:09:40 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ad1038da15ea2c37038596db943c367fcdf52b1c

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Add invariant

Tue Nov 17 22:04:52 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit d270e1ee5f3a3aad51c6c2c9aead176450016389

        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:

          Fixes as per PR#2028 review

Tue Nov 17 21:32:19 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9e9dccc5a85412ba761c3a41dea80e59c8068fad

        * performance-tests/bench_2/common/PropertyStatBlock.cpp:
        * performance-tests/bench_2/common/PropertyStatBlock.h:
        * performance-tests/bench_2/node_controller/main.cpp:

          using common timestamp for resource updates

Tue Nov 17 21:31:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f3834627f00f70d382fce310a55f8d4b946c25be

        * performance-tests/bench_2/test_controller/main.cpp:

          resolving review comments

Tue Nov 17 20:50:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit fb879d0261906b9465a05cb00c6b6c410be47217

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Cleanup heartbeat count

Tue Nov 17 19:51:43 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit cfb9d8eadc4f266313eb649375a27edc727580ce

          Merge branch 'master' of
          https://github.com/objectcomputing/OpenDDS into JFT_CFT

          # Conflicts:
          #       performance-tests/bench_2/builder/DataReader.cpp

Tue Nov 17 19:36:57 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit a4a3080c24da41873b91e4a14308bb72a79b300f

        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Added random order option for acceptable values

Tue Nov 17 18:22:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 1c2eac9e94594e051453a5fe042b2765372b320d

          Merge remote-tracking branch 'upstream/master' into igtd/linter

Tue Nov 17 18:17:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 0a1390e97c26c01247dda8e0ed6ad22d72145bad

        * .travis.yml:

          .travis.yml: Remove Lint

          Apparently it was removed on master at some point

Tue Nov 17 18:01:02 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit a49dac7f8f6fb7bf5a87811181b922b601071759

        * performance-tests/bench_2/builder/BuilderProcess.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.cpp:
        * performance-tests/bench_2/builder/ParticipantManager.cpp:
        * performance-tests/bench_2/common/util.h:
        * performance-tests/bench_2/worker/ForwardAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.cpp:

          Layout cleanup as per PR#2028 review

Tue Nov 17 17:41:45 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 880d5079b4fc87429d1110af608769dbef02b7e6

        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:

          Added conditional compilation for
          _DDS_CONTENTFILTEREDTOPIC__TRAITS_

Tue Nov 17 17:34:42 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 818a1e2c99f6d57d4137463e66caa24c6d04ff8d

        * dds/DCPS/RapidJsonWrapper.h:
        * docs/internal/bench2.rst:
        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:
        * performance-tests/bench_2/test_controller/main.cpp:

          Add raw JSON output to Test Controller

Tue Nov 17 17:32:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5d1f84624d60f8a989e0d5d68e69c94d34b0c6e4

          Merge pull request #2070 from mitza-oci/configure-ci-use-ace6tao2

          configure and CI: when using DOCGroup/ACE_TAO from GitHub only
          the ace6tao2 branch is supported

Tue Nov 17 17:15:06 UTC 2020  Phillip LaBanca  <labancap@objectcomputing.com>
        commit a2335da1a00e8f3d509803bab8cb8c502023786a

        * dds/idl/value_writer_generator.cpp:

          Fix unreachable code warning

Tue Nov 17 14:21:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 01f30331cc5a99428be09ddac46748dfaf882b06

        * .github/workflows/fuzz.yml:
        * .travis.yml:
        * configure:

          configure and CI: when using DOCGroup/ACE_TAO from GitHub only
          the ace6tao2 branch is supported

Tue Nov 17 09:47:31 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0066530470e741d58dc1840500ea09c87538563d

        * dds/DCPS/DomainParticipantImpl.cpp:

          Added some logging to delete_topic_i so that when the topic is
          not removed from the map we can see that in the log, related to
          issue #2062

          * dds/DCPS/DomainParticipantImpl.cpp:

Tue Nov 17 07:53:39 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 53b68256d71d71442a877586e15e76f2f91f098a

          Merge remote-tracking branch 'upstream/master' into
          igtd/secure-user-data

Tue Nov 17 07:47:55 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 11d28009e4b64202f770a857311a179f176781ef

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          RTPS Discovery Option to Secure Part. User Data

          Added `SecureParticipantUserQos` RTPS Discovery option that
          limits usage
          of Participant QoS User Data to secure communications. Only works
          if
          security is enabled.

Tue Nov 17 07:08:52 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e4d107654fcdd099e222d9ff19f9410b3ab3280d

          Merge branch 'master' of
          https://github.com/objectcomputing/OpenDDS into master

Tue Nov 17 06:38:05 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d4acdae1744421421c74be668b1b290b9f73ea9f

        * dds/DCPS/SafetyProfileStreams.cpp:
        * dds/DCPS/SafetyProfileStreams.h:

          to_hex_dds_string for OctetSeq

          Unused, but was used for debugging.

Tue Nov 17 05:39:46 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2a7f67a84ec9315d2294c1b654b9f125bd782f20

          Merge remote-tracking branch 'upstream/master' into igtd/linter

Tue Nov 17 05:30:57 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a90286b3180d75d778010cd8c0897476c1b33afd

        * .lint_config:
        * java/jms/.lint_config:
        * performance-tests/Bench/.lint_config:
        * tests/DCPS/Crossplatform/.lint_config:
        * tests/security/attributes/governance/.lint_config:
        * tests/security/attributes/permissions/.lint_config:
        * tests/security/certs/identity/.lint_config:
        * tests/security/certs/permissions/.lint_config:
        * tools/modeling/.lint_config:
        * tools/scripts/lint.pl:

          Various Improvements for lint.pl

          - Control lint.pl via comments in file and .lint_config files
          - Get rid of almost all hardcoded paths in lint.pl and use
          .lint_config
          files instead.
          - Option to process specific files instead of all in OpenDDS
          - Renamed checks to be consistent
          - Added path_has_whitespace check
          - Make it possible to run without defining DDS_ROOT or ACE_ROOT.

Tue Nov 17 04:29:39 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9cf1f9c98a67b2a27d313078ccc1171515341790

        * dds/DCPS/transport/tcp/TcpDataLink.cpp:
        * dds/DCPS/transport/tcp/TcpDataLink.h:
        * dds/DCPS/transport/tcp/TcpReceiveStrategy.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.h:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          TCP transport has a race condition

          Problem
          -------

          The TCP transport suffers from a race condition where samples may
          be
          received before the transport framework is fully initialized.

          Solution
          --------

          Register and invoke on start callbacks for every association.
          This
          causes a writer to wait to start sending data to a reader until
          it has
          heard from the reader.  On the reader side, cache samples until
          `use_datalink` has been called.

Mon Nov 16 23:17:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f44a4ced09158673f24dc08e8afa2948bca7ec2e

          Merge pull request #2058 from jwillemsen/jwi-bench2

          Minor bench2 cleanup

Mon Nov 16 23:17:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7ad474b8da7942c42fb77fa355d850aa401b24f0

          Merge pull request #2031 from sonndinh/add_tags_bench2

          Bench2: Add tag-based stats

Mon Nov 16 23:11:02 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 085a8471603fee6c79150274562907e0445dfa83

        * performance-tests/bench_2/builder_idl/Builder.idl:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Fixes as per PR#2028 review

Mon Nov 16 22:44:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ae5bd587f688bee0c83c5435acfaf26b7f9a96fd

        * java/tests/builtintopics/BuiltinTopicsTest.java:

          Java BuiltinTopicsTest - use waitForSample

Mon Nov 16 22:26:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d874062d3122787075bdeadfaa9c621aff582779

        * tests/DCPS/MultiTopic/MultiTopicTest.cpp:
        * tests/Utils/WaitForSample.h:

          MultiTopic test: updated BIT read with waitForSample

Mon Nov 16 22:19:14 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7569cc4960d7c926d5860d99ab613f23f9ab40ad

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/ContentFilteredTopic/ContentFilteredTopicTest.cpp:
        * tests/Utils/WaitForSample.h:

          Fix broken tests

Mon Nov 16 21:36:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fc67a68861229f416490b9868ce2c4d1b27950f0

        * tests/DCPS/QueryCondition/QueryConditionTest.cpp:
        * tests/DCPS/QueryCondition/rtps_disc.ini:

          QueryConditionTest: cleaned up unused transports in rtps_disc.ini

Mon Nov 16 19:53:02 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit c6058a566d19d505e3adf8504698ff5e1e93f272

        * performance-tests/bench_2/worker/run_test.pl:

          Added json config file as an argument for run_test.pl

Mon Nov 16 19:40:31 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 6edc4068a727d577ef82dfd95a1e6f55d7bb2c4c

        * performance-tests/bench_2/worker/run_test.pl:

          Added run_test.pl to worker

Mon Nov 16 19:07:52 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 144b49fe008992f5fb7153107cfc0dc851d2b393

        * performance-tests/bench_2/common/util.h:
        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/worker/Action.cpp:
        * performance-tests/bench_2/worker/Action.h:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:
        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Corrections as per PR#2028 review

Mon Nov 16 10:08:39 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 421918e48bef5f97bb91cb420ae0dca3e9114690

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * tests/DCPS/TopicReuse/tpreuse.cpp:

          Const changes

          * dds/DCPS/DomainParticipantFactoryImpl.cpp:
          * tests/DCPS/TopicReuse/tpreuse.cpp:

Sun Nov 15 19:28:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0065756ee6304025ccccd8f5dfc87cd96301bda2

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DiscReceivedCalls.cpp:
        * tests/DCPS/DCPSInfoRepo/DiscReceivedCalls.h:
        * tests/DCPS/DCPSInfoRepo/pubsub.cpp:

          RtpsUdpTransport has race condition

          Problem
          -------

          `connect_datalink` and `accept_datalink` have a race condition
          where a
          reliable reader/writer could finish association but not have a
          callback to invoke. Since the callback is not invoked, the
          transport
          framework is not in a condition to deliver any received data. Any
          data received by a reader will be passed up to the transport
          framework
          but dropped. This situation usually corrects itself after
          discovery
          completes.

          Solution
          --------

          Install the callbacks immediately so that they can be invoked
          immediately if necessary.

Sun Nov 15 09:12:14 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 621d2d8933c48ff4649d7a403a48ef3756a45b56

          Merge branch 'master' into jwi-bench2

Sat Nov 14 22:08:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e0344cd2b8c71906d5af23b927a9e51463b792fd

          Merge pull request #2056 from jwillemsen/jwi-layout

          Minor layout cleanup

Sat Nov 14 22:08:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a926eb4b8dc9645aab24fd0da4bdc8fa71b9a124

          Merge pull request #2055 from
          simpsont-oci/tcp_datalink_graceful_disconnect

          Fixing graceful disconnect issue in TcpDataLink

Sat Nov 14 22:08:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2c75cece2fce7f58d5cedd550297365a14adf9cd

          Merge pull request #2054 from
          ClaytonCalabrese/opendds3_15_qtmonitor

          QT run_odds_mon Failing

Sat Nov 14 22:08:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 21b98e4c2d5c2fc748d2fe687487593e23022591

          Merge pull request #2052 from
          jwillemsen/jwi-assert_liveliness_by_participant

          assert_liveliness_by_participant doesn't need to be virtual, just
          a h…

Sat Nov 14 22:07:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b368e417100059acc8f344a4828bf2c682be74ba

          Merge pull request #2051 from jwillemsen/jwi-dpflogging

          Make all domain participant factory logging dependent on the log
          leve…

Sat Nov 14 20:33:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 41ffe5293e390fe8730ccf290ed2017b6977dd1b

        * dds/DCPS/DataReaderCallbacks.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterCallbacks.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Discovery.h:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/InfoRepoDiscovery/DataReaderRemote.idl:
        * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp:
        * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h:
        * dds/DCPS/InfoRepoDiscovery/DataWriterRemote.idl:
        * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp:
        * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h:
        * dds/DCPS/InfoRepoDiscovery/Info.idl:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RecorderImpl.cpp:
        * dds/DCPS/RecorderImpl.h:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/ReplayerImpl.h:
        * dds/DCPS/StaticDiscovery.cpp:
        * dds/DCPS/StaticDiscovery.h:
        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/framework/TransportClient.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:

          Association releated features broken for local RTPS participants

          Problem
          =======

          1. Waiting for publication matched status fails for local RTPS
          participants. This was caused by the the discovery and transport
          code
          assuming that local RTPS reader/writer pairs are automatically
          associated. This would allow a writer to violate the new
          reliablity
          protocol and send samples before the reader was prepared to
          receive
          them.

          2. Suppose a reliable, durable writer writes samples before any
          reliable
          reader is associated. The heartbeat for this writer is still
          [1,0)
          since no data has actually made it to the datalink.  Suppose two
          readers are discovered at the same time, one durable and one not.
          They will both receive a [1,0) heartbeat which is not necessarily
          wrong.  After receiving this heartbeat, the readers will acknack
          causing association complete and replay of durable data. The
          durable
          replay will advance the maximum sequence number to the correct
          value
          but since it is directed, only the durable reader will be viewed
          as
          lagging. The non-durable reader is still leading at zero. Writing
          new samples will advance the sequence number but the
          leading/lagging
          logic will never make the non-durable reader a lagger because the
          sequence number it is leading at is still zero.

          Solution
          ========

          1. Remove `association_complete` as a concept in discovery.
          Discovery is
          allowed to say was associations should or should not exist but it
          should not participant in the determination that those
          associations
          are complete meaning that data written by a writer will be send
          to a
          reader. This means that it is the responsibility of the transport
          to
          invoke `transport_assoc_done` when association is complete.

          2. Initialize RtpsWriters with a starting sequence number.

Sat Nov 14 15:17:06 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 56deff4aa5616017f037a36e792ff6fbb4b72c41

        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/WorkerPublisherListener.h:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.cpp:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.h:
        * performance-tests/bench_2/worker/WorkerTopicListener.cpp:
        * performance-tests/bench_2/worker/WorkerTopicListener.h:

          Use default, uniform initialization will initialize to zero, use
          atomic

          * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
          * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
          * performance-tests/bench_2/worker/WorkerPublisherListener.h:
          * performance-tests/bench_2/worker/WorkerSubscriberListener.cpp:
          * performance-tests/bench_2/worker/WorkerSubscriberListener.h:
          * performance-tests/bench_2/worker/WorkerTopicListener.cpp:
          * performance-tests/bench_2/worker/WorkerTopicListener.h:

Sat Nov 14 15:06:55 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 235ef59b08cfc505483d0dd67498ec18cc3aedee

        * tests/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/TopicListener.cpp:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
        * tools/modeling/codegen/model/NullParticipantListener.cpp:

          Minor layout cleanup

          * tests/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
          * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
          * tests/DCPS/DcpsIntegration/TopicListener.cpp:
          * tests/DCPS/FooTest3_0/DomainParticipantListener.cpp:
          * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
          * tools/modeling/codegen/model/NullParticipantListener.cpp:

Fri Nov 13 21:13:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit eb16b68cd6ebaa04b4d734ea2e38a21aea72509b

        * dds/DCPS/transport/tcp/TcpAcceptor.cpp:
        * dds/DCPS/transport/tcp/TcpAcceptor.h:
        * dds/DCPS/transport/tcp/TcpConnection.cpp:
        * dds/DCPS/transport/tcp/TcpDataLink.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:

          Fixing graceful disconnect issue in TcpDataLink, ineffective
          transform_shutdown in TcpAcceptor

Fri Nov 13 21:08:19 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 8f6ac336e266d615c64c43202c91b6d5a3bbae94

        * tests/DCPS/Monitor/mon.ini:
        * tests/DCPS/Monitor/monitor.conf:
        * tests/DCPS/Monitor/run_odds_mon.pl:

          Removed some unused parts. Changed to have bit for monitor. added
          missing lib

Fri Nov 13 16:01:27 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 45c4770e865560ae51daa8e59b480f2c8fe6e0e7

        * docs/internal/bench2.rst:

          Add blank line

Fri Nov 13 14:18:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7050500f1f4ba88a22a49da60b56918a9bb41ea9

          Merge branch 'master' of github.com:objectcomputing/OpenDDS into
          rtps-reliable-race

Fri Nov 13 12:12:42 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 220e1fa3096d47a411f82499b8c9783551f7ffb0

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublisherImpl.cpp:

          assert_liveliness_by_participant doesn't need to be virtual, just
          a helper method called from the publisher

          * dds/DCPS/DataWriterImpl.cpp:
          * dds/DCPS/DataWriterImpl.h:
          * dds/DCPS/PublisherImpl.cpp:

Fri Nov 13 11:49:59 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit d708cf5ab2897d2bc01cfc3bb38d2e5c7e1455a1

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:

          Make all domain participant factory logging dependent on the log
          level, in case of failure testing we got all kinds of errors from
          OpenDDS into our user logs

          * dds/DCPS/DomainParticipantFactoryImpl.cpp:

Fri Nov 13 03:45:01 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 18a7be3d74349d6bdff72dea838244719d23502a

        * docs/internal/bench2.rst:

          Update docs

Fri Nov 13 03:29:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4691c6400f2ba25facd2eb92daeaa88d0b613cc2

          Merge pull request #2044 from
          simpsont-oci/remove_local_struct_template_from_zerocopyread_test

          Remove Local Struct Template Instantiation From ZeroCopyRead Test

Fri Nov 13 03:29:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fca23078e9fa19b388bfe2cca8d75715774cdf77

          Merge pull request #2042 from jrw972/non-directed-hb

          RTPS direct heartbeats unnecessarily

Thu Nov 12 16:29:37 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a1103f450a240ee0c14ca30a92f59209cc459741

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS reliability has a race condition

          Problem
          -------

          A common pattern in testing and perhaps applications is for a
          reliable
          writer to wait until it has matched a certain number of readers.
          The
          common expectation is that any sample written after this point
          will be
          received by the reader. This does not happen due to a race
          condition
          between heartbeats and data.

          The start of the "nackable" range is determined by the first
          received
          heartbeat or first received data sample. If a data sample is
          received
          first and it is not the first sample, then the reader will skip
          over
          all previous samples.

          Association is complete on the writer side when it receives an
          acknack
          from the reader. In the scenario described, the writer could
          write
          all of the data and call `wait_for_acknowledgements` before the
          reader
          has received anything. If the reader receives a heartbeat first,
          it
          might end at the final sample produced by the writer and the
          reader
          will end up not receiving any data.

          A solution where the acknack is delayed until the reader receives
          a
          heartbeat does not support cases of assymetric discovery, i.e.,
          the
          reader has to be able to send an acknack to initialize
          rediscovery.

          Solution
          --------

          Delay association of the writer until it receives an acknack that
          proves the reader has received a heartbeat. Such a heartbeat
          would be
          final, ack something, or have a non-empty bitmap.

Fri Nov 13 02:14:04 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 1b7e4735f1fcbe9421add9da80dd357f18dc49f1

        * .github/workflows/lint.yml:

          Try to Fix Lint Workflow Again

Fri Nov 13 02:09:36 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 31a5100cef6dd1e3e36177802caf6ae7f2317dd5

        * tools/scripts/lint.pl:

          Tweaks to lint.pl

          Mainly ability to ignore ACE/TAO

Fri Nov 13 02:08:44 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e48ee24f0ebab52b6b25b1bf39f7418219fb7617

        * .github/workflows/lint.yml:

          Fix Env in Lint Workflow

Fri Nov 13 01:11:16 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a01792213cfa57de76880caff6a6021e3184ad6e

        * DDS.mwc:
        * MPC/config/dcps_optional_features.mpb:
        * MPC/config/dds_corba.mpb:
        * bin/performance_tests.lst:
        * bin/run_dds.pl:
        * dds/DCPS/ContentFilteredTopicImpl.cpp:
        * dds/DCPS/DataSampleElement.cpp:
        * dds/DCPS/GuardCondition.cpp:
        * dds/DCPS/MessageTracker.h:
        * dds/DCPS/MonitorFactory.cpp:
        * dds/DCPS/QOS_XML_Handler/dds_qos.cpp:
        * dds/DCPS/QOS_XML_Handler/qos_xml_handler.mpc:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/Replayer.cpp:
        * dds/DCPS/security/.gitignore:
        * dds/DCPS/transport/framework/BuildChainVisitor.cpp:
        * dds/DCPS/transport/framework/CopyChainVisitor.cpp:
        * dds/DCPS/transport/framework/CopyChainVisitor.inl:
        * dds/DCPS/transport/framework/ReactorSynch.cpp:
        * dds/DCPS/transport/framework/ReactorSynch.h:
        * dds/DCPS/transport/framework/ReactorSynch.inl:
        * dds/DCPS/transport/framework/ReactorSynchStrategy.h:
        * dds/DCPS/transport/framework/ReactorSynchStrategy.inl:
        * dds/DCPS/transport/framework/ScheduleOutputHandler.cpp:
        * dds/DCPS/transport/framework/ScheduleOutputHandler.inl:
        * dds/DCPS/transport/framework/ThreadSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynchWorker.inl:
        * dds/DCPS/transport/framework/TransportControlElement.inl:
        * dds/DCPS/transport/framework/TransportRetainedElement.h:
        * dds/DCPS/transport/multicast/MulticastSession.h:
        * dds/DCPS/transport/rtps_udp/RtpsTransportHeader.h:
        * dds/DCPS/transport/shmem/ShmemInst.h:
        * dds/DCPS/yard/yard_char_set.hpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * docs/NOTES:
        * docs/design/CONFIGURATION:
        * docs/design/DEADLINE:
        * docs/design/DURABILITY:
        * docs/design/FULLY_ASSOCIATED:
        * docs/design/IDL_COMPILER:
        * docs/design/LIFESPAN:
        * docs/design/LOCKMAP:
        * docs/design/MULTIREPO:
        * docs/design/PARTITION:
        * docs/design/PRESENTATION:
        * docs/design/SCALE:
        * docs/design/TRANSPORT_HOOKS:
        * docs/design/TRANSPORT_RECONNECT:
        * docs/design/UML/history/README:
        * docs/design/WAIT_FOR_ACKS:
        * docs/design/WCHAR:
        * docs/design/security.md:
        * docs/docker.md:
        * docs/history/ChangeLog-1.0pre:
        * docs/history/ChangeLog-3.10:
        * docs/history/ChangeLog-RecorderReplayer:
        * docs/history/ChangeLog-wchar:
        * docs/history/NEWS-0.md:
        * docs/history/NEWS-1.md:
        * docs/ios.md:
        * docs/multirepo.md:
        * docs/qt.md:
        * docs/schema/dds_qos.xsd:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.idl:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mwc:
        * examples/DCPS/IntroductionToOpenDDS/dds_tcp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/dds_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp_bit_off.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_test.pl:
        * examples/DCPS/IntroductionToOpenDDS/run_udp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_udp_bit_off.bat:
        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * examples/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/sub.ini:
        * examples/DCPS/ishapes/BouncingShapeDynamics.hpp:
        * examples/DCPS/ishapes/Circle.hpp:
        * examples/DCPS/ishapes/DDSShapeDynamics.hpp:
        * examples/DCPS/ishapes/README.md:
        * examples/DCPS/ishapes/ShapeDynamics.hpp:
        * examples/DCPS/ishapes/ShapesDialog.hpp:
        * examples/DCPS/ishapes/ShapesWidget.hpp:
        * examples/DCPS/ishapes/Square.cpp:
        * examples/DCPS/ishapes/Square.hpp:
        * examples/DCPS/ishapes/Triangle.cpp:
        * examples/DCPS/ishapes/Triangle.hpp:
        * java/INSTALL:
        * java/OpenDDS.ipr:
        * java/ant/opendds-ant.iml:
        * java/build_scripts/javac_wrapper.pl:
        * java/build_scripts/javah_wrapper.pl:
        * java/dds/DDS/package.html:
        * java/dds/OpenDDS/DCPS/package.html:
        * java/docs/overview.html:
        * java/idl2jni/codegen/be_util.cpp:
        * java/idl2jni/codegen/be_util.h:
        * java/jms/INSTALL:
        * java/jms/README:
        * java/jms/compat/opendds-jms-compat.iml:
        * java/jms/example/jbossesb/helloworld/opendds-helloworld.iml:
        * java/jms/example/jbossesb/helloworld/web/WEB-INF/web.xml:
        * java/jms/example/jbossesb/helloworld2/opendds-helloworld2.iml:
        * java/jms/example/jbossesb/helloworld2/web/WEB-INF/web.xml:
        * java/jms/example/jbossesb/router/opendds-router.iml:
        * java/jms/opendds-jms.iml:
        * java/tests/internal_thread_status/rtps.ini:
        * java/tests/messenger/rtps_disc_tcp.ini:
        * java/tests/participant_location/rtps.ini:
        * java/tests/participant_location/rtps_no_ice.ini:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/MulticastListenerTest/MulticastListenerTest.mpc:
        * performance-tests/DCPS/Priority/Commas.cpp:
        * performance-tests/DCPS/Priority/Commas.h:
        * performance-tests/DCPS/Priority/DataReaderListener.cpp:
        * performance-tests/DCPS/Priority/Options.cpp:
        * performance-tests/DCPS/Priority/Options.h:
        * performance-tests/DCPS/Priority/Options.inl:
        * performance-tests/DCPS/Priority/PublicationProfile.cpp:
        * performance-tests/DCPS/Priority/PublicationProfile.h:
        * performance-tests/DCPS/Priority/Publisher.cpp:
        * performance-tests/DCPS/Priority/Publisher.h:
        * performance-tests/DCPS/Priority/README:
        * performance-tests/DCPS/Priority/Subscriber.cpp:
        * performance-tests/DCPS/Priority/Subscriber.h:
        * performance-tests/DCPS/Priority/Test.h:
        * performance-tests/DCPS/Priority/Writer.cpp:
        * performance-tests/DCPS/Priority/Writer.h:
        * performance-tests/DCPS/Priority/publisher_main.cpp:
        * performance-tests/DCPS/Priority/run_test.pl:
        * performance-tests/DCPS/Priority/scenario1.ini:
        * performance-tests/DCPS/Priority/scenario2.ini:
        * performance-tests/DCPS/Priority/scenario3.ini:
        * performance-tests/DCPS/Priority/scenario6.ini:
        * performance-tests/DCPS/Priority/subscriber_main.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/TCPListener.mpc:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/TCPProfilingTest/README:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/UDPListenerTest/UDPListener.mpc:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/UDPNoKey.mpc:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * performance-tests/bench_2/builder/BuilderProcess.cpp:
        * performance-tests/bench_2/builder/BuilderProcess.h:
        * performance-tests/bench_2/builder/ConfigSectionManager.cpp:
        * performance-tests/bench_2/builder/ConfigSectionManager.h:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/DataReaderListener.h:
        * performance-tests/bench_2/builder/DataReaderManager.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.h:
        * performance-tests/bench_2/builder/DataWriter.h:
        * performance-tests/bench_2/builder/DataWriterListener.h:
        * performance-tests/bench_2/builder/DataWriterManager.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.h:
        * performance-tests/bench_2/builder/Discovery.cpp:
        * performance-tests/bench_2/builder/Discovery.h:
        * performance-tests/bench_2/builder/DiscoveryManager.cpp:
        * performance-tests/bench_2/builder/DiscoveryManager.h:
        * performance-tests/bench_2/builder/ListenerFactory.cpp:
        * performance-tests/bench_2/builder/Participant.h:
        * performance-tests/bench_2/builder/ParticipantListener.h:
        * performance-tests/bench_2/builder/ParticipantManager.cpp:
        * performance-tests/bench_2/builder/ParticipantManager.h:
        * performance-tests/bench_2/builder/Publisher.cpp:
        * performance-tests/bench_2/builder/Publisher.h:
        * performance-tests/bench_2/builder/PublisherListener.h:
        * performance-tests/bench_2/builder/PublisherManager.cpp:
        * performance-tests/bench_2/builder/PublisherManager.h:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Subscriber.h:
        * performance-tests/bench_2/builder/SubscriberListener.h:
        * performance-tests/bench_2/builder/SubscriberManager.cpp:
        * performance-tests/bench_2/builder/SubscriberManager.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder/TopicListener.h:
        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:
        * performance-tests/bench_2/builder/TransportInstance.cpp:
        * performance-tests/bench_2/builder/TransportInstance.h:
        * performance-tests/bench_2/builder/TransportInstanceManager.cpp:
        * performance-tests/bench_2/builder/TransportInstanceManager.h:
        * performance-tests/bench_2/builder/TypeSupportRegistry.cpp:
        * performance-tests/bench_2/builder/TypeSupportRegistry.h:
        * performance-tests/bench_2/builder_idl/Bench_Builder_Idl.mpc:
        * performance-tests/bench_2/builder_idl/Builder.idl:
        * performance-tests/bench_2/builder_idl_json/.gitignore:
        * performance-tests/bench_2/example/config/scenario/ci_disco_flag.json:
        * performance-tests/bench_2/install_bench.pl:
        * performance-tests/bench_2/node_controller/ProcessStatsCollector.h:
        * performance-tests/bench_2/worker/Action.cpp:
        * performance-tests/bench_2/worker/Action.h:
        * performance-tests/bench_2/worker/ActionManager.cpp:
        * performance-tests/bench_2/worker/ActionManager.h:
        * performance-tests/bench_2/worker/DataHandler.h:
        * performance-tests/bench_2/worker/ForwardAction.cpp:
        * performance-tests/bench_2/worker/ForwardAction.h:
        * performance-tests/bench_2/worker/MemFunHandler.h:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/WorkerParticipantListener.cpp:
        * performance-tests/bench_2/worker/WorkerParticipantListener.h:
        * performance-tests/bench_2/worker/WorkerPublisherListener.cpp:
        * performance-tests/bench_2/worker/WorkerPublisherListener.h:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.cpp:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.h:
        * performance-tests/bench_2/worker/WorkerTopicListener.cpp:
        * performance-tests/bench_2/worker/WorkerTopicListener.h:
        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.h:
        * performance-tests/bench_2/worker/main.cpp:
        * performance-tests/bench_2/worker/stop_workers.sh:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopicTest/README:
        * tests/DCPS/C++11/Messenger/Publisher/.gitignore:
        * tests/DCPS/C++11/Messenger/Subscriber/.gitignore:
        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:
        * tests/DCPS/CompatibilityTest/DataReaderListener.cpp:
        * tests/DCPS/CompatibilityTest/common.h:
        * tests/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * tests/DCPS/Compiler/idl_test2_lib/BazDef.idl:
        * tests/DCPS/Compiler/idl_test3_lib/README.txt:
        * tests/DCPS/Compiler/idl_test3_main/README.txt:
        * tests/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * tests/DCPS/Compiler/rapidjson_generator/RapidJsonTest.mpc:
        * tests/DCPS/ConfigTransports/ConfigTransports.mpc:
        * tests/DCPS/ConfigTransports/DDSTEST.cpp:
        * tests/DCPS/ConfigTransports/DataReaderListener.cpp:
        * tests/DCPS/ConfigTransports/Puller.cpp:
        * tests/DCPS/ConfigTransports/README:
        * tests/DCPS/ConfigTransports/common.cpp:
        * tests/DCPS/ConfigTransports/transports.ini:
        * tests/DCPS/ConsolidatedMessengerIdl/ConsolidatedMessengerIdl.mpc:
        * tests/DCPS/ContentFilteredTopic/rtps_disc.ini:
        * tests/DCPS/CorbaSeq/DataReaderListener.cpp:
        * tests/DCPS/CorbaSeq/README:
        * tests/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * tests/DCPS/DPFactoryQos/Writer.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * tests/DCPS/DcpsIntegration/README:
        * tests/DCPS/DcpsIntegration/TopicListener.cpp:
        * tests/DCPS/Deadline/pub.ini:
        * tests/DCPS/Deadline/sub.ini:
        * tests/DCPS/Dispose/Dispose.mpc:
        * tests/DCPS/DomainRange/run_test.pl:
        * tests/DCPS/Federation/DataReaderListener.cpp:
        * tests/DCPS/Federation/DataReaderListener.h:
        * tests/DCPS/Federation/Federation.mpc:
        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Publisher.h:
        * tests/DCPS/Federation/README:
        * tests/DCPS/Federation/Subscriber.cpp:
        * tests/DCPS/Federation/Subscriber.h:
        * tests/DCPS/Federation/TestConfig.cpp:
        * tests/DCPS/Federation/TestConfig.h:
        * tests/DCPS/Federation/publisher_main.cpp:
        * tests/DCPS/Federation/run_test.pl:
        * tests/DCPS/Federation/subscriber_main.cpp:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4/README:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/common.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooType/Foo_Singleton_Transport.cpp:
        * tests/DCPS/FooType3/README.txt:
        * tests/DCPS/FooType3NoKey/README.txt:
        * tests/DCPS/FooType3Unbounded/README.txt:
        * tests/DCPS/FooType5/README.txt:
        * tests/DCPS/GroupPresentation/DataReaderListener.cpp:
        * tests/DCPS/GroupPresentation/GroupPresentation.mpc:
        * tests/DCPS/GroupPresentation/SubscriberListener.cpp:
        * tests/DCPS/GroupPresentation/pub.ini:
        * tests/DCPS/GroupPresentation/sub.ini:
        * tests/DCPS/Instances/README:
        * tests/DCPS/InternalThreadStatus/rtps.ini:
        * tests/DCPS/LatencyBudget/DataReaderListener.cpp:
        * tests/DCPS/LatencyBudget/DataWriterListenerImpl.cpp:
        * tests/DCPS/Lifespan/DataWriterListenerImpl.cpp:
        * tests/DCPS/LivelinessKeepAliveTest/.gitignore:
        * tests/DCPS/LivelinessKeepAliveTest/LivelinessKeepAliveTest.mpc:
        * tests/DCPS/LivelinessKeepAliveTest/README:
        * tests/DCPS/LivelinessKeepAliveTest/Satellite.idl:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/LivelinessTest.mpc:
        * tests/DCPS/LivelinessTest/README:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTimeout/DataReaderListenerImpl.cpp:
        * tests/DCPS/LivelinessTimeout/LivelinessTimeout.mpc:
        * tests/DCPS/LivelinessTimeout/common.cpp:
        * tests/DCPS/ManualAssertLiveliness/README:
        * tests/DCPS/ManyTopicMultiProcess/DataReaderListener.cpp:
        * tests/DCPS/ManyTopicMultiProcess/DataReaderListener1.h:
        * tests/DCPS/ManyTopicMultiProcess/DataReaderListener4.h:
        * tests/DCPS/ManyTopicMultiProcess/Writer.cpp:
        * tests/DCPS/ManyTopicTest/ManyTopicTest.mpc:
        * tests/DCPS/ManyTopicTest/README:
        * tests/DCPS/ManyTopicTypes/README.txt:
        * tests/DCPS/Messenger/pub.ini:
        * tests/DCPS/Messenger/pub_ipv6.ini:
        * tests/DCPS/Messenger/rtps_disc_tcp.ini:
        * tests/DCPS/Messenger/sub.ini:
        * tests/DCPS/Messenger/sub_ipv6.ini:
        * tests/DCPS/Monitor/mon.ini:
        * tests/DCPS/Monitor/pub.ini:
        * tests/DCPS/Monitor/sub.ini:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiDPTest/README:
        * tests/DCPS/MultiRepoTest/DataWriterListenerImpl.cpp:
        * tests/DCPS/MultiRepoTest/DataWriterListenerImpl.h:
        * tests/DCPS/MultiRepoTest/ForwardingListener.h:
        * tests/DCPS/MultiRepoTest/MultiRepoTest.mpc:
        * tests/DCPS/MultiRepoTest/README:
        * tests/DCPS/MultiRepoTest/TestConfig.cpp:
        * tests/DCPS/MultiRepoTest/TestConfig.h:
        * tests/DCPS/MultiRepoTest/TestMonitor.h:
        * tests/DCPS/MultiRepoTest/TestSystem.h:
        * tests/DCPS/MultiRepoTest/monitor.cpp:
        * tests/DCPS/MultiRepoTest/monitor.ini:
        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/MultiRepoTest/system.cpp:
        * tests/DCPS/MultiRepoTest/system1.ini:
        * tests/DCPS/MultiRepoTest/system2.ini:
        * tests/DCPS/MultiRepoTest/system3.ini:
        * tests/DCPS/Ownership/Ownership.mpc:
        * tests/DCPS/Ownership/pub.ini:
        * tests/DCPS/Ownership/run_test.pl:
        * tests/DCPS/Ownership/sub.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_ipv6.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice_ipv6.ini:
        * tests/DCPS/PersistentDurability/DataReaderListener.cpp:
        * tests/DCPS/PersistentDurability/pub.ini:
        * tests/DCPS/PersistentDurability/sub.ini:
        * tests/DCPS/PersistentInfoRepo/PersistentInfoRepo.mpc:
        * tests/DCPS/PersistentInfoRepo/README:
        * tests/DCPS/Presentation/Presentation.mpc:
        * tests/DCPS/Priority/DataReaderListener.cpp:
        * tests/DCPS/Priority/Options.cpp:
        * tests/DCPS/Priority/Options.h:
        * tests/DCPS/Priority/Publisher.cpp:
        * tests/DCPS/Priority/Publisher.h:
        * tests/DCPS/Priority/README:
        * tests/DCPS/Priority/Subscriber.cpp:
        * tests/DCPS/Priority/Subscriber.h:
        * tests/DCPS/Priority/Test.h:
        * tests/DCPS/Priority/run_test.pl:
        * tests/DCPS/Priority/subscriber_main.cpp:
        * tests/DCPS/Priority/transport.ini:
        * tests/DCPS/Priority/transport_solaris.ini:
        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/sub.ini:
        * tests/DCPS/QoS_XML/dump/qos_dump.mpc:
        * tests/DCPS/QueryCondition/rtps_disc.ini:
        * tests/DCPS/ReaderDataLifecycle/ReaderDataLifecycle.mpc:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/README:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/RecorderReplayer/pub.ini:
        * tests/DCPS/RecorderReplayer/pub_ipv6.ini:
        * tests/DCPS/RecorderReplayer/relay_ipv6.ini:
        * tests/DCPS/RecorderReplayer/rtps_disc_tcp.ini:
        * tests/DCPS/RecorderReplayer/sub.ini:
        * tests/DCPS/RecorderReplayer/sub_ipv6.ini:
        * tests/DCPS/Rejects/pub.ini:
        * tests/DCPS/Rejects/sub.ini:
        * tests/DCPS/Reliability/IDL/Reliability.idl:
        * tests/DCPS/Reliability/pub/Publisher.mpc:
        * tests/DCPS/Reliability/shmem.ini:
        * tests/DCPS/Reliability/sub/SeqReaderListenerImpl.cpp:
        * tests/DCPS/Reliability/sub/Subscriber.mpc:
        * tests/DCPS/Reliability/sub/TakeNextReaderListenerImpl.cpp:
        * tests/DCPS/RtiSerialization/RtiSerialization.mpc:
        * tests/DCPS/RtiSerialization/rtps_disc_tcp.ini:
        * tests/DCPS/SampleLost/pub.ini:
        * tests/DCPS/SampleLost/sub.ini:
        * tests/DCPS/Serializer/README:
        * tests/DCPS/Serializer_wstring/README:
        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosDeadline/README:
        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosDeadline/sub.ini:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/README:
        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/sub.ini:
        * tests/DCPS/SharedTransport/rtps_disc_tcp.ini:
        * tests/DCPS/StaticDiscovery/.gitignore:
        * tests/DCPS/StaticDiscoveryReconnect/config.ini:
        * tests/DCPS/SubscriberCycle/ProgressIndicator.cpp:
        * tests/DCPS/TestFramework/TestFramework.cpp:
        * tests/DCPS/Thrasher/ProgressIndicator.cpp:
        * tests/DCPS/Thrasher/Subscriber.cpp:
        * tests/DCPS/Thrasher/Thrasher.mpc:
        * tests/DCPS/TimeBasedFilter/TimeBasedFilter.mpc:
        * tests/DCPS/TransientDurability/pub.ini:
        * tests/DCPS/TransientDurability/sub.ini:
        * tests/DCPS/TransientLocalMultiInstanceTest/README:
        * tests/DCPS/TransientLocalMultiInstanceTest/tcp.ini:
        * tests/DCPS/TransientLocalTest/README:
        * tests/DCPS/TransientLocalTest/tcp.ini:
        * tests/DCPS/UnitTests/UnitTests.mpc:
        * tests/DCPS/WaitForAck/Options.cpp:
        * tests/DCPS/WaitForAck/Options.h:
        * tests/DCPS/WaitForAck/Options.inl:
        * tests/DCPS/WaitForAck/Publisher.cpp:
        * tests/DCPS/WaitForAck/Publisher.h:
        * tests/DCPS/WaitForAck/Subscriber.cpp:
        * tests/DCPS/WaitForAck/Subscriber.h:
        * tests/DCPS/WaitForAck/Writer.cpp:
        * tests/DCPS/WaitForAck/Writer.h:
        * tests/DCPS/WaitForAck/publisher_main.cpp:
        * tests/DCPS/WaitForAck/subscriber_main.cpp:
        * tests/DCPS/ZeroCopyDataReaderListener/pub_ipv6.ini:
        * tests/DCPS/ZeroCopyDataReaderListener/rtps_disc_tcp.ini:
        * tests/DCPS/ZeroCopyDataReaderListener/sub_ipv6.ini:
        * tests/DCPS/ZeroCopyDataReaderListener/tcp.ini:
        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/sub.ini:
        * tests/DCPS/unit/MyTypeSupport.idl:
        * tests/FACE/Compiler/idl_test1_main/FACE_idl_test1_main.mpc:
        * tests/FACE/Compiler/idl_test3_main/FACE_idl_test3_main.mpc:
        * tests/FACE/Compiler/idl_test3_main/README.txt:
        * tests/FACE/Compiler/idl_test4_lib/FACE_idl_test4_lib.mpc:
        * tests/FACE/Compiler/idl_test4_lib/README.txt:
        * tests/FACE/Compiler/idl_test4_lib/top.idl:
        * tests/FACE/Unit/FreeIndexTest.cpp:
        * tests/FACE/Unit/MemoryPoolTest.cpp:
        * tests/FACE/Unit/QosSettingsTest.cpp:
        * tests/Utils/ExceptionStreams.h:
        * tests/Utils/StatusMatching.h:
        * tests/cmake_integration/run_ci_tests.pl:
        * tests/security/IDL_Serialization/IDL_Serialization.mpc:
        * tests/security/RTPS/ParameterListConverterTest.cpp:
        * tests/security/RTPS/RTPS.mpc:
        * tests/security/TopicWithoutPermissions/.gitignore:
        * tests/security/attributes/Args.cpp:
        * tests/security/attributes/README:
        * tests/security/certs/identity/gen_new_ec_cert.sh:
        * tests/security/certs/identity/gen_new_rsa_cert.sh:
        * tests/security/certs/identity/identity_ca_openssl.cnf:
        * tests/security/certs/permissions/README:
        * tests/security/certs/permissions/permissions_ca_openssl.cnf:
        * tests/security/certs/permissions/sign_doc.sh:
        * tests/security/framework/test1.ini:
        * tests/security/sign_governance_and_permissions_files.pl:
        * tests/transport/error_handling/run_test.pl:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tools/dissector/README.md:
        * tools/dissector/ws_config.h:
        * tools/excelRTD/README.md:
        * tools/excelRTD/Script.rc:
        * tools/monitor/Edge.cpp:
        * tools/monitor/GraphGenerator.cpp:
        * tools/monitor/GraphGenerator.h:
        * tools/monitor/GvOptions.cpp:
        * tools/monitor/GvOptions.h:
        * tools/monitor/Monitor.mpc:
        * tools/monitor/MonitorData.cpp:
        * tools/monitor/MonitorDataModel.cpp:
        * tools/monitor/MonitorDataModel.h:
        * tools/monitor/MonitorDataStorage.cpp:
        * tools/monitor/MonitorDataStorage.h:
        * tools/monitor/MonitorDataStorage.inl:
        * tools/monitor/MonitorTask.cpp:
        * tools/monitor/MonitorTask.h:
        * tools/monitor/Monitor_main.cpp:
        * tools/monitor/Node.cpp:
        * tools/monitor/NodeGenerator.cpp:
        * tools/monitor/NodeGenerator.h:
        * tools/monitor/NodeOptions.cpp:
        * tools/monitor/Options.cpp:
        * tools/monitor/Options.h:
        * tools/monitor/QosFormatter.cpp:
        * tools/monitor/QosFormatter.h:
        * tools/monitor/README.md:
        * tools/monitor/RepoSelect.cpp:
        * tools/monitor/RepoSelect.h:
        * tools/monitor/TreeNode.h:
        * tools/monitor/Viewer.h:
        * tools/monitor/repos.ini:
        * tools/monitor/start_repos.pl:
        * tools/repoctl/repoctl.mpc:
        * tools/scripts/face_pp.rb:
        * tools/scripts/generate_combined_doxygen.pl:
        * tools/scripts/style/style.d/02_obsolete.sed:

          Make OpenDDS Pass The New Linter Script

Fri Nov 13 00:59:09 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4704f83b996d4b056815ded37a14110c81462cac

        * .github/workflows/lint.yml:
        * tools/scripts/dds_fuzz.pl:
        * tools/scripts/lint.pl:

          Fixes and Improvments for lint.pl

Thu Nov 12 22:50:22 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit f7fd122cfebde8a40fba9a35c689487c0a1a2dea

        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:

          Minor fixes

Thu Nov 12 22:11:33 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 5f2cdb9dfd2e1e3765d9e65cadce9d7527e69676

        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:

          variable name change

Thu Nov 12 22:02:55 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 20161de6dd1200ec67852baa96a63fbf69c43a54

        * performance-tests/bench_2/worker/Action.cpp:

          Layout fixes

Thu Nov 12 21:39:50 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit ad64f8a551ab6fa67ac5dde64d1d09bded80b576

          Merge remote-tracking branch 'upstream/master' into igtd/linter

Thu Nov 12 21:36:47 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 27e065dd6e024948da8a4c088c430aaa6de6c5aa

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/worker/Action.cpp:
        * performance-tests/bench_2/worker/Action.h:
        * performance-tests/bench_2/worker/ActionManager.cpp:
        * performance-tests/bench_2/worker/ForwardAction.cpp:
        * performance-tests/bench_2/worker/ForwardAction.h:
        * performance-tests/bench_2/worker/SetCftParametersAction.cpp:
        * performance-tests/bench_2/worker/SetCftParametersAction.h:
        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/WriteAction.h:
        * performance-tests/bench_2/worker/configs/simple_action_content_filtered_topics_config.json:
        * performance-tests/bench_2/worker/main.cpp:

          Added Action class for setting content filtered topic parameters

Thu Nov 12 21:11:58 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 537961ccf9606ddb9fb4568c25af6376c22faeb6

        * tests/DCPS/ZeroCopyRead/main.cpp:

          Remove local struct from template used in ZeroCopyRead test

Thu Nov 12 17:57:52 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 1831212120eeb8cbc71a8d8d92c8ea87f2c99788

        * performance-tests/bench_2/run_test.pl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Cleanup and update test Perl script

Thu Nov 12 16:25:28 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit da81c7b689647b879a9d85ae2fc40a338babe0ac

          Merge branch 'master' into add_tags_bench2

Thu Nov 12 16:24:41 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit b4ff830a2b68f76026df1fd2d8ab42d15d6e864f

        * performance-tests/bench_2/example/config/scenario/simple_tags.json:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Add debugging log

Thu Nov 12 16:01:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f3833a397c775ebef9725e880a4fd2567fc598e2

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS direct heartbeats unnecessarily

          Problem
          -------

          When a reliable writer writes a sample, all of the reader will
          now be
          lagging.  The writer only needs to send a single non-directed
          heartbeat instead of sending a directed heartbeat to each reader.

          Solution
          --------

          Send a non-directed heartbeat for the identified case which is
          not
          applicable to the participant volatile secure writer.

Thu Nov 12 14:16:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1413a9c056e3fc1e0b00575c0f8687f4eafbb5c1

          Merge pull request #2041 from jrw972/reliable-thrasher

          Reliabilty fixes for Thrasher test

Thu Nov 12 14:16:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c14c7c2849b336e66a1caeb26b81a3abe5968198

          Merge pull request #2040 from simpsont-oci/remove_override

          Remove override from ReactorTask::open

Thu Nov 12 14:15:54 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bbdd8d588a0713ebccbc7a9ca1b9d2d9d1e11191

          Merge pull request #2039 from
          simpsont-oci/fix_zerocopy_seq_length

          Fix Length Issue in ZeroCopySeq, Add Test Coverage

Thu Nov 12 14:15:42 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 79f77516e3907a32024b8f6c7b598b3bd3986792

          Merge pull request #2038 from
          ClaytonCalabrese/opendds3_15_monitortest

          Monitor Test Failure due to strong RcHandle

Thu Nov 12 01:56:30 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e5c10e2d15aba03c44225b4c298f7f2c1e7653a9

        * dds/DCPS/SporadicTask.h:

          Fix logging

Thu Nov 12 00:39:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 62260ae56a023266607b33e676de6a8fc5c69957

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/Thrasher/ParticipantTask.cpp:

          Reliabilty fixes for Thrasher test

          Problem
          -------

          * The Thrasher Test does not allocate a large enough send buffer
          to
          account for control messages in RTPS.
          * An ACK does not clear the requested changes for a reader. This
          may
          cause the writer to send useless GAPs.

          Solution
          --------

          * Increase the `nak_depth` parameter.
          * Clear the requested changes for each received ACKNACK.

Wed Nov 11 22:10:31 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit bfaeef3589f29618aa225661be7a0554d49643db

        * performance-tests/bench_2/example/config/scenario/simple_tags.json:
        * performance-tests/bench_2/example/config/worker/tagged_control.json:
        * performance-tests/bench_2/example/config/worker/tagged_processing.json:
        * performance-tests/bench_2/example/config/worker/tagged_raw.json:
        * performance-tests/bench_2/test_controller/main.cpp:

          Fix command-line options and add test config files

Wed Nov 11 22:08:34 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8c74cbd61356b30bbd067a0df7ea851481fa2e05

        * dds/DCPS/ReactorTask.h:

          remove override from reactortask::open

Wed Nov 11 22:07:52 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 73623156db4f578b3e2eae947c8dc2f003f256d8

        * dds/DCPS/SporadicTask.h:

          downgrading to warnings

Wed Nov 11 22:03:35 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 27095380fadd8c48c7d8fd984816f68f4271e567

        * dds/DCPS/ZeroCopySeq_T.cpp:
        * tests/DCPS/ZeroCopyRead/main.cpp:

          fixing issue in ZeroCopySeq length growth method where result
          length is not set correctly

Wed Nov 11 18:08:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a2059e3f647f5ebd0aaa8bd32892725b2fad900f

          Merge pull request #2035 from
          pollocktoci/domain_range_test_memory_leak

          DomainRangeTest memory leak fix

Wed Nov 11 18:07:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 77f71d360919b8eedffef50af786a9bed3847c51

          Merge pull request #2033 from simpsont-oci/fix_various_warnings

          Fix Various Scoreboard Build Warnings

Wed Nov 11 16:48:51 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit de5c660b3b10f8956828fa5086ad29678dfc6290

        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder_idl/Builder.idl:

          Fixes as per PR#2028 review

Wed Nov 11 05:36:40 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cd34b8120b654974661e3f11f9a6a8ba06096e81

          Merge branch 'master' into fix_various_warnings

Wed Nov 11 05:23:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 94fb01271f49be83e38ce08d39ca6d42a4a5815b

          Merge pull request #2036 from lij-oci/fragment_typo

          fragment_typo

Wed Nov 11 05:23:33 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 376c92b3e5ba3c88d51b8be2fe328091b7269a9a

          Merge pull request #2034 from jrw972/rtps-acknack-cleanup

          Acknack processing does not handle reset

Wed Nov 11 05:22:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit eda1b76060f82fd1c85c51e19573c4cd63684863

          Merge pull request #2003 from jonesc-oci/conformance_test_changes

          ACE_thread_t initialization safety conformance change.

Wed Nov 11 03:31:04 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 4a9f506765bf05b9daf3ed35657ead3b21b4126d

        * performance-tests/bench_2/test_controller/main.cpp:

          Fix command line options and print format

Wed Nov 11 03:00:01 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 68b64b359ce5b85f2e7e4402ee9c978fd8319f1d

        * performance-tests/bench_2/builder/BuilderProcess.cpp:
        * performance-tests/bench_2/builder/BuilderProcess.h:
        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/DataReaderManager.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.h:
        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/builder/Participant.h:
        * performance-tests/bench_2/builder/ParticipantManager.cpp:
        * performance-tests/bench_2/builder/ParticipantManager.h:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Subscriber.h:
        * performance-tests/bench_2/builder/SubscriberManager.cpp:
        * performance-tests/bench_2/builder/SubscriberManager.h:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:
        * performance-tests/bench_2/worker/ActionManager.cpp:
        * performance-tests/bench_2/worker/ActionManager.h:
        * performance-tests/bench_2/worker/main.cpp:

          Moved Content Filtered Topic Map to BuilderProcess for use in
          Actions

Wed Nov 11 02:40:13 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 6e41d0718a3478f5dea89766088e13aceba278e1

        * performance-tests/bench_2/common/PropertyStatBlock.cpp:
        * performance-tests/bench_2/test_controller/main.cpp:

          Collect and print tag-based stats

Tue Nov 10 23:52:20 UTC 2020  Clayton Calabrese  <calabresec@objectcomputing.com>
        commit 96864b54d908d5afd2ce271a24f71ededf34b4a3

        * dds/DCPS/SporadicTask.h:

          Visual studio automatically changed spacing to not match
          guidelines.

Tue Nov 10 23:48:05 UTC 2020  Clayton Calabrese  <calabresec@objectcomputing.com>
        commit e95fb1b340b91a53e7e645d9ed1d8a789aa1b75c

        * dds/DCPS/SporadicTask.h:

          changed RC handle to a weak RC handle in sporadictask. Added
          requisite locks to functions.

Tue Nov 10 17:37:15 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 81a7ff9f8bd6723c1ae3377c4f4bd7f0a3833ad4

        * dds/DCPS/transport/framework/TransportQueueElement.cpp:

          fragment_typo

Tue Nov 10 17:29:19 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 9be95894ae3a77f11c0dc883f5bad9bdfb5eca25

        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:

          Fixes

Tue Nov 10 17:21:31 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit fc9cc78aab8bf745641ed22d23518d4723bd0452

        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:
        * dds/idl/value_writer_generator.cpp:

          resolving pr comments

Tue Nov 10 15:46:07 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8486355d8e82498183e144a01b737669d7e3f349

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * dds/idl/value_writer_generator.cpp:
        * tests/DCPS/UnionTopic/UnionTopic.cpp:

          fixing more scoreboard warnings

Tue Nov 10 15:09:58 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 91e9caeac63d47373bb5a56c5361fd3f95442409

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Modified DomainRangeTest to iterate over vector.

Tue Nov 10 15:00:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 616a5b1e958b71812030a7d3f6183208ea109852

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Acknack processing does not handle reset

          Problem
          -------

          Reliable RtpsReaders do not send an ACKNACK to complete
          association.
          Reliable RtpsWriters do not handle the case where a reader is
          rediscovered after a network partition.  Reliable readers do not
          perform adequate cleanup when a writer is removed.

          Solution
          --------

          Add logic for readers to send ACKNAcks to complete association.
          Add
          logic to reset a reader.  Add cleanup logic.

Tue Nov 10 13:01:30 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit aac26b3044c411c2adec173f7010a86bebb17017

        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/ReactorTask.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/idl/langmap_generator.cpp:
        * performance-tests/bench_2/node_controller/ProcessStatsCollector.cpp:
        * performance-tests/bench_2/node_controller/ProcessStatsCollector.h:
        * performance-tests/bench_2/test_controller/DdsEntities.h:

          fix various scoreboard build warnings

Tue Nov 10 05:24:45 UTC 2020  Son Dinh  <dinhs@objectcomputing.com>
        commit 61bfddce8286cef185fa748a97770edcfc121808

        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder_idl/Builder.idl:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:

          Adding stats based on tags

Tue Nov 10 02:36:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b67ce60fbdc6683001e3d6ce09a29f016c179d4d

          Merge pull request #2029 from
          jrw972/rtps-relay-max-undirected-gain

          max_undirected_gain is always zero

Tue Nov 10 02:35:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8cd9b035ca4d6849390ab210a6e2a45ef77ffe99

          Merge pull request #2025 from iguessthislldo/igtd/docs

          Sphinx Tweaks

Tue Nov 10 00:08:59 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 01fb7f5da5d3375ed3612ba295048ad2f916bef4

        * dds/DCPS/DiscoveryBase.h:

          Mac OS ACE_thread_t initialization

Mon Nov 09 22:01:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fd89f5fcf292307c725f0e6d500872eb47a21b78

          Merge pull request #2027 from
          simpsont-oci/prevent_non_empty_bitmap_shadowing

          Unshadow non_empty_bitmap boolean in RtpsUdpDataLink

Mon Nov 09 22:01:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2278edf8834c8a58e356c07b942c6c21e46c959d

          Merge pull request #2004 from
          pollocktoci/rapid-json-wrapper-changes

          Updated RapidJsonWrapper to get rid of 'unknown warning group' in
          clang build.

Mon Nov 09 20:51:41 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 210d5de7df85b92a5483c91efce0d10ddd4c29ec

        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:

          max_undirected_gain is always zero

          Problem
          -------

          The predicate for determining if a messagage was directed or
          undirected is incorrect because `to` will be non-empty for
          undirected
          sends.

          Solution
          --------

          Determine if a message is undirected before populating `to` from
          the
          association table.

Mon Nov 09 19:25:44 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 2e4a191f9256545e2b368f653b245aa452a46ad2

          Merge branch 'master' of
          https://github.com/objectcomputing/OpenDDS into JFT_CFT

          # Conflicts:
          #       performance-tests/bench_2/builder/DataReader.cpp
          #       performance-tests/bench_2/builder/TopicManager.cpp

Mon Nov 09 18:51:29 UTC 2020  Mike Kuznetsov  <kuznetsovm@objectcomputing.com>
        commit 4294f8995d8829afc83bf1d4b47723c341437d8f

        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:
        * performance-tests/bench_2/builder_idl/Builder.idl:

          Added support for definition of Content Filtered Topics

Mon Nov 09 15:34:57 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit e666eb112b209e01c36d5588497348f8b842ad78

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          unshadow boolean

Mon Nov 09 12:49:18 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 46e200822efee6f59e75e22da0cebfea2c501153

        * performance-tests/bench_2/builder/BuilderProcess.cpp:
        * performance-tests/bench_2/builder/BuilderProcess.h:
        * performance-tests/bench_2/builder/Common.h:
        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataReader.h:
        * performance-tests/bench_2/builder/DataReaderManager.cpp:
        * performance-tests/bench_2/builder/DataReaderManager.h:
        * performance-tests/bench_2/builder/DataWriter.cpp:
        * performance-tests/bench_2/builder/DataWriter.h:
        * performance-tests/bench_2/builder/DataWriterManager.cpp:
        * performance-tests/bench_2/builder/DataWriterManager.h:
        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/builder/Participant.h:
        * performance-tests/bench_2/builder/ParticipantManager.cpp:
        * performance-tests/bench_2/builder/ParticipantManager.h:
        * performance-tests/bench_2/builder/Publisher.cpp:
        * performance-tests/bench_2/builder/Publisher.h:
        * performance-tests/bench_2/builder/PublisherManager.cpp:
        * performance-tests/bench_2/builder/PublisherManager.h:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Subscriber.h:
        * performance-tests/bench_2/builder/SubscriberManager.cpp:
        * performance-tests/bench_2/builder/SubscriberManager.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder/TopicManager.cpp:
        * performance-tests/bench_2/builder/TopicManager.h:
        * performance-tests/bench_2/common/PropertyStatBlock.cpp:
        * performance-tests/bench_2/common/PropertyStatBlock.h:
        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/node_controller/ProcessStatsCollector.cpp:
        * performance-tests/bench_2/node_controller/ProcessStatsCollector.h:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.h:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/main.cpp:

          Updating Bench Improved Discovery, CPU, Memory Stats (#1944)

          * updating testcontroller and nodecontroller to make room for
          discovery, cpu, memory stats

          * promoting discovery time delta to full stat-block statistic

          * adding writer-side discovery, fixing enable_time_ calculation
          to occur before discovery possible

          * add cpu & memory statistics display to test_controller

          * updated for Windows bench2 process stats

          (cherry picked from f6874409b519aa9c81368246a46d89418b3035e7)

          * vs2019 C++11 warning cleanup for node_controller

          * Fix Linux Build Issues, Prep for Linux Implementation

          * Fixing issues when expected match count is less than match
          count

          * Fixing issues with delayed enabling

          * more fixes for delayed enable of entities, don't prevent enable
          from being called more than once since spec allows it

          * a bit of naming cleanup

          * Pulling ProcessStatisticsUtils into ProcessStatsCollector,
          adding error checking

          * adding linux cpu percent calc

          * Update performance-tests/bench_2/builder/DataReader.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/builder/DataWriter.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update
          performance-tests/bench_2/test_controller/ScenarioManager.h

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update
          performance-tests/bench_2/node_controller/ProcessStatsCollector.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/test_controller/main.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/test_controller/main.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/node_controller/main.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/node_controller/main.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update performance-tests/bench_2/node_controller/main.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Update
          performance-tests/bench_2/node_controller/ProcessStatsCollector.cpp

          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

          * Implement virtual memory stats on linux, clean up memory stats
          impl

          * fixing SEGV reference counting issue in node_controller

          * fixing if/while curly braces

          * add virtual memory to stats collection & output

          Co-authored-by: wilsongOCI <wilsong@objectcomputing.com>
          Co-authored-by: Son Dinh <dinhs@objectcomputing.com>

Mon Nov 09 11:44:24 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit dfa40282a9ff899329bcfc47a1f46b40e4ade1a5

        * dds/DCPS/RapidJsonWrapper.h:

          Fix failing Linux builds

          Linux builds for this PR are failing with the error:

          ../../../dds/DCPS/RapidJsonWrapper.h:6:45: error: missing binary
          operator before token "("
          #if !defined(__has_warning) || __has_warning("-Wclass-memaccess")

          Restructuring preprocessor directives to try to avoid that error.

Mon Nov 09 11:22:48 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit f9a57e4f2b5a0cfd7a673498dcce8ca057fb6d2f

          Merge branch 'master' into rapid-json-wrapper-changes

Mon Nov 09 06:28:16 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c888a11da5bf0eb9e148e3cfb45b0d5d8165e3fd

        * docs/conf.py:

          Sphinx: Set Pygments Style

Mon Nov 09 05:56:26 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d811edc0c1d9197702bc4f626f5e7d4efb986ce4

        * docs/conf.py:
        * docs/internal/bench2.rst:
        * docs/logo_32_32.ico:

          Sphinx Tweaks

          - Added code highlighting to Bench2 in anticipation of the
          addition of
          [OMG IDL hightlighting support
          upstream](https://github.com/pygments/pygments/pull/1595).
          - Added [favicon](https://en.wikipedia.org/wiki/Favicon) for html
          output.
          - Make `version` the same as `release`.

Sun Nov 08 14:31:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit da20004ae79ef639853537898eae86c7cb6c6b7b

          Merge pull request #2007 from jrw972/rtps-scalability-2

          RTPS AckNack is not scalable

Sat Nov 07 23:17:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 49a0c4f5b0ac4ebe272df61931926eb7250a3892

          Merge pull request #2008 from jrw972/rtps-scalability-3

          RTPS "acked by all" logic is not scalable

Sat Nov 07 23:16:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fab64bff6fe5b52c4cac270df3e00001dd54ddcf

          Merge branch 'master' into rtps-scalability-2

Sat Nov 07 23:06:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b633f421dec6356fd9b2791bb0422779ff5c3444

          Merge pull request #2023 from simpsont-oci/spdp_uninit_branch

          Avoid RTPX check when RTPS has already succeeded

Sat Nov 07 23:06:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fa533c1f794c1722be52cc373ac512cd4fe025c6

          Merge pull request #2022 from jrw972/revoke-permissions-deadlock

          `RevokePermissionsTimer` deadlocks

Sat Nov 07 23:06:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c411ea9bbfedaa7894947de5e372dda677803a67

          Merge pull request #2021 from
          simpsont-oci/fix_multicast_join_rtps_udp_transport

          Use DCPSDefaultAddress to Initialize multicast_interface for
          RtpsUdpTransport Config

Sat Nov 07 23:06:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b46f7bd0ee8f95677f8cd590cf0a48de169009c7

          Merge pull request #2020 from jrw972/rtps-relay-directed-gain

          RtpsRelay stats don't distinguish directed and undirected gain

Sat Nov 07 23:05:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0e6ac20d9e49a062ae1ba68ae214092d61624cf1

          Merge pull request #2018 from jrw972/confused-routers

          Some routers confused over STUN traffic

Sat Nov 07 23:05:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 99cc28d58e4e66345efb9fe4a8266b6186b6088b

          Merge pull request #2017 from
          pollocktoci/durability_resend-memory-lead-fix

          durability_resend memory leak fix

Sat Nov 07 23:05:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a882f3428c64bdfd905c248f87d1d868cd8bedab

          Merge pull request #2014 from jrw972/transport-resource-leak-1

          TransportImpl/TransportClient leak resources for pending
          connections

Sat Nov 07 23:05:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9ae8c35f385d19cda86c6acaaa234cf958d0a158

          Merge pull request #2013 from
          jrw972/participant-location-topic-test-relay-config

          Fix relay configuration for ParticipantLocationTopic test

Sat Nov 07 23:04:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 121a6c527881d3e6cf455c87cad7ce8ee5f8b829

          Merge pull request #2009 from jrw972/rtps-scalability-4

          RTPS send nack replies is not scalable

Sat Nov 07 23:04:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 79d82564d59c31fc375a5a8460c4c289b2698c28

          Merge pull request #1984 from iguessthislldo/igtd/docs

          Bench 2 Sphinx Documentation

Sat Nov 07 05:19:33 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 667bac39bf0e41423aa9a7d04e93686644efcbd5

        * dds/DCPS/RTPS/Spdp.cpp:

          Avoid RTPX check when RTPS has already succeeded to avoid
          branching on uninitialized bytes

Sat Nov 07 01:15:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8e9834141c7807b353ae92da541144aad1a63f18

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:

          `RevokePermissionsTimer` deadlocks

          Problem
          -------

          The `RevokePermissionsTimer` deadlocks with concurrent calls to
          `start_timer` and `handle_timeout`.

          Solution
          --------

          Replace `ACE_Event_Handler` with SporadicTask.

Fri Nov 06 22:20:03 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 125d402954f42c3348014ada13e5ccc0857ad800

        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Use DCPSDefaultAddress to Initialize multicast_interface for
          RtpsUdpTransport Config

Fri Nov 06 20:49:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 777718560f9520c0615d9e8fa71e83ba2fe227c3

        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RelayStatisticsReporter.h:
        * tools/rtpsrelay/lib/Relay.idl:

          RtpsRelay stats don't distinguish directed and undirected gain

          Problem
          -------

          When a client sends a message to the RtpsRelay it may get
          forwarded to
          N other clients.  The number N is the gain and is an important
          statistic for the RtpsRelay as it will be more performant for
          small N
          and can be used to diagnose potential scalability problems.

          Messages where all submessages are prefixed with INFO_DST must be
          sent
          to all named destinations (if they exist). Otherwise, the relay
          must
          forward the message using the association table. When applied to
          gain, the former is gain for directed messages and the latter is
          gain
          for undirected messages.

          Currently, the RtpsRelay does not distinguish these two cases.

          Solution
          --------

          Add statistics for the maximum directed and undirected gain
          observed
          over a statistics interval.

Fri Nov 06 19:08:29 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit d9e4fda8844e299db30d022a55a4d14cec3d6ce0

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Made buffer passed into LongSeq8 static.

Fri Nov 06 18:55:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 65ed75179be88534b63621e3b392064a8a4e77c2

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Spdp.cpp:

          Some routers confused over STUN traffic

          Problem
          -------

          When using the RtpsRelay and ICE, the SPDP port will send STUN
          packets
          to both the SPDP and SEDP port of the relay.  In practice, this
          confuses the router and the observed behavior is that all traffic
          from
          the relay's SPDP port was dropped. The SEDP and DATA channels
          when
          using the same router are not affected.

          Solution
          --------

          Add configuration so that SPDP will send STUN to the SPDP port of
          the RtpsRelay.

Fri Nov 06 17:47:05 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 43e6084f68de28ad8c405c8e36a740a175f4f214

          Merge branch 'master' into durability_resend-memory-lead-fix

Fri Nov 06 17:44:37 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit f4a500b9a8d5192aa65f0cf87b576bf23c0fcaee

          Merge remote-tracking branch 'upstream/master'

Fri Nov 06 17:43:58 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit b3d2a7f1ff68f3f6c90786f1b92a1a68defb308a

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Modified initialization of FragmentNumberSet to fix occasional
          memory leak.

Fri Nov 06 17:17:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8e164058bcb2e2c4755f8938cd79dca1ffe311a8

          Merge pull request #2015 from jrw972/readers-of-writers-leak

          `readers_of_writers_` map leaks

Fri Nov 06 12:38:50 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 5e7f1be004bc6965aa77b3cbc637a3e006777c29

          Merge remote-tracking branch 'upstream/master'

Fri Nov 06 02:15:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4c74176471b9567e83e4d6351c9a25ee702f6c76

          Merge pull request #2010 from jrw972/reactor-task-busy-loop

          ReactorTask has a busy loop

Thu Nov 05 23:27:01 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7a7d0bd54ea4ecb761afe4fa738e09490a3a6d0e

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          `readers_of_writers_` map leaks

          Problem
          -------

          Entries are inserted and never removed.

          Solution
          --------

          Use correct identifier when searching for item to remove.

Thu Nov 05 22:39:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c62ecd09a9193483bded5f13f8321e16ba367af3

          Merge pull request #2011 from jrw972/rtps-relay-output-queue

          RtpsRelay drops message when bursting

Thu Nov 05 22:22:45 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cdb37df1a94d2361eef8d521c771169bb9205bc6

        * dds/DCPS/transport/framework/TransportClient.cpp:

          TransportImpl/TransportClient leak resources for pending
          connections

          Problem
          -------

          Active and passive pending connections are inserted into the
          `pending_connections_` map in TransportClient.  These pending
          connections should be cleaned up by an eventual call to
          `stop_accepting_or_connecting`. However, the code in
          `use_datalink_i`
          that calls `stop_accepting_or_connecting` for the non-active
          case.

          Solution
          --------

          Unconditionally call `stop_accepting_or_connecting`.

Thu Nov 05 21:41:41 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9e8e816a5d29404d3a2c3856519dfbace76558d2

        * tests/DCPS/ParticipantLocationTopic/relay.ini:
        * tests/DCPS/ParticipantLocationTopic/relay_ipv6.ini:

          Fix relay configuration for ParticipantLocationTopic test

Wed Nov 04 18:46:30 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c181ac3c6f45c35f499d57c69cabadcbf4edf6e2

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS AckNack is not scalable

          Problem
          -------

          A reliable RtpsReader loops over all writers when generating
          AckNacks.

          Solution
          --------

          Keep track of two sets: writers that need a nack due to missing
          data
          and writers that just need an ack.

          This also adds support for sending HeartBeatFrag messages.

Thu Nov 05 20:02:24 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 13c716c3f0198a3cdcfb6006acd0b78021c128b4

        * dds/DCPS/ReactorTask.cpp:

          Apply suggestions from code review

          Co-authored-by: Timothy Simpson <simpsont@objectcomputing.com>

Thu Nov 05 18:54:44 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3fbe9ba25848370227be49bcd4ce409d3cd1531a

        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RelayStatisticsReporter.h:
        * tools/rtpsrelay/lib/Relay.idl:

          RtpsRelay drops message when bursting

          Problem
          -------

          The RtpsRelay uses non-blocking I/O.  In practice, it received
          EWOULDBLOCK/EAGAIN errors when sending. Increasing the OS UDP
          send
          buffer size did not help. The user-space UDP send buffer size is
          at a
          maximum.

          Solution
          --------

          Resurrect the logic that queues output messages to handle bursts.
          The
          next step may be to bound the length of the output queue.

Thu Nov 05 12:09:43 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit e8e2d9f8e0e1a8ec63d76eb942590438912669ac

          Merge remote-tracking branch 'upstream/master' into
          rapid-json-wrapper-changes

Thu Nov 05 02:13:26 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit bae1728265b36968ee8ee87b2408a262a847f186

          Merge remote-tracking branch 'upstream/master'

Thu Nov 05 01:48:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6f8d4a53d71256e495a5357006215a9418e5ab1b

        * dds/DCPS/ReactorTask.cpp:

          ReactorTask has a busy loop

          Problem
          -------

          The thread monitoring code in ReactorTask runs for one cycle and
          then
          degenerates into a busy loop.

          Solution
          --------

          Reset the time given to run the event loop.

Wed Nov 04 23:02:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a9a20c7e357323e84030942b8fcbd6d4fdd91c76

          Merge pull request #2001 from pollocktoci/azure-pipeline-changes

          Fixing projects skipped by Azure Pipeline config

Wed Nov 04 21:56:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e33d40affcad0ba451bdcf0d458556dacfd1fe95

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS send nack replies is not scalable

          Problem
          -------

          An RtpsWriter loops through every reader to determine if it sent
          a
          nack and is expecting data.

          Solution
          --------

          Maintain a set of readers that have sent a nack.

Wed Nov 04 21:01:58 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 70296107a6d04fac8fe25d982416d0e3c8efc775

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RTPS "acked by all" logic is not scalable

          Problem
          -------

          When processing an ack, the RtpsWriter iterates over all readers
          to
          determine the minimum sequence number that must be retained and
          therefore which samples can be released.

          Solution
          --------

          Use the leading and lagging maps to find the minimum without
          iteration.

Wed Nov 04 12:42:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 90ac58906170673b6af569fcdd55c452d411b23f

          Merge pull request #2000 from jrw972/rtps-scalability-1

          RTPS reliable writes are not scalable

Wed Nov 04 12:41:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 45e7e0a9c1470fd84936bc10af9dfb9093344a31

          Merge pull request #1999 from jrw972/spdp-lease-expiration

          SPDP lease processing is not scalable

Wed Nov 04 12:24:00 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit c4fb392a586d1ef80b26c9855e454d63214c523d

          Merge remote-tracking branch 'upstream/master' into
          rapid-json-wrapper-changes

Wed Nov 04 12:16:30 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 7881a18e05d6b20696c56872c6c8edd79d3de3f0

          Merge remote-tracking branch 'upstream/master'

Wed Nov 04 06:53:38 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2d2038249abe4696a3041ae67bf7198e46859fb3

        * docs/.gitignore:
        * docs/README.md:
        * docs/logo_100_100.png:

          Sphinx: Dash/Zeal Format Instructions

Wed Nov 04 06:33:45 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 75833a0fce40bd853c0c0e0e696eb2c0c3c05a0e

        * docs/README.md:
        * docs/conf.py:
        * docs/devguide/common_terms.rst:
        * docs/index.rst:
        * docs/internal/bench2.rst:

          Sphinx: Various Changes

          - Respond to #1984 Review
          - Make bench2 Documentation More Index-friendly
          - Add Non-Release Warning from AsciiDoc Prototype
          - Add Common Terms File
          - conf.py:
          - Fix Indent
          - Add Excludes to Suppress Warnings

Wed Nov 04 05:19:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 653342ba5adc0cd006b731dc2ee7653044076c3b

          Merge pull request #2002 from jrw972/rtps-relay-bugs

          RtpsRelay bugs

Tue Nov 03 22:32:24 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ca69f22d04248453dd5cbb94d184a5d7373f0c55

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Allow 0 bits in gap bitmask

Tue Nov 03 21:49:47 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 908c137f4354b63ba61efdfc8ffe30dbdfd42dbb

        * dds/DCPS/RTPS/Spdp.cpp:

          Update dds/DCPS/RTPS/Spdp.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Tue Nov 03 20:55:59 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 461a4120f76a8a64600d12a44a2a5538a6a973b1

        * docs/internal/bench2.rst:
        * performance-tests/bench_2/README.md:

          Bench2: Point to New Docs in README [skip ci]

          Also use option directive in bench2.rst.

Tue Nov 03 19:43:18 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit b9484cae60d8ac5a57fde93538429067ddbef0c6

        * dds/DCPS/RapidJsonWrapper.h:

          Updated to get rid of 'unknown warning group' in clang build.

Tue Nov 03 16:29:47 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2037afcec0e32ea650291aa8ccc9f6dec3f83460

        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:

          Dispose race in RtpsRelay

          Problem
          -------

          An SPDP/SEDP dispose message in the RtpsRelay may be processed
          first
          by the application participant.  This may cause an update to the
          forwarding tables that prevents the same message from being
          forwarded
          to the relay clients.

          Solution
          --------

          Send SPDP/SEDP messages to the application participant after they
          have
          been sent to other relays and clients.

Tue Nov 03 17:01:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 68f73ccb60cc748f77e193ee8254eb7c0efa7121

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          From review

Tue Nov 03 16:56:33 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 19f259262db6f3d79140a6248f9ee8c425dedc69

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          ACE_thread_t initialization safety conformance change.

Tue Nov 03 16:43:04 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 568208022c4af5d2303b19c04deba09c3fa4c29f

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          From review

Tue Nov 03 16:27:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 1aa2b561c4a26ec8c469354a2874d96d2989b11f

        * tools/rtpsrelay/RelayHandler.cpp:

          RtpsRelay does not handle bundled messages correctly

          Problem
          -------

          The RtpsRelay does not check that every submessage has
          non-unknown
          INFO_DST preceding it when determining if it is directed or not.

          Solution
          --------

          Add logic to check that valid INFO_DST submessages are seen when
          determining if the message is directed or not.

Tue Nov 03 13:03:53 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 451214f0253a57664aecc132b70f8c45bd4ef9d0

        * azure-pipelines.yml:

          Added ' --std=c++11' to CLANG 6 and 10 build configurations

Tue Nov 03 12:34:09 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit e5884fe4d38415a945eb5455af5abfe315b53dbf

          Merge remote-tracking branch 'upstream/master'

Tue Nov 03 05:56:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 502661a08a31138afd90dc21bca0954e26b4477b

          Merge pull request #1993 from jrw972/first-try-durable-data

          RTPS Transport does send durable data for first ACKNACK

Tue Nov 03 01:19:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 783f2e12d99d7ac473a294a3a9316d98ef9bb473

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS reliable writes are not scalable

          Problem
          -------

          For each message, a (reliable) RtpsWriter loops through all
          readers to
          check that none are expecting durable data for the purpose of
          inserting a gap if a sequence number is skipped.

          Solution
          --------

          Gaps should only be sent when the maximum sequence number
          increases.
          When this happens, all readers can receive a gap.

Mon Nov 02 20:33:23 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 1168cb727bb661932a9c39b1b309205aa3a4ac53

          Merge remote-tracking branch 'upstream/master' into
          first-try-durable-data

Mon Nov 02 19:43:17 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit ce8519c18aabf3f237d3460113d23c78e93a42de

          Merge remote-tracking branch 'upstream/master'

Mon Nov 02 19:36:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e4cc9e2caa16eb7afbb2f5c29e95b54d149833c9

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          SPDP lease processing is not scalable

          Problem
          -------

          Every time the SPDP transport sends a local announcement, it
          loops
          over all discovered participants to check if they have expired.
          This
          is not scalable. Furthermore, participants with long resend
          periods
          may accumulate a number of long expired participants.

          Solution
          --------

          Use a TimeQueue and sporadic task to process the lease
          expirations as needed.

Mon Nov 02 19:29:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 21de1a054902665efd04e2a001e91ff55e6cb484

          Merge pull request #1997 from jonesc-oci/conformance_test_changes

          Safety profile conformance test changes

Mon Nov 02 19:29:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 751a3a7c644def48bf466ee68e45e212fcbc8f0f

          Merge pull request #1981 from pollocktoci/master

          Added RapidJsonWrapper

Mon Nov 02 19:28:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 08264917e95b7e9cc0329f021f93e9a01ca05bbe

          Merge pull request #1958 from jrw972/volatile-heartbeats

          Volatile heartbeats

Mon Nov 02 16:32:52 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 1163e858e057551935cb8599d68962824d4eca9e

          Merge remote-tracking branch 'upstream/master'

Mon Nov 02 14:54:49 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b1c97431e0981f08fe5d76608d242a56cd730802

          Merge remote-tracking branch 'upstream/master' into
          volatile-heartbeats

Sat Oct 31 14:40:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e2f7159c923082c644075bd80eaccf399abd5872

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Safety profile conformance test changes.

Sat Oct 31 13:34:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b0318d4d1d341d7ffbc96886ae0b5198cc3fc6ca

          Merge pull request #1996 from jrw972/monitoring-timeout

          Infinite loop in DdsUpcalls::svc

Fri Oct 30 21:59:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d40fdf7341b35a90393658dd7a00ce695341b7ad

        * dds/DCPS/DiscoveryBase.h:

          Infinite loop in DdsUpcalls::svc

          Problem
          -------

          With no timeout, the thread monitoring loop in DdsUpcalls::svc
          turn
          into an infinite loop.

          Solution
          --------

          Handle the case of no timeout for monitoring.

Fri Oct 30 20:15:40 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d75d9d8f972df85de28f10a15bed844c1fabb92d

        * dds/DCPS/ReactorTask.cpp:

          From review

Fri Oct 30 19:00:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c8a16eeb4522ad191e03d45af6e08620a73861cb

          Merge pull request #1994 from jrw972/missing-lock

          Add missing reverse lock

Fri Oct 30 17:53:54 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 9736f1c2a8388d84964c06ab7b1031b74618aae8

          Merge remote-tracking branch 'upstream/master'

Fri Oct 30 17:21:29 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2e3deaca1fb40f27e11ecffe59442086e6a76da0

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          From review

Fri Oct 30 14:18:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 38d4d86f05974b54b6ed19817cb049b19e41bcfa

          Merge branch 'master' of github.com:objectcomputing/OpenDDS into
          volatile-heartbeats

Fri Oct 30 14:05:33 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9a218abdbda0de0d57ca90c1bd42e44100e4e181

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          From review

Fri Oct 30 13:59:47 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 1c552d1eeab880cbcfda5f585c63d8e6071045f2

        * dds/DCPS/RTPS/Sedp.cpp:

          Add missing reverse lock

Fri Oct 30 13:47:28 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 87c3897fc31c8b6159ec10586652763830bcec6d

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RTPS Transport does send durable data for first ACKNACK

          Problem
          -------

          The "association complete" callback for a reliable RTPS writer is
          called when the writer receives the first acknack for a reader.
          If
          the writer is durable, it causes the writer to send the durable
          data
          for the new reader. This is currently done and the end of the
          ACKNACK
          processing.  Durable data is sent in response to an ACKNACK.
          Consequently, a reader must send one ACKNACK to enqueue the
          durable
          data and another to retrieve it.

          Solution
          --------

          Invoke the callback earlier so the durable data will be available
          for
          sending in response to the first ACKNACK.

Fri Oct 30 13:17:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1af30923a5669447f1904092e83b1bad8471311d

          Merge pull request #1992 from mitza-oci/networkconfigmodifier

          NetworkConfigModifier: made add/remove methods public

Fri Oct 30 13:16:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7a9c7f86580b12ff68d24f33ff1d674eb16143cf

          Merge pull request #1990 from jrw972/sedp-queueing

          Sedp needlessly defers work

Fri Oct 30 11:43:02 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 8bddb31e235be2aaea1cd4bc943f74a7433dcda1

        * tests/DCPS/Observer/Domain.h:

          Fix warnings in Domain.h

          This change is to fix the "conversion from 'size_t' to
          'CORBA::ULong'" warnings, making this code the same as that found
          in tests\DCPS\Observer\TestObserver.h.

Fri Oct 30 02:44:56 UTC 2020  Adam Mitz  <mitza@ociweb.com>
        commit ed68b7b34c2a7a889a68eec9190a5bdb43de5dce

        * dds/DCPS/NetworkConfigModifier.h:
        * tests/DCPS/UnitTests/.gitignore:
        * tests/DCPS/UnitTests/NetworkConfig.cpp:
        * tests/DCPS/UnitTests/UnitTests.mpc:

          NetworkConfigModifier: made add/remove methods public

Thu Oct 29 22:36:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit dc1d7219063aeebf01d0cd59295a5436f9b95391

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/transport/framework/TransportClient.h:

          Sedp needlessly defers work

          Problem
          -------

          Every input message received by SEDP is placed in a JobQueue.
          This
          queueing is unnecessary.  Association complete messages are also
          queued. This was to avoid a deadlock but deadlock can be avoided
          by
          checking if the writer/reader is reliable. Finally, removal of a
          subscription/publication queued a job to remove it from the BIT.
          This
          queueing is unnecessary.

          Solution
          --------

          Remove the queueing.

Thu Oct 29 18:46:17 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 8b416923e663c6c76343ba5de335ca00be9e42c2

        * dds/DCPS/RapidJsonWrapper.h:

          Renamed header guard to be similar to other header files.

Thu Oct 29 18:00:56 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d0b3b2f809ffad0efde46ae5ff3240d7d28240c8

        * docs/.gitignore:
        * docs/README.md:
        * docs/conf.py:

          Sphinx: Include Windows Instructions [skip ci]

          Also:
          - Add .venv to gitignore so builder doesn't have to leave
          directory.
          - Use venv instead of virutalenv.
          - Point to Sphinx page that documents PDF dependencies.
          - Specify Sphinx 2.4 in conf.py.

Thu Oct 29 17:39:17 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 9d60335362606584c015ef3b7e3f32b193cdc81b

        * dds/DCPS/RapidJsonWrapper.h:
        * dds/idl/rapidjson_generator.cpp:
        * performance-tests/bench_2/common/json_conversion.h:
        * tests/DCPS/Compiler/rapidjson_generator/RapidJsonTest.cpp:

          Review-related changes

Thu Oct 29 12:29:19 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit c383f74a6b070447e4db0f1954c7432f6c60c952

          Merge remote-tracking branch 'upstream/master'

Thu Oct 29 05:11:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 92858ed40dd9b6583382cdce62309725f60f6ea9

          Merge pull request #1986 from
          jrw972/rtps-relay-data-reader-lifecycle

          RtpsRelay: Increase data reader lifecycle timeout

Thu Oct 29 05:11:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 539d5f5ce5bc9b824fff65f6d9f37cfcf9b63df0

          Merge pull request #1985 from
          ClaytonCalabrese/linuxmonitor_open_fix

          LinuxMonitor failing to bind socket

Thu Oct 29 05:11:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7136d27be608bbe70cef90014b97a18cd97d71e5

          Merge pull request #1978 from jonesc-oci/conformance_test_changes

          Fix safety build conformance test issue.

Thu Oct 29 05:11:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 28b98210a933b31e399150849e2888c68248c0f8

          Merge pull request #1977 from
          jonesc-oci/thread_monitoring_changes

          Thread monitoring test changes for builds that do not support
          C++11

Thu Oct 29 05:10:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 635d1f697927e52aa02f29776fb05f6feeda7496

          Merge pull request #1973 from jrw972/directed-spdp

          Directed spdp

Thu Oct 29 00:43:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b7e5c2be6ef8c22aba6a822cb2c4f5984175d344

        * tools/rtpsrelay/RtpsRelay.cpp:

          Increase data reader lifecycle timeout

Thu Oct 29 00:08:34 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 7bb6e4e4094c326d7434481d10a9731780a3bb2b

        * docs/README.md:

          Tweak Sphinx Build Instructions

Wed Oct 28 22:36:39 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8a9ab39829a636a438f4c7c6c6143f3f542a623a

        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:

          Do not compile test for safety profile builds.

Wed Oct 28 22:00:11 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit c54302296ecca9fc719408ac3852183efb587c67

        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:

          the suggested fix for linux monitor giving an error on binding

Wed Oct 28 21:08:59 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 95d2b2639c8fabd7509e8b2092e48927b0e87736

        * docs/README.md:

          Add Sphinx Build Instructions

Wed Oct 28 21:06:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit fd335654decae8ceef8be64f71eaefd326a83034

        * docs/requirements.txt:

          Add Sphinx Requirements

Wed Oct 28 20:05:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d840a3164c0cbf820ca22d379e8c69938ffb5d58

        * docs/index.rst:
        * docs/internal/bench2.rst:
        * docs/internal/images/bench_architecture.png:

          Bench2 Documentation

Wed Oct 28 20:04:42 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d6b9f94be06e1e17e3852b22c2c2a84ca9ca8de1

        * docs/apiref/cpp_api.rst:
        * docs/conf.py:
        * docs/devguide/images/dcps.png:
        * docs/devguide/introduction.rst:
        * docs/devguide/preface.rst:
        * docs/index.rst:

          Prepare for merge with master

Wed Oct 28 18:10:43 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit df7fa067508d27bd3e814de443b0e427ca028e5e

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Use ordered list to prevent starvation and other pathological
          cases

Wed Oct 28 17:12:41 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4b8ba52e85e33d08d90c90ca6a78b87e7d0114f0

          Merge remote-tracking branch 'upstream/master' into igtd/docs

Wed Oct 28 16:45:10 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 2864c75b129e5b57031cf5d409ccfc4ed417df57

        * dds/DCPS/RapidJsonWrapper.h:

          Added missing newline at end of file.

Wed Oct 28 16:21:42 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit f824657917013eed4caa7f4d45299085f68630ac

        * dds/DCPS/RapidJsonWrapper.h:

          Fixed EOL issue.

Wed Oct 28 15:54:53 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit c6fa92d5afbda18adb29ff264f70580bd3519cf9

        * dds/DCPS/RapidJsonTypeConverter.h:
        * dds/DCPS/RapidJsonWrapper.h:
        * dds/idl/rapidjson_generator.cpp:
        * performance-tests/bench_2/common/json_conversion.h:
        * tests/DCPS/Compiler/rapidjson_generator/RapidJsonTest.cpp:

          Added RapidJsonWrapper

Wed Oct 28 13:57:32 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5e78cc3668a24795a91c75c7da6ed76d3c7ba31c

          Merge remote-tracking branch 'upstream/master' into directed-spdp

Wed Oct 28 13:40:18 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a9fd70efb72bca7e5f949daf81d288642c1340cf

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Fix OSX conformance test issue. Formatting changes.

Wed Oct 28 04:15:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0254313b88892062ec3611c1fd9599fd8b1394d2

          Merge pull request #1971 from pollocktoci/master

          Fix for some Visual C++ x64 compile warnings

Wed Oct 28 04:15:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3bd2125da3c7e06057989e89d4277b1066397cb6

          Merge pull request #1975 from jwillemsen/patch-7

          Update configure script DOCGroup/ACE_TAO version to ACE/TAO
          6.5.12

Wed Oct 28 04:15:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4ce37e1a3e4227d7741e7df785e8658f04ebe63d

          Merge pull request #1970 from jrw972/relay-improvements

          RtpsRelay Improvements

Wed Oct 28 04:15:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ec9aed1013f1b0e6cb3416295522e93c0fb62d40

          Merge pull request #1979 from jrw972/secure-dispose

          SEDP ignores dispose messages with security

Tue Oct 27 19:31:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f8bc9e33619391ad8a17152c358c19cfa0e87931

        * dds/DCPS/RTPS/Sedp.cpp:

          SEDP ignores dispose messages with security

          Problem
          -------

          The code path for unsecure discovered readers and writers in SEDP
          checks that the topic is indeed not secure using the topic name.
          However, the topic name is not populated for unregister/dispose.
          Consequently, unregister/dispose messages are dropped.

          Solution
          --------

          Check for sample data, i.e., the topic name should be populated,
          before the security check.

Tue Oct 27 18:41:21 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4c1371a153608e97b01e295372fff0c95ad648f0

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Fix safety build conformance test issue.

Tue Oct 27 17:56:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bc5ee0590abe57a50e4fd3f7096a19bd816a7c5a

        * tests/FACE/Conformance/filter.pl:

          Revert perl change from PR#1922

Tue Oct 27 13:37:58 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0ca68ccf230fd3d8948504f0b892e3777b9f3acc

        * tools/rtpsrelay/RtpsRelay.cpp:

          Use vars

Tue Oct 27 12:57:40 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 24f5834607ded4a3683c759d00047c7c9ba75274

        * configure:

          Update to ACE/TAO 6.5.12

Tue Oct 27 11:34:16 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit eb66d62f307eb0626cdac36d58527acaa8e35803

        * tests/DCPS/LargeSample/DataReaderListener.cpp:
        * tests/DCPS/Observer/Domain.h:

          Reverted domain.h change - cannot produce warning. Indent level
          change.

Mon Oct 26 22:29:03 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 1a59c64d2896177621d04c3f1baaf6a0856fb6df

          Merge remote-tracking branch 'upstream/master' into directed-spdp

Mon Oct 26 02:50:49 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a86a11149ef6d9419c6c1cf395893f17d198de95

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * tests/DCPS/RtpsRelay/Smoke/relay1.ini:
        * tests/DCPS/RtpsRelay/Smoke/relay2.ini:
        * tests/DCPS/RtpsRelay/Smoke/reporter.ini:
        * tools/rtpsrelay/RelayHandler.cpp:

          SPDP in RtpsRelay is not scalable

          Problem
          -------

          The periodic undirected SPDP announcement of the application
          participant in the RtpsRelay must be forwarded to all connected
          clients.  This has the potential to flood the send buffer.

          Solution
          --------

          * The RtpsRelay will not forward undirected SPDP messages from
          the
          application participant.
          * Provide support in SPDP for disabling undirected SPDP messages.
          * Add a sporadic task to the SpdpTransport that sends a directed
          SPDP
          message to all discovered participants once per resend period.

Mon Oct 26 20:12:59 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 6aafe1c23ad9b8896b8d82955e5778c33d2a6ecf

        * dds/DCPS/ReactorTask.cpp:

          Formatting change.

Mon Oct 26 20:12:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e5fd848ea88d7eefebcf37e6abf7fbc6eb9da088

        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:

          Remove cxx11 dependency

Mon Oct 26 19:58:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 626e816f3627a610823c84d60c51c6f7bac8c0f9

        * dds/DCPS/JsonValueWriter.h:
        * tools/rtpsrelay/DomainStatisticsReporter.h:
        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantStatisticsReporter.cpp:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:
        * tools/rtpsrelay/RelayStatisticsReporter.h:
        * tools/rtpsrelay/RtpsRelay.cpp:

          From review

Mon Oct 26 15:35:37 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 13f0fc7d6eca456d2cc8eaf07097e1d08fb258a9

        * tests/DCPS/LargeSample/DataReaderListener.cpp:

          Fixed unnecessary conditional to resolve compile warning

Mon Oct 26 14:39:50 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8cac3229585de147ed4040132bcab9786af6ae29

          Merge remote-tracking branch 'upstream/master' into
          volatile-heartbeats

Mon Oct 26 12:46:11 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit ace88eb5d8d0ec43386c20971d698c8f1d6932f1

        * dds/DCPS/RTPS/Spdp.cpp:
        * tests/DCPS/LargeSample/DataReaderListener.cpp:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/UnitTests/ut_BIT_DataReader.cpp:

          Fix for some Win10 x64 compile warnings

          Spdp.cpp - fix for "time_t to CORBA::Long" conversion warning
          DataReaderListener.cpp - fix for "size_t to const int" conversion
          warning.
          Domain.h - fix for "size_t to CORBA::ULong" conversion warning.
          ut_BIT_DataReader.cpp - fix for "long to CORBA::Octet" conversion
          warning.

Mon Oct 26 11:00:46 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 5c2a63f774b18716a0ef25d16e7430c464494b89

          Merge remote-tracking branch 'upstream/master'

Mon Oct 26 00:51:54 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0dbec033834cab8d8cec063174d84e858132ac3c

        * tools/rtpsrelay/DomainStatisticsReporter.h:
        * tools/rtpsrelay/Governor.h:
        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantListener.cpp:
        * tools/rtpsrelay/ParticipantStatisticsReporter.cpp:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:
        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RelayStatisticsReporter.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/WriterListener.cpp:
        * tools/rtpsrelay/lib/Relay.idl:
        * tools/rtpsrelay/utility.h:

          RtpsRelay Improvements

          * Remove governor
          * Remove output queuing
          * Add processing time statistic
          * Add dropped messages statistic
          * Add new address statistic
          * Add expired address statistic
          * Add claim count statistic
          * Add disclaim count statistic
          * Add Relay Statistics
          * Normalize and reformat log messages
          * Domain statistics printed on change

Sat Oct 24 19:37:20 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5ef2ccc2c9d5eb0e46931ce37f6c128f853214c7

          Merge pull request #1968 from
          simpsont-oci/minor_fixes_for_simplelatency_test

          Check sample validity in SimpleLatency performance test

Sat Oct 24 19:37:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c6bd45ad9338e1157f7d544768e60a913cbcf929

          Merge pull request #1967 from
          jrw972/sedp-association-complete-logging

          Add logging for Sedp::association_complete

Sat Oct 24 19:36:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6b7812e123fc8150c34e7fce07b048d0a93722d7

          Merge pull request #1957 from pollocktoci/master

          Minor changes to BaseMessageUtils to eliminate compile warnings.

Sat Oct 24 19:36:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5bb369cd3591f3617eca7b4bddb3c70a1e630c69

          Merge pull request #1906 from jonesc-oci/thread_monitoring

          Add built-in topic to report the status of internal threads

Sat Oct 24 18:49:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1ac49281aa173965013903a7c72a801d2b1a1964

        * dds/idl/be_produce.cpp:

          Update dds/idl/be_produce.cpp (whitespace)

Sat Oct 24 14:55:23 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 07043726370b0af6d8290c9054274433c60e1b36

        * bin/PerlDDS/Cross_Sync.pm:
        * bin/PerlDDS/Cross_Sync_Common.pm:
        * performance-tests/Bench/tests/latency/run_all_tests.sh:
        * performance-tests/Bench/tests/latency/test_list.txt:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

          formatting cleanup

Fri Oct 23 19:18:34 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 23758878f143702f4ad9c95a155e0260a4599032

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:

          check sample validity in SimpleLatency performance test, make
          script executable

Fri Oct 23 18:31:14 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b9b7e2fe41164dd7b6aad2541917173543a8505b

        * dds/DCPS/DiscoveryBase.h:

          Updates from PR review.

Fri Oct 23 14:45:28 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d30c0563e57acef69b4d6397e0786c73c39f3038

        * dds/DCPS/RTPS/Sedp.cpp:

          Add logging for Sedp::association_complete

Fri Oct 23 14:29:01 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 6c6f51d579aca2c4d5e7250084d4e85d1d6d5bf2

          Merge remote-tracking branch 'upstream/master'

Fri Oct 23 13:24:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 322d9affda628243f70fc29d18064aded9a8dbf1

          Merge pull request #1966 from
          simpsont-oci/reduce_compat_test_wasted_time

          Reduce Wasted Time in CompatibilityTest Script

Fri Oct 23 13:24:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5a6f730941456627c65318bd4c41d06d2a569b87

          Merge pull request #1965 from jrw972/fragile-connecivity-check

          Relay connectivity check is fragile

Fri Oct 23 13:24:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9f50bfef9df20d9f8b7d919b42ddf1da08813175

          Merge pull request #1964 from lij-oci/loopback

          loopback multicast join

Fri Oct 23 13:23:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a4cc77c847c488205cff0d4a7e91afc6758f6b42

          Merge pull request #1950 from ClaytonCalabrese/cpp11enumunion

          fix and test for enum union cpp11

Fri Oct 23 12:10:36 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 444aa48a00d45dd47aee4ca4a09425ca76e9123f

        * dds/idl/be_produce.cpp:

          Removed unused definition of 'max'.

Fri Oct 23 10:51:05 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 3f37460f84d4fdda47a42277627b1e76bff674ad

          Merge remote-tracking branch 'upstream/master'

Fri Oct 23 04:48:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit be538530ddcd1aad59b3917d51182343809d5266

        * tests/DCPS/CompatibilityTest/run_test.pl:

          Reduce wasted time in CompatibilityTest script

Fri Oct 23 00:40:41 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 09e2a2cea8ee8f66d1556c61efecc1986333556b

        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * tests/transport/rtps_reliability/rtps_reliability.cpp:

          Fix broken tests

Thu Oct 22 22:06:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 74078cb2b34af0ab8118951066353413f41aee3b

          Merge pull request #1962 from mitza-oci/master

          dds_fuzz.pl: updated to work with DOCGroup/ACE_TAO PR #1262

Thu Oct 22 22:06:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 54b4c579ccee29f4d000563ffe2c8f8f41bb4c92

          Merge pull request #1951 from jrw972/slow-secure-discovery

          Secure discovery is slow

Thu Oct 22 19:33:51 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c9a1f86193fb1987ec3a892aa0b20e8dd59f58d4

        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:

          Relay connectivity check is fragile

          Problem
          -------

          The connectivity check with the RtpsRelay fails if a single
          message is
          lost, either the binding request or its response.

          Solution
          --------

          Send the request multiple times before reporting a disconnect.
          Currently, this is hard-coded to 3 but could be made
          configurable.

Thu Oct 22 18:25:26 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit de12aeb9be467b3f308648a3ed487369ff298cb7

        * dds/idl/langmap_generator.cpp:

          pr change to check enum size

Thu Oct 22 17:14:02 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 13f471d1555edd756e407730efd78aa4ade5f5f2

        * dds/idl/be_produce.cpp:

          Fixed be_produce compile warning

          Replaced existing code to produce random characters with
          something more efficient.

Thu Oct 22 16:24:07 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit becbd75cd8c8fb8571af337e5032172655e78984

        * dds/DCPS/NetworkConfigModifier.cpp:

          loopback multicast join

Thu Oct 22 15:26:42 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b3fa62736edc184291ff40d5a4cdcd6fe672016b

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:

          From review

Thu Oct 22 14:16:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 40ecc97537c60c7856c9582c89462435cb6376a3

        * tools/scripts/dds_fuzz.pl:

          dds_fuzz.pl: updated to work with DOCGroup/ACE_TAO PR #1262

Thu Oct 22 02:21:18 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6e867d8170dfcaf220879bded846ca0e70992e30

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Fix build and warnings

Thu Oct 22 02:12:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 75e1cc8aaa7c66e252f7737f6a8c48967c98503f

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:

          Fix broken tests

Wed Oct 21 18:04:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 96a4fb6ac36e2cd06255c8a0c2cbc85d59611e02

        * dds/DCPS/RTPS/RtpsCore.idl:
        * dds/DCPS/RTPS/RtpsSecurity.idl:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * tests/security/attributes/subscriber.cpp:
        * tests/transport/spdp/spdp_transport.cpp:

          Fix broken tests

Wed Oct 21 15:50:28 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 2e0ada21865c04dbb9d725986adca81f3381dcbe

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:

          Changes to bitmapNonEmpty to get rid of compiler warnings.

Wed Oct 21 15:29:18 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit ca4eac74ba1a0f0b0a3d841513ac33c5c01b632c

        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:

          idl changes needed for test to pass

Wed Oct 21 14:58:52 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 4e90c4ace6c80595536c50adbd2060473a0d40ed

          Merge remote-tracking branch 'upstream/master'

Wed Oct 21 13:17:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dff7dd993f318178d7f33614fe9326a425de2b2d

          Merge pull request #1960 from
          jrw972/transport-send-buffer-memory-leak

          TransportSendBuffer leaks memory

Wed Oct 21 13:17:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 75ef540cd0a52236a66e795f37e2efb64465dc34

          Merge pull request #1956 from
          simpsont-oci/ncm_mutex_and_multicast_interface_changes

          Add Mutex Protection To NetworkInterface And Fix Interaction With
          MulticastInterface Addresses

Wed Oct 21 13:17:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 15be39d09ea31b242d5786b61343ece09ad3c645

          Merge pull request #1954 from mitza-oci/master

          Updated Android build steps

Tue Oct 20 16:02:09 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 061a9d1ab05cd94299706b665ba835a396c1659a

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          RTPS heartbeats are not scalable

          Problem
          -------

          The current algorithm for sending heartbeats makes a copy of the
          writers data structure and then has a double for-loop iterating
          over
          all of the writers and their readers. If the writers data
          structure
          is large, then copying and brute-force iteration is prohibitively
          slow. Furthermore, the participant volatile secure (PVS) writer
          for
          security compounds the problem since each new participant
          advances the
          sequence number but all existing participants do not care.

          Solution
          --------

          For PVS, maintain a per-reader sequence number that is the
          expected
          cumulative ack - 1 for that reader.

          Maintain a set of readers for each writer that requires a
          heartbeat.

Wed Oct 21 00:33:53 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 76496d32c35742e730340ab7b3c925e849d868cc

        * dds/DCPS/NetworkConfigModifier.cpp:
        * dds/DCPS/NetworkConfigModifier.h:
        * dds/DCPS/NetworkConfigMonitor.cpp:
        * dds/DCPS/NetworkConfigMonitor.h:

          Fix NetworkConfigModifier for mutex protection changes, pull
          name-based lookups up into NetworkConfigMonitor proper to avoid
          double lookups

Tue Oct 20 21:17:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8e544dcdaa5ba285416254729df7ad03f2e683de

        * dds/DCPS/transport/framework/TransportSendBuffer.cpp:

          TransportSendBuffer leaks memory

          Problem
          -------

          Entries are inserred into the `destinations_` map but never
          removed.

          Solution
          --------

          Remove entries from `destinations_` when the corresponding entry
          is
          removed from `buffers_`.

Tue Oct 20 20:41:08 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 1183a6a421f4fe57b79039405f6101957b39cc4a

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:

          Update BaseMessageUtils.cpp

Tue Oct 20 18:21:13 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 95a4e445640e2d48ba0ac8cbd22c113850ff8b73

        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/SecurityHelpers.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:

          From review

Tue Oct 20 16:59:07 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 1656b5969508783c0e88213dd4c5561199f15425

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:

          Modified BaseMessageUtils::bitmapNonEmpty to eliminate conversion
          warning.

Tue Oct 20 16:53:54 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit e8228baf7431146be50fc2adaf3ceecaad23ca61

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:

          Modified BaseMessageUtils::bitmapNonEmpty to eliminate warning.

Tue Oct 20 15:40:44 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 90ad9165a4af2bcee0a3201bc0372314047ac32b

          merge from master

Tue Oct 20 05:58:49 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit da57b7e1cc1a2f8d23ba26cb56d25ce23d1a3513

        * dds/DCPS/NetworkConfigMonitor.cpp:
        * dds/DCPS/NetworkConfigMonitor.h:

          Add Mutex Protection To NetworkInterface And Fix Interaction With
          MulticastInterface Addresses

Tue Oct 20 04:13:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 781b0ecd8249b568c2c4018ceca3a80612a30a95

        * dds/DCPS/RTPS/Sedp.cpp:

          Fix bit flipping

Tue Oct 20 01:14:29 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4114b4a7955f01621437cb589f5ccbf87862bc66

        * tests/DCPS/InternalThreadStatus/run_test.pl:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          Test changes.

Mon Oct 19 22:32:28 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 25ac7a1b66f9ee3f108b523af6ee80f15d104453

        * dds/idl/langmap_generator.cpp:
        * tests/DCPS/Compiler/C++11/idl_test1_main/main.cpp:

          fix for FACE as well as to match spec

Mon Oct 19 19:01:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 50f809769ede3920b4e1ab96e5d13d40c036c771

        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/publisher.cpp:
        * tests/DCPS/InternalThreadStatus/rtps.ini:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          Simplify test. Remove listener and second condition var.

Mon Oct 19 17:33:28 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit 1f84d8571e664457df4407ac3c8b530a5fae2eed

        * dds/idl/langmap_generator.cpp:

          pr fix

Mon Oct 19 16:02:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c4bc0fec893f5850174948408f0aa38b6a7bef08

        * docs/android.md:

          Update docs/android.md

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Mon Oct 19 14:12:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e1426675497a5416f2441470d566ccf50faa42ba

        * docs/android.md:

          Updated Android build steps

Sat Oct 17 22:53:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5227b9698b8ccc6f84a1ce59da7c151d2bc9979e

          Merge pull request #1953 from
          simpsont-oci/fix_loopback_multicast_join

          Perform Multicast Join on Loopback Interface

Sat Oct 17 22:53:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0ea5bad60c3e08d78bb1d2dfd3916456ab1c6800

          Merge pull request #1949 from
          simpsont-oci/apply_default_addr_to_rtps_discovery_mc_interface

          Allow DCPSDefaultAddress to Initialize RtpsDiscovery's
          MulticastInterface

Sat Oct 17 13:58:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 42b19d27ebee5ea4ca560841c096c38dc7332711

        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:

          Perform Multicast Join on Loopback Interface

Sat Oct 17 01:44:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 70569fceaa5d8ab5b6855269a9517ffb326be3c4

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/RtpsCore.idl:
        * dds/DCPS/RTPS/SecurityHelpers.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/StaticDiscovery.cpp:
        * dds/DCPS/StaticDiscovery.h:

          Secure discovery is slow

          Problem 1
          ---------

          The default configuration delays an SPDP resend for 3 seconds.
          However, a participant A receiving an initial SPDP announcement
          from B
          will attempt authentication with B.  However, B will ignore the
          authentication messages because it has not discovered A.

          Solution 1
          ----------

          Send an SPDP announcement when attempting authentication with a
          newly
          discovered participant.

          Problem 2
          ---------

          `match_authenticated` is called before the FINAL in the auth
          handshake
          is sent. This is problematic because `match_authenticated` is
          slow,
          e.g., takes 1 second to complete. The other participant is idle
          while
          waiting for the FINAL and will call `match_authenticated` when it
          gets
          the FINAL.

          Solution 2
          ----------

          Send the FINAL before calling `match_authenticated`. While it
          doesn't
          address the reason that `match_authenticated` is so slow, it
          helps
          because both participants can be in `match_authenticated` at the
          same
          time.

          Problem 3
          ---------

          `match_authenticated` associates all of the builtin readers and
          writers. At more-or-less the same time, it is sending crypto
          tokens
          for the builtin endpoints. This creates a race where the
          heartbeats
          and acknacks for reliability can get dropped because the crypto
          tokens
          are not in place to decrypt them. This means discovery has to
          wait
          one or two rounds of reliability which is 1 or 2 seconds by
          default.

          Solution 3
          ----------

          Defer associating the builtin endpoints until the crypto tokens
          have
          been received for the remote.  This suggests that a similar race
          condition may exist for user endpoints.

Fri Oct 16 19:53:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4d1825c36745b87453ed5f0b9f95869142efe203

        * tests/DCPS/InternalThreadStatus/run_test.pl:

          Change logging level for test.

Fri Oct 16 16:18:45 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit d024c9d5daf82b78b1773c9f03df29e1ed1e932a

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          fixing wchar, once more, with feeling

Fri Oct 16 15:53:48 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit ef42930150cd4166db2abef730075933b55cdfe0

        * dds/idl/langmap_generator.cpp:
        * tests/DCPS/Compiler/C++11/idl_test1_main/main.cpp:
        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:

          fix and test for enum union cpp11

Fri Oct 16 14:15:44 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 30321d5e76ab0b482ed82d81e670c43d08bf8298

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          resolving review comments

Fri Oct 16 11:56:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 1e804caf2177159f1fe9ca46b80cc9f7dca3d1e4

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          fix wchar build

Fri Oct 16 01:35:01 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 27647794e6eced6d766164634c45c652436d4053

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          Allow DCPSDefaultAddress to Initialize RtpsDiscovery's
          MulticastInterface

Fri Oct 16 01:11:03 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 07cb8da24bb8da9d49bd3a586020899daaaa3922

          Merge pull request #1948 from jrw972/bundling-placeholder

          BUNDLING_PLACEHOLDER not removed in bundles

Thu Oct 15 21:36:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c763547f87994ec7804a6669977da0630fe1d3b2

        * java/dds/.gitignore:

          Update .gitignore

Thu Oct 15 19:09:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ee6afc149d0d59f77d5a125703f0d49678ae7eae

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          BUNDLING_PLACEHOLDER not removed in bundles

          Problem
          -------

          The BUNDLING_PLACEHOLDER was only removed for the first bundle in
          a
          group.

          Solution
          --------

          Save addresses for bundle to temporary set, erase
          BUNDLING_PLACEHOLDER, and use temporary.

Wed Oct 14 19:12:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3e364c38e9a295f0684cc0c7c00c377a463813fc

        * dds/DdsDcpsCore.idl:

          Remove duplicate typedef.

Wed Oct 14 18:56:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d541ef5f192e327ea21f963260c53ef217cfe75b

          Merge pull request #1927 from
          simpsont-oci/send_tokens_at_volatile_association

          Send Builtin Crypto Tokens Once Remote Volatile Reader Is
          Associated

Wed Oct 14 18:56:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bd4939a7a16fe056816e2e0d11686ae0083a1b38

          Merge pull request #1945 from jwillemsen/jwi-fuzz

          Use checkout action to checkout ACE/TAO

Tue Oct 13 16:43:28 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e762258817c3408e8e297a4134adaaa3bc4a2f14

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Code review changes.

Wed Oct 07 22:04:17 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3eb7011f7a89100066c161377e6bcbaa5770c53f

        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/shmem/ShmemTransport.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:
        * dds/DCPS/transport/udp/UdpTransport.cpp:

          Transport threads should report a unique name.

          Transport threads should report a unique name in the internal
          thread status built-in topic.

Wed Oct 07 20:42:41 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit aae862a6a7f1ffe2918e58d7e17d72205e0619e7

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Add method to set the thread_status interval.

Wed Oct 07 17:10:37 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 40a2628a66edb273c814b48e5572b23e119c57f5

        * bin/dcps_tests.lst:
        * dds/DCPS/RTPS/Spdp.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:

          Safety build fixes.

Mon Oct 05 20:04:11 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8d8b27a901e13ad9af2e16d91ad316f0a4c7bc48

        * java/tests/internal_thread_status/InternalThreadStatusPublisher.java:
        * java/tests/internal_thread_status/InternalThreadStatusSubscriber.java:

          Remove unused ICE flag.

Mon Oct 05 16:43:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f5b4134a5f20f05b032092b7a959a252751e4755

        * java/tests/internal_thread_status/.gitignore:
        * java/tests/internal_thread_status/InternalThreadListener.java:
        * java/tests/internal_thread_status/InternalThreadStatusPublisher.java:
        * java/tests/internal_thread_status/InternalThreadStatusSubscriber.java:
        * java/tests/internal_thread_status/internal_thread_status_test.mpc:
        * java/tests/internal_thread_status/rtps.ini:
        * java/tests/internal_thread_status/run_test.pl:

          Add Java test for internal thread status BIT.

Mon Oct 05 16:41:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 77fb6489f001caf6933c45d28b61c2ec2ecc9fcc

        * java/dds/OpenDDS/DCPS/BuiltinTopicUtils.java:

          Add ConnectionRecord and InternalThread BIT info for Java.

Thu Oct 01 22:06:57 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit cca229608bd35ea6fab4d9794573d9fa3e88e9e5

        * tests/DCPS/InternalThreadStatus/DataReaderListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/DataReaderListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/publisher.cpp:
        * tests/DCPS/InternalThreadStatus/run_test.pl:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          InternalThreadStatus test changes.

          Add Subscriber data reader. Add callback to confirm
          thread status BIT data is received.

Thu Oct 01 22:05:10 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 52d802c9db40c15aaba6bdcb2b89fdb2b327c783

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/shmem/ShmemTransport.cpp:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:
        * dds/DCPS/transport/udp/UdpTransport.cpp:

          Let thread status BIT report the transport name.

Thu Oct 01 22:03:36 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4202d8948e63294fff6091b6a074e0ef68d14858

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/ReactorTask.h:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          Use OpenDDS string conversion routines

Thu Oct 01 00:25:40 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 147fbab108209422c5da11895288a63204a1b71c

        * bin/dcps_tests.lst:

          Add InternalThreadStatus test to dcps_tests.

Thu Oct 01 00:25:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 015b77da37282f726a86bb8f4ef1cf149c25102f

        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Discovery.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/ReactorTask.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DdsDcpsCore.idl:

          Updates from PR review. Add thread name to thread ID.

Tue Sep 29 19:45:39 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8de73532fc0e997fe6cfab29c47446b3bb5c8797

        * tests/DCPS/InternalThreadStatus/rtps.ini:

          Turn off Ice in test config.

Tue Sep 29 19:45:08 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 912f2634c740ed43ff63416c7c352af640968e91

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:

          OSX pthread_t thread Id support.

Tue Sep 29 13:00:01 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c59d634b0daca04997d9794c846b531bb35b5820

        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/publisher.cpp:
        * tests/DCPS/InternalThreadStatus/run_test.pl:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          Add subscriber to test.

Tue Sep 29 12:59:25 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5be24190cf1bd39421f9adaae131d1771e66d120

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/ReactorTask.h:

          Safety builds changes. Fix warnings.

Mon Sep 28 21:44:09 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 1eeb4cfefc371b2f4684bfd1387212d57044f62d

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Use SpdpPeriodic to report thread status.

Mon Sep 28 14:35:28 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5fd0168a53ec9fcf01f2e8b8282ed4af40b2d82d

        * dds/DCPS/RTPS/Spdp.cpp:

          Fix rebase issue.

Sun Sep 27 22:02:37 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 00205e274e815d55e49966eedcda664ab99b2ff8

        * dds/DCPS/BuiltInTopicUtils.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:

          Fix rebase issues.

Fri Sep 25 17:37:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b845eac03e18bfe5058c2f495303c5ae8631e2aa

        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/publisher.cpp:
        * tests/DCPS/InternalThreadStatus/run_test.pl:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          Internal Thread Status test.

Fri Sep 25 17:37:23 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 13189f53ce0ce05c394d6cb898b8d631e4d9bd6b

        * dds/DCPS/Discovery.cpp:
        * dds/DCPS/DiscoveryBase.h:

          Internal Thread BIT implementation

Wed Sep 16 21:41:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 3dac8a6077548b27abed932be196432a53f3c8d1

        * dds/DCPS/BuiltInTopicUtils.cpp:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Discovery.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/ReactorTask.cpp:
        * dds/DCPS/ReactorTask.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DdsDcpsCore.idl:
        * java/dds/OpenDDS/DCPS/.gitignore:
        * tests/DCPS/InternalThreadStatus/.gitignore:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatus.mpc:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.cpp:
        * tests/DCPS/InternalThreadStatus/InternalThreadStatusListenerImpl.h:
        * tests/DCPS/InternalThreadStatus/publisher.cpp:
        * tests/DCPS/InternalThreadStatus/rtps.ini:
        * tests/DCPS/InternalThreadStatus/run_test.pl:
        * tests/DCPS/InternalThreadStatus/subscriber.cpp:

          Internal thread BIT implementation

Tue Sep 01 20:29:38 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b9d17111ebbe38ffe47b1afe6b6dcb7688da0f90

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Thread monitor command line argument.

Tue Sep 01 20:29:01 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 299e8e50d296518970ca682e5c64bcfbd6954438

        * dds/DdsDcpsCore.idl:

          Thread monitor IDL additions

Wed Oct 14 13:56:11 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c084d12f4d92843a1f6bf298a978783ba7cd3128

        * tools/rtpsrelay/RelayHandler.cpp:

          degrade another error message to warning

Wed Oct 14 12:55:59 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 656ae60212e73eb07bd4ce1aadbcb8b50a5f9802

          Merge pull request #1940 from jrw972/leaky-bits

          BIT readers have spec-defined memory leak

Wed Oct 14 12:20:31 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 175792c6cd03bc8442e5e7209570eddd90d54b9b

        * .github/workflows/fuzz.yml:

          Use checkout action to checkout ACE/TAO

          * .github/workflows/fuzz.yml:

Wed Oct 14 01:23:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit bdbde6d41814f9a8122fa1322454fad998b6a32a

        * tools/rtpsrelay/RelayHandler.cpp:

          fix downgraded message to also not say ERROR

Tue Oct 13 21:55:57 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 0910ad8bee8ef3b61a453fbf12175ff8ac9f54a0

        * tools/rtpsrelay/RelayHandler.cpp:

          fixing which message gets downgraded

Tue Oct 13 20:02:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6c7fce0669f77a792b04bf3f3eb388f5420b02ad

          Merge pull request #1943 from mitza-oci/master

          Value Writer cleanup

Tue Oct 13 20:02:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8df98d81bab0caa1bc034fe0534ea41b114c7ad6

          Merge pull request #1942 from jwillemsen/jwi-devguide

          The TAO DevGuide can be requested for free

Tue Oct 13 15:30:01 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 48a4eb52817d2f516325314b9925d9da922292b3

        * tools/rtpsrelay/RelayHandler.cpp:

          Reduce failed vertical handler parsed messages from errors to
          warnings

Tue Oct 13 15:28:08 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 34ca7e3041b0708dbf0993890a939f30fe5d2f60

          Merge branch 'master' into send_tokens_at_volatile_association

Tue Oct 13 14:35:04 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d88ea465fd1e8f40229a39d587b613a4c1e9317f

        * dds/DCPS/Service_Participant.cpp:
        * tools/rtpsrelay/RtpsRelay.cpp:

          From review

Tue Oct 13 14:23:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2550e2654208f1ce382b71ad8a0075b7f2152a8f

        * tests/DCPS/Observer/TestObserver.cpp:

          Observer test: more safety profile

Tue Oct 13 07:19:20 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1381efe5eea938ec8c04b81e6fd05d97ad30b49d

        * README.md:

          Moved TAO DevGuide to the TAO section

          * README.md:

Tue Oct 13 05:01:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 69f54c8f9799fdc572a907dd46835e9507177a45

          Merge remote-tracking branch 'upstream/master' into master

          # Conflicts:
          #       dds/idl/value_writer_generator.cpp

Tue Oct 13 04:55:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit efc389a71f090d3657c8fd5721ba818ebbeebc4e

          Merge pull request #1938 from pollocktoci/master

          Fixed more compiler warnings.

Tue Oct 13 04:53:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0be9d90281254b4e0c7ef85ba796b960115bafe7

        * tests/DCPS/common/ConnectionRecordLogger.cpp:

          Additional safety profile exclusion

Mon Oct 12 19:59:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit aef4bd02933281ca9073bfbfd2b52a1c2503f8eb

        * dds/idl/value_writer_generator.cpp:

          value writer: more cleanup

Mon Oct 12 18:50:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5e7f5249f1345cf8ccd80c323f738128fc4b690a

        * FACE/StringManager.h:

          FACE StringManager: workaround for older MSVC

Mon Oct 12 18:50:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 52e8f2ca505963979d224e40d6e36ada786f6448

        * dds/DCPS/JsonValueWriter.h:

          JsonValueWriter: cleanup

Mon Oct 12 18:46:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a1096aa2a5fa62e0c26f66c3680364f46a9e5bd3

        * dds/idl/value_writer_generator.cpp:

          Revert the opendds_idl part of PR #1933

Mon Oct 12 18:45:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b1fa41ff944e5514ebceac8accfd9364ffe73bcf

        * dds/DCPS/JsonValueWriter.cpp:
        * dds/DCPS/JsonValueWriter.h:

          JsonValueWriter: cleanup and exclude from Safety Profile

Mon Oct 12 18:21:45 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit c6f55b1d9ec777917419db5ba6875cd9d4f5d026

        * tests/DCPS/LargeSample/common.cpp:
        * tests/DCPS/LargeSample/common.h:
        * tests/DCPS/LargeSample/publisher.cpp:
        * tests/DCPS/LargeSample/subscriber.cpp:

          Fixed unused parameter warnings in LargeSample test.

Mon Oct 12 18:05:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cccacab3009db35c53fc2da521b6ebddb16fcaae

        * tests/DCPS/RtpsRelay/Smoke/Args.h:
        * tests/DCPS/RtpsRelay/Smoke/DataReaderListener.cpp:
        * tests/DCPS/RtpsRelay/Smoke/DataReaderListener.h:
        * tests/DCPS/RtpsRelay/Smoke/publisher.cpp:
        * tests/DCPS/RtpsRelay/Smoke/run_lease_duration_test.pl:
        * tests/DCPS/RtpsRelay/Smoke/subscriber.cpp:

          resolve review comments, update test to avoid magic count / track
          rediscovery where possible

Mon Oct 12 17:09:46 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 38f1db518560c3be840379218fafe816b93172a1

        * README.md:

          The TAO DevGuide can be requested for free

          * README.md:

Mon Oct 12 15:30:43 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit c5fc7a03c74d2e7bed8f36454f7e39db5eb28df7

        * dds/idl/value_writer_generator.cpp:

          Review related changes to code.

Mon Oct 12 13:46:26 UTC 2020  pollocktoci  <70289169+pollocktoci@users.noreply.github.com>
        commit d5cd4dfc5d2f9b9b8c984bf6e50d016339ccc2d9

        * dds/idl/value_writer_generator.cpp:

          Update dds/idl/value_writer_generator.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Mon Oct 12 13:42:42 UTC 2020  pollocktoci  <70289169+pollocktoci@users.noreply.github.com>
        commit 4c0f9b932d49299c3f7d1caadb29bf0111c7b2b5

        * dds/idl/value_writer_generator.cpp:

          Update dds/idl/value_writer_generator.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Sat Oct 10 14:48:45 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 284841d8bfb5e865dbee44dcd7d168d83799f024

        * tools/rtpsrelay/RtpsRelay.cpp:

          Do not retain disposed data in RtpsRelay

Sat Oct 10 14:13:42 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit fd71d0e1dcf545f862dd361e230a58f6024f4c97

          Merge remote-tracking branch 'upstream/master'

Sat Oct 10 13:22:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1a94e070dea037d8e6cad635a3e709b5059c9328

          Merge pull request #1937 from
          simpsont-oci/fix_rtpssequencenumberset_unittest_coverity_warnings

          Fix RtpsSequenceNumberSet Unit Test Coverity Warnings

Sat Oct 10 13:21:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e9ed60820772f734309bd7c8ffba861e33326293

          Merge pull request #1941 from jrw972/deque-to-vector

          Deque is memory inefficient

Sat Oct 10 13:21:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d1077b6656e73f512b4641f5bb11e0e2ca1021d3

          Merge pull request #1939 from jrw972/safety-profile-header

          Add include for safety profile

Sat Oct 10 03:01:49 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 45ed98d861f131da85478df2927039c2be74eb09

        * dds/DCPS/JobQueue.h:
        * dds/DCPS/ReactorInterceptor.cpp:
        * dds/DCPS/ReactorInterceptor.h:

          Deque is memory inefficient

          Problem
          -------

          Currently, a typical DDS application might involve 50+
          ReactorInterceptors. Each ReactorInterceptor includes a deque. A
          deque is built from internal nodes. The internal nodes typically
          have
          a minimum size which is the lesser of the size of the value type
          and
          some constant. This constant can be much bigger than the size of
          the
          value type. Consequently, a deque that contains a only a few
          entries,
          such as one for a ReactorInterceptor, is highly memory
          inefficient.
          If an empty deque is 1K, then a typical DDS application will have
          50K+
          of memory that is not actually being used.

          Solution
          --------

          Change ReactorInterceptor and Job queue to use vectors that are
          swapped with empty vectors as they are being processed.

Sat Oct 10 02:30:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 396685a4579a957f7901cfbad3b208ff57cc1d0a

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          BIT topics are spec-defined memory leak

          Problem
          -------

          The DDS Specification says that the members of the
          ReaderDataLifecycleQosPolicy are set to infinite which means a
          participant will never purge the data stored in the builtin
          topics. A
          long-running participant will eventually run out of memory.

          It is possible to manually change the qos for all of the builtin
          participant data readers. However, the addition of a new builtin
          topic would render such code useless and the new builtin topic
          would
          create another memory leak.

          Solution
          --------

          Provide a mechanism to configure the ReaderDataLifecycleQosPolicy
          for
          the builtin topic data readers.

Fri Oct 09 22:28:06 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit a24a9709d5121d944658760247cbee26360c9175

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:
        * dds/idl/value_writer_generator.cpp:

          Combined common code.

Fri Oct 09 21:00:07 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5f7dd0e49751de06bb1a790fda1729f41addf33c

        * dds/DCPS/JsonValueWriter.h:

          Add include for safety profile

Fri Oct 09 18:40:46 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit f8f87458da6450d273d335cb7c2d8ea43eb09e35

        * dds/idl/value_writer_generator.cpp:

          Fixed compiler warnings with conditional cxx11 code.

Fri Oct 09 17:31:00 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 37218f56692698797a9ef73d0c6241a94aaebf01

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:
        * dds/idl/value_writer_generator.cpp:
        * tests/DCPS/LargeSample/publisher.cpp:
        * tests/DCPS/LargeSample/subscriber.cpp:
        * tools/rtpsrelay/DomainStatisticsReporter.h:

          Fixed more compiler warnings.

Fri Oct 09 16:21:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ad91a777e5e71b71a48e6f8b296d5551b2b03668

        * tests/DCPS/RtpsRelay/Smoke/publisher.cpp:
        * tests/DCPS/RtpsRelay/Smoke/subscriber.cpp:

          fixing test build errors for non-security builds

Fri Oct 09 16:06:14 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 3054e5ec559a4809fa29764c825fb9625f134748

        * tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp:

          Fix trailing whitespace

Fri Oct 09 15:35:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit bb5aadb1503d450f40218f6ce6defd1279f146bb

        * tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp:

          Update tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Fri Oct 09 15:16:35 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 861d3a865de6cc1bdd6234139c6b78251fbca479

        * tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp:

          Fix RtpsSequenceNumberSet Unit Test Coverity Warnings

Fri Oct 09 11:18:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 343eee8411502318a3340d959dbdbacb33494a10

          Merge pull request #1935 from jrw972/observer-sample-json

          Support serialization of Observer::Sample to JSON

Fri Oct 09 11:18:14 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 47e3594b9b5da238020fc5d2a80f032c64a2312c

          Merge pull request #1934 from pollocktoci/master

          Fixed compiler warnings

Thu Oct 08 21:48:16 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f7e10cc46a826e269fd4abe26bda4a59538ed858

        * dds/DCPS/Observer.h:

          Add missing export

Thu Oct 08 21:40:54 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 996c4c10397a5eebda517d2063afeb3317d7fa47

        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:

          From review

Thu Oct 08 20:48:59 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 11d49f2fe91dbc1f1db724aeea7309751962b564

        * dds/DCPS/RTPS/Sedp.cpp:

          restoring volatile message reciept token sends to fix asymmetric
          lease partiitioning test

Thu Oct 08 20:47:31 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7fa9107be0da35e712a4ae24562fcd835de1a7f3

        * tests/DCPS/RtpsRelay/Smoke/Args.h:
        * tests/DCPS/RtpsRelay/Smoke/DataReaderListener.cpp:
        * tests/DCPS/RtpsRelay/Smoke/DataReaderListener.h:
        * tests/DCPS/RtpsRelay/Smoke/Writer.cpp:
        * tests/DCPS/RtpsRelay/Smoke/Writer.h:
        * tests/DCPS/RtpsRelay/Smoke/publisher.cpp:
        * tests/DCPS/RtpsRelay/Smoke/rtps_ld_5_sec.ini:
        * tests/DCPS/RtpsRelay/Smoke/rtps_ld_60_sec.ini:
        * tests/DCPS/RtpsRelay/Smoke/run_lease_duration_test.pl:
        * tests/DCPS/RtpsRelay/Smoke/subscriber.cpp:
        * tests/security/security_tests.lst:

          Adding asymmetric lease duration network partitioning test using
          relay (both secure & non-secure)

Thu Oct 08 17:41:33 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit f8e9139503c3b4aa39586c45161df94605b97aa6

          Merge remote-tracking branch 'upstream/master'

Thu Oct 08 15:09:25 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit b8363b9a119cdec5a26ea8b9c63827d0f4377ade

        * tools/rtpsrelay/DomainStatisticsWriter.h:

          Updated DomainStatisticsWriter.h to resolve compiler warnings.

Thu Oct 08 14:59:02 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 65c82d39564638f1e821c3a7723beaa5ff89bf2d

        * .gitignore:
        * tools/rtpsrelay/RelayHandler.h:

          Fixed cast in RtpsHandler.h.  Undid change to .gitignore.

Thu Oct 08 13:55:32 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 706060053a69aaefe5ef976ce6a27caf6502a82f

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:

          Support serialization of Observer::Sample to JSON

Thu Oct 08 13:48:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3f35c16b60285c94bd9e227a431a5a707351af69

          Merge pull request #1933 from jrw972/value-visitor

          Accomodate string managers in ValueWriter generator

Thu Oct 08 13:43:57 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5160e45a04b899ce1a320666f2f1334b18d56d54

          Merge remote-tracking branch 'upstream/master' into value-visitor

Thu Oct 08 13:42:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b95dbe0c2c352d1f781cbee36c9b9169a133015e

          Merge pull request #1930 from jrw972/feature/psm245_relay_stats

          Statistic Update for RtpsRelay

Thu Oct 08 11:41:56 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 673169ac6e8d557ee8e39f639f46f45f2fa2abe5

          Merge remote-tracking branch 'upstream/master'

Thu Oct 08 11:20:31 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit 86d05a8cf4d54fbe53c6212c1843a3a53c3bc9d4

        * dds/DCPS/RTPS/Spdp.cpp:
        * tests/DCPS/RtpsRelay/STUN/StunClient.cpp:
        * tools/rtpsrelay/RelayHandler.h:

          Fixed build warnings

Thu Oct 08 03:42:34 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 35962bfde4e92be3cfbb0c9426964ce931003e15

        * tests/DCPS/common/JsonValueWriter.cpp  dds/DCPS/JsonValueWriter.cpp:
        * tests/DCPS/common/JsonValueWriter.h  dds/DCPS/JsonValueWriter.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/common/ConnectionRecordLogger.cpp:
        * tools/rtpsrelay/DomainStatisticsReporter.h:
        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:

          Log statistics as JSON objects

Thu Oct 08 02:35:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 75aec1b66a429e9693dd09045cb42b8bfd439bfb

          Merge remote-tracking branch 'upstream/master' into
          feature/psm245_relay_stats

Thu Oct 08 02:34:46 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 805558e7eb47f68dd6fca596dcd5a63ee5952437

        * tools/rtpsrelay/Config.h:
        * tools/rtpsrelay/DomainStatisticsReporter.h:
        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantListener.cpp:
        * tools/rtpsrelay/ParticipantListener.h:
        * tools/rtpsrelay/ParticipantStatisticsReporter.cpp:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:
        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/PublicationListener.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/SubscriptionListener.h:

          From review

Wed Oct 07 22:31:08 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7668dd7be373c8890173f343ebd2e81be40fcacf

        * dds/idl/value_writer_generator.cpp:
        * tests/DCPS/common/JsonValueWriter.cpp:

          Accomodate string managers in ValueWriter generator

Wed Oct 07 15:18:14 UTC 2020  Tim Pollock  <pollockt@objectcomputing.com>
        commit a26459bd6104b1ef8ba36c60f0a9737c536b3cd1

        * .gitignore:

          Modified .gitignore to ignore recipe files.

Wed Oct 07 13:19:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e88ab1d61bc19ececb75a2089d0232847965f0d6

          Merge pull request #1924 from jrw972/guid-bit-keys

          Publications and Subscriptions BITs don't work in RTPS
          rediscovery

Wed Oct 07 13:18:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 02884b4fd0de9b1ac872f156b7d44cb5b168946d

          Merge pull request #1908 from jrw972/value-visitor

          Observed data cannot be logged

Wed Oct 07 00:38:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0f225942da7602ad503f7044d6350b2ea167c391

        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl_T.h:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * dds/idl/value_writer_generator.cpp:

          From review

Wed Oct 07 00:35:37 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 72a6e5e9b9055b464501fd1799cf87037f58f8ad

        * tools/monitor/MonitorDataStorage.inl:

          Fix monitor build error

Wed Oct 07 00:25:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0799a2ce906d85ec150c242b69485aa849c5b75c

          Merge pull request #1922 from jwillemsen/jwi-perlshebang

          Use portable perl shebang

Wed Oct 07 00:25:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ce1dc25f6aa9c457e5f6808e42160eab9800b48d

          Merge pull request #1920 from jrw972/connection-record-fixes

          Connection record fixes

Wed Oct 07 00:25:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b4fc3c9865b86fe80a942d79029ea0ecff5a0899

          Merge pull request #1919 from lij-oci/observer_test

          Observer test

Tue Oct 06 17:35:19 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f916dfca2022890415052bfe78651ee7621897c7

        * tests/DCPS/Observer/run_test.pl:

          Add common to Observer test

Thu Sep 17 18:05:44 UTC 2020  Jeremy Bratton  <brattonj@objectcomputing.com>
        commit 888bb39cfa30f55aa7ecf0716bbfc105dfa0cd09

        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:
        * tools/rtpsrelay/Config.h:
        * tools/rtpsrelay/DomainStatisticsListener.cpp:
        * tools/rtpsrelay/DomainStatisticsListener.h:
        * tools/rtpsrelay/DomainStatisticsReporter.h:
        * tools/rtpsrelay/DomainStatisticsWriter.h:
        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.h:
        * tools/rtpsrelay/HandlerStatisticsReporter.h:
        * tools/rtpsrelay/ParticipantListener.cpp:
        * tools/rtpsrelay/ParticipantListener.h:
        * tools/rtpsrelay/ParticipantStatisticsReporter.cpp:
        * tools/rtpsrelay/ParticipantStatisticsReporter.h:
        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/PublicationListener.h:
        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/ReaderListener.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/SubscriptionListener.h:
        * tools/rtpsrelay/WriterListener.cpp:
        * tools/rtpsrelay/WriterListener.h:
        * tools/rtpsrelay/lib/Relay.idl:
        * tools/rtpsrelay/utility.h:

          Statistic Update for RtpsRelay

          The multiple publish and report flags have been consolidated so
          that
          there is a single flag for both publishing and reporting.

          The RtpsRelay no longer subscribes to statistics topics, it just
          sends
          samples. An external collector will be created to process the
          stats.

          Participant stats have been seperated from the Handler stats, and
          the
          stats have been changed slightly. Error and governor stats have
          been
          added, and participant stats are sent in groups to prevent too
          many
          stats from being sent at one time.

Tue Oct 06 17:35:19 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 71fef73d87f58b91c83889c42f0cf9510bef490b

        * tests/DCPS/Observer/Observer.mpc:
        * tests/DCPS/Observer/run_test.pl:

          Add common to Observer test

Tue Oct 06 03:21:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d76d39c9ca209566bd647913dce64db5d6cfac45

        * dds/DCPS/BitPubListenerImpl.cpp:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * dds/monitor/DRMonitorImpl.cpp:
        * dds/monitor/DRPeriodicMonitorImpl.cpp:
        * dds/monitor/DWMonitorImpl.cpp:
        * dds/monitor/DWPeriodicMonitorImpl.cpp:
        * examples/DCPS/DistributedContent/AbstractionLayer.cpp:
        * performance-tests/Bench/src/Publication.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/RtpsDiscovery/RtpsDiscoveryTest.cpp:

          Fix initialization of participant_key and InfoRepo

Tue Oct 06 13:28:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 67dfdef7e3598df5a7059500fae2ae195dce732e

        * tests/DCPS/common/JsonValueWriter.h:

          Change include for SampleInfo

Mon Oct 05 21:57:03 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c871b3fd066e85cf3db2828cf137d5b372a4ac5c

        * dds/DCPS/ConnectionRecords.cpp:

          Fix build

Mon Oct 05 21:14:49 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 22687ec6ece8e0080f9de12190cf80456ff460bc

        * dds/DCPS/ValueWriter.h:
        * tests/DCPS/common/JsonValueWriter.cpp:

          Build fixes

Mon Oct 05 16:26:16 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit dd7b49b850231b3b24417fc3f93e196244fbf09c

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/RtpsDiscovery/RtpsDiscoveryTest.cpp:

          Fix broken tests

Mon Oct 05 15:40:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 819bd40973a1a1b981afb6d5d4666ebecca5d036

        * dds/DCPS/ConnectionRecords.cpp:
        * dds/DCPS/ConnectionRecords.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          Fix minimum BIT builds

Mon Oct 05 15:27:38 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4f379e91315b98c04b58fbdec7701bbf92bdeeda

        * dds/idl/value_writer_generator.cpp:

          Fix function templates (again)

Mon Oct 05 14:49:58 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit e996687e71ef33340debc3cc9da31ac05a2a9d4b

        * dds/DCPS/RTPS/Sedp.cpp:

          Send builtin crypto tokens once remote volatile reader is
          associated

Mon Oct 05 14:36:38 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit df8292feaa91ca629ce235f9ba53b2843890845c

        * tests/DCPS/Observer/subscriber.cpp:

          code review changes

Fri Oct 02 21:15:09 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 921f5a5b03ab6fb0b54b2617fb9a9d5cb7cf804d

        * dds/DCPS/BitPubListenerImpl.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/Discovery.h:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/GuidUtils.h:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp:
        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/StaticDiscovery.cpp:
        * dds/DdsDcpsCore.idl:
        * java/dds/DDS/.gitignore:

          Publications and Subscriptions BITs don't work in RTPS
          rediscovery

          Problem
          -------

          Consider the following scenario:

          * Participant A and B have discovered each other.
          * A network partition or other issue that causes participants to
          timeout of discovery occurs.
          * The issue resolves and A and B discovery each other again.

          Insertion into the Publication and Subscription BITs will fail
          when A
          and B discover each other again. The core of the problem is that
          SEDP
          will assign a new BIT key to the Publication/Subscription while
          the
          DataReader is expecting the same key since the instance may have
          not
          been removed from the BIT.

          Solution
          --------

          Adopt the resolution of issue 153 for the DDS 1.5 Spec that says
          that
          BIT keys are 16 byte arrays. This allows a BIT key to store an
          RTPS
          GUID.

Fri Oct 02 20:25:46 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a5dcebae692967dcd5dda5506d6a023677e48c99

        * dds/idl/dds_generator.h:
        * dds/idl/value_writer_generator.cpp:

          Fix function templates

Fri Oct 02 19:58:43 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ef9d5dd38adb7b484a42fa798aa46582f0b979c0

        * dds/DCPS/ConnectionRecords.h:

          From review

Fri Oct 02 14:48:26 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit c2ce4df65e6a6274c77d45b1cacf6684c89164e6

        * bin/all_tests.pl:
        * tests/FACE/Conformance/filter.pl:
        * tests/cmake_integration/run_ci_tests.pl:
        * tests/security/sign_governance_and_permissions_files.pl:
        * tools/scripts/dds_fuzz.pl:
        * tools/scripts/generate_combined_doxygen.pl:
        * tools/scripts/gitrelease.pl:
        * tools/scripts/show_build_config.pl:
        * tools/scripts/update_gitignore.pl:
        * tools/scripts/upload_ghprb_results.pl:

          Perl shebang changes

          * bin/all_tests.pl:
          * tests/FACE/Conformance/filter.pl:
          * tests/cmake_integration/run_ci_tests.pl:
          * tests/security/sign_governance_and_permissions_files.pl:
          * tools/scripts/dds_fuzz.pl:
          * tools/scripts/generate_combined_doxygen.pl:
          * tools/scripts/gitrelease.pl:
          * tools/scripts/show_build_config.pl:
          * tools/scripts/update_gitignore.pl:
          * tools/scripts/upload_ghprb_results.pl:

Fri Oct 02 14:29:20 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 7cf5317e1115baa763ce84b1bad83b543b120674

        * java/tests/messenger/run_test.pl:
        * java/tests/multirepo/run_test.pl:

          Use portable perl shebang

          * java/tests/messenger/run_test.pl:
          * java/tests/multirepo/run_test.pl:

Fri Oct 02 03:43:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a0d6c43302227885b50a7875abf80aba32a99c9b

        * dds/DCPS/ValueWriter.h:
        * dds/idl/value_writer_generator.cpp:

          Use template function for forward declaration

Fri Oct 02 03:19:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9f0004e563c1ed4f803d6cba074c0508d1bb0dfc

        * dds/DCPS/ConnectionRecords.cpp:
        * dds/DCPS/ConnectionRecords.h:

          Add pch

Fri Oct 02 02:38:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d44db531d915ea3057a9f0955a1804e779d36ed6

          Merge pull request #1917 from jrw972/return-permissions-handle

          Permissions handles are not returned to Access Control Plugin

Fri Oct 02 02:37:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2a144588849c11285c99d6e5c50de17b468c218b

          Merge pull request #1910 from
          simpsont-oci/use_bit_masking_in_bitmapNonEmpty

          Use Bit Masking in RTPS::bitmapNonEmpty()

Thu Oct 01 20:11:18 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6e020603d8fc9f711c196156ca50322009c5ef96

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DdsSecurityCore.idl:

          From review

Thu Oct 01 16:52:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9338f872fe0d7f07326bfc366301e97e8b59617d

        * dds/DCPS/ConnectionRecords.cpp:
        * dds/DCPS/ConnectionRecords.h:
        * dds/DCPS/JobQueue.h:
        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/DdsDcpsCore.idl:

          Fix various bugs related to ConnectionRecord processing

Thu Oct 01 16:37:34 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 6ab894a9aef5364f94de599f6ef8d2530787424c

        * dds/DCPS/RTPS/BaseMessageUtils.cpp:

          Update dds/DCPS/RTPS/BaseMessageUtils.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Thu Oct 01 16:14:31 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 99992c7e9a457195a039df35ff7eaaae03afba26

        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          Observer test

Thu Oct 01 15:59:05 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 4f53755603152285de7054944acb3f57f93288ba

        * dds/DCPS/DisjointSequence.cpp:
        * dds/DCPS/DisjointSequence.h:
        * dds/DCPS/RTPS/BaseMessageUtils.cpp:
        * dds/DCPS/RTPS/BaseMessageUtils.h:
        * dds/DCPS/RTPS/Util.cpp:
        * dds/DCPS/RTPS/Util.h:
        * dds/DCPS/Util.cpp:
        * dds/DCPS/Util.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp:

          resolve review comments (function relocation)

Thu Oct 01 13:55:08 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ed78d761299709eb81af7e7c3de20e45920ab71b

        * dds/DCPS/RTPS/Util.cpp:

          resolve review comments (simplify code)

Wed Sep 30 22:27:24 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5fe6d9c542bc3a7ba3fb201486c1d763fb4272eb

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:
        * dds/DdsSecurityCore.idl:

          Permissions handles are not returned to Access Control Plugin

          Problem
          -------

          The DDS Security Specification provides no way to return the
          handles
          returned by validate_local_permissions and
          validate_remote_permissions. This creates a resource leak as
          local
          and remote partipants are created and destroyed.

          Solution
          --------

          Add a method return_permissions_handle to free the resources
          backing
          the handle.

Wed Sep 30 14:20:07 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 05a2a6c8073007f9607c2630abd211ee9a0fc799

        * dds/DCPS/Util.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          fix build issues

Tue Sep 29 20:25:16 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f0d5c0ea7de893e62dfd9457f10a196a41151a8e

        * dds/DCPS/RTPS/Util.cpp:
        * dds/DCPS/RTPS/Util.h:
        * dds/DCPS/Util.cpp:
        * dds/DCPS/Util.h:

          resolving review comments

Tue Sep 29 18:35:30 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8690222ac1e6ffb2c25f9da701f1b0e322caf650

        * dds/DCPS/RTPS/Util.cpp:
        * dds/DCPS/RTPS/Util.h:
        * dds/DCPS/Util.cpp:
        * dds/DCPS/Util.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/UnitTests/.gitignore:
        * tests/DCPS/UnitTests/RtpsSequenceNumberSet.cpp:
        * tests/DCPS/UnitTests/UnitTests.mpc:

          pull helper functions into separate library util locations, add
          unit test, change bitmapNonEmpty to use bitmask to avoid double
          loop

Tue Sep 29 12:40:58 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 015c981199b318fb1ddad4eb33e599938409d989

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl_T.h:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * dds/DCPS/ValueWriter.h:
        * dds/idl/dds_visitor.cpp:
        * dds/idl/value_writer_generator.cpp:
        * dds/idl/value_writer_generator.h:
        * tests/DCPS/Observer/Observer.mpc:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/common/ConnectionRecordLogger.cpp:
        * tests/DCPS/common/JsonValueWriter.cpp:
        * tests/DCPS/common/JsonValueWriter.h:
        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Observed data cannot be logged

          Problem
          -------

          One of the primary motivations for the Observer interface is the
          ability to log samples as they are written, received, and
          accessed.
          Currently, users of the Observer interface receive a generic
          pointer
          to sample data which may be a raw sample or something else.
          There is no capability that allows a user to take this generic
          pointer and log the sample contained therein.

          Solution
          --------

          1. Standardize on the approach that the pointer in the Sample is
          a
          pointer to a raw sample.

          2. Introduce the ValueWriter interface and necessary support in
          the
          IDL compiler to allow generic processing of the raw sample.

          3. Add plumbing between generic and typed DataReader and
          DataWriter to
          allow a user to dispatch a ValueWriter on the raw sample.

          4. Provide an incomplete JsonValueWriter to demonstrate how types
          processed by the IDL compiler could be serialized to JSON.

          Notes
          -----

          * It may be necessary/beneficial to augment the ValueWriter
          interface
          with type information via TypeObjects.

          * ValueWriter suggests a symmetric interface called ValueReader
          that
          takes an opaque representation and populates a raw sample, e.g.,
          deserialization.

Tue Sep 29 13:36:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit faa4a306967d4dd949df99ac4d8db88ef4451992

          Merge pull request #1904 from mitza-oci/master

          DataLink: removed declaration of unimplemented method

Sun Sep 27 18:56:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2445a86df6d2a736ee36f07252905eaa5372f8bf

        * dds/DCPS/Observer.cpp:

          Don't use brace initializer in constructor

Sat Sep 26 20:08:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9cefd31e5a5946c35fe6eb7ab07d9880286f6991

        * dds/DCPS/transport/framework/DataLink.h:

          DataLink: removed declaration of unimplemented method

Fri Sep 25 22:03:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 041cdc6342b59c6d65cbcf8483940068cc195ab7

          Merge pull request #1903 from jrw972/windows-conn-reset

          Windows connection reset prevention code immediately after open

Fri Sep 25 22:03:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 276b7590ff8d216ff9b0078297fb8a0eb80885a8

          Merge pull request #1902 from Cingulara/patch-1

          RECONNECTED_STATE spelling mistake

Fri Sep 25 22:03:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f192a37252512373c2ee7a94c25009536696ea21

          Merge pull request #1851 from lij-oci/transaction_log

          Observer Interface

Fri Sep 25 19:19:30 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ab61a8af29c7f9122b7c46c39ef111cf77a64dfc

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:

          Windows connection reset prevention code immediately after open

Fri Sep 25 16:31:42 UTC 2020  Cingulara CTO  <46137145+Cingulara@users.noreply.github.com>
        commit d089920446c97730a2f697d9abd237bc1dcc69eb

        * dds/DCPS/transport/tcp/TcpConnection.cpp:

          RECONNECTED_STATE spelling mistake

          Small spelling mistake I see in the logs that is bugging me.

Thu Sep 24 21:42:04 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit b4c34b0c6dd1c4f0099a907b697510ba5ef63d82

        * tests/DCPS/Observer/TestObserver.cpp:

          show_observed

Thu Sep 24 20:57:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e2281728495be03208101f21f0c59ee504ecc407

          Merge pull request #1898 from jrw972/rtps-control-logging

          Don't log failed RTPS control sends if network is unreachable

Thu Sep 24 20:57:33 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 594943ba00b352a2151e3f0ad666d0d1d79fdfbd

          Merge pull request #1895 from jrw972/rtps-relay-stun

          NAT bindings for RtpsRelay may timeout without return data

Thu Sep 24 19:33:46 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 373ae1b1805f5260025af82a10076a2195a67783

        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/run_test.pl:

          check received/taken

Thu Sep 24 16:47:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 117874b36a6266cab7cc08e7e8ebb24890bc95f1

        * dds/DCPS/Discovery.cpp:

          Enable topic

Thu Sep 24 00:42:04 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cfa7474c775cb327098f2921d2fbf5e2e84b7ef1

        * java/tests/participant_location/rtps.ini:
        * java/tests/participant_location/rtps_no_ice.ini:
        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:

          Fix tests

Wed Sep 23 22:03:08 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 9b5c9ae3f7b0082b4d80404b88c8a9a56385d4cf

        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:

          remove const in group3

Wed Sep 23 20:27:56 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5f4b9cf4a1d1e664bc72914eb6d2a31d7f27187d

        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          _rch

Wed Sep 23 18:15:05 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c344b310bb42e423a9892e5deb81ad011d164c0e

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:

          code review changes 2

Wed Sep 23 17:25:48 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 54d05b77008be79d537e2b70f4c6ccc5381d4f77

        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Fix typo

Wed Sep 23 14:19:40 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ccc16c560406ae6bc8d8e9cfdabd42261ba865e1

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * tests/DCPS/ParticipantLocationTopic/rtps.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_ipv6.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice_ipv6.ini:

          Fix logic and tests

Wed Sep 23 13:13:46 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit dc2dbb8b6e2036b58d2fd8db076f53acd9e3e303

        * bin/dcps_tests.lst:
        * tests/DCPS/common/ConnectionRecordLogger.cpp:
        * tests/DCPS/common/ConnectionRecordLogger.h:
        * tests/security/security_tests.lst:

          Fix build

Tue Sep 22 21:52:49 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 7aa977803375e98ebf238c733a49b81aa9ef8d0c

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Observer.h:

          const RcHandle

Tue Sep 22 21:46:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f39b88b219b388f707d240a5ae24309006bb6a04

        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:
        * tests/DCPS/common/ConnectionRecordLogger.cpp:

          Fix the build

Tue Sep 22 20:08:14 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5cd88dfe79f987d4c34c0d20ad439b34e2f0d0f5

        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:

          code review changes

Tue Sep 22 17:54:22 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a9c055b3d4521e877662fcb2470f6b248cc6f44c

        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:

          Don't log failed RTPS controls ends if network is unreachable

Tue Sep 22 16:02:35 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 656e9aebb70c8adb8ce770f55bcf5a0284c7b6dc

        * tests/DCPS/common/ConnectionRecordLogger.h:

          Fix build

Tue Sep 22 14:00:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4cd04b1c124d328a76282d9a2d4968f51d3de006

        * tools/rtpsrelay/RtpsRelay.mpc:

          Require security to build the RtpsRelay

Tue Sep 22 02:16:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2b7b53cfa007441219c966fcccfd8d08aeb65d7c

        * tools/rtpsrelay/RelayHandler.cpp:

          Fix STUN related logging in RtpsRelay

Tue Sep 22 01:38:52 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7ed9a3d0322f8e358a0234d833041f80e650fafa

        * dds/DCPS/RTPS/ICE/Ice.cpp:

          Fixes from review

Mon Sep 21 22:07:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ccf3ac944092be871877f668b02722845149cc95

        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:
        * dds/DCPS/RTPS/ICE/Stun.h:

          Fixes from review

Mon Sep 21 19:21:41 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d3322ea1d8a048bd8b72626a4677b2a12beff1f0

        * java/dds/.gitignore:

          Add ignores for Java build

Mon Sep 21 19:18:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 49144e80578cf5c579e5d61c9bef1a2fe2d3f5a6

        * dds/DCPS/DomainParticipantImpl.cpp:

          Fix uninitialized discovery

Mon Sep 21 18:26:44 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0ae21f35322fa46086169f6395b260c9e7bc7871

        * dds/DCPS/RTPS/ICE/Ice.h:
        * dds/DCPS/RTPS/ICE/Stun.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          From review

Mon Sep 21 17:17:03 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9ea27cb31c6a0ca94c3a3c4d2754e90c7d7693ba

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          Fix build

Wed Sep 16 01:37:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e300653760c804e6ac5629a908b6a45f5ae6645b

        * dds/DCPS/BuiltInTopicUtils.cpp:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Definitions.h:
        * dds/DCPS/Discovery.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/RTPS/BaseMessageTypes.h:
        * dds/DCPS/RTPS/ICE/AgentImpl.cpp:
        * dds/DCPS/RTPS/ICE/AgentImpl.h:
        * dds/DCPS/RTPS/ICE/Checklist.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:
        * dds/DCPS/RTPS/ICE/Stun.cpp:
        * dds/DCPS/RTPS/ICE/Stun.h:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/SafetyProfileStreams.cpp:
        * dds/DCPS/SafetyProfileStreams.h:
        * dds/DCPS/security/BuiltInPluginLoader.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/TransportClient.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportInst.cpp:
        * dds/DCPS/transport/framework/TransportInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/DdsDcpsCore.idl:
        * java/dds/OpenDDS/DCPS/.gitignore:
        * tests/DCPS/RtpsRelay/STUN/StunClient.cpp:
        * tests/DCPS/RtpsRelay/Smoke/Smoke.mpc:
        * tests/DCPS/RtpsRelay/Smoke/publisher.cpp:
        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:
        * tests/DCPS/RtpsRelay/Smoke/subscriber.cpp:
        * tests/DCPS/common/ConnectionRecordLogger.cpp:
        * tests/DCPS/common/ConnectionRecordLogger.h:
        * tests/DCPS/common/common.mpc:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:

          NAT bindings for RtpsRelay may timeout without return data

          A client was observed sending SEDP to the relay and the relay was
          observed sending SEDP to the client.  The client's messages were
          received by the relay but the relay's messages were not received
          by
          the client. Simultaneously, there was no issue with the SPDP and
          STUN
          messages to the SEDP port. The key difference between the SEDP
          port
          and SPDP/STUN is that the latter has a periodic return of data.
          Thus,
          the motivation for this change is to provide a mechanism for the
          periodic return of data from the relay to a client.

          Solution
          --------

          Each port on the relay acts as a STUN server. Clients of the
          relay
          periodically send binding requests to refresh any NAT bindings.
          Client send binding indications between requests. The timing of
          the
          requests is configured through the ICE setting for server
          reflexive
          addresses.

          The STUN messages to the RtpsRelay were extended with the GUID
          prefix
          of the client. This was necessary to setup and maintain the
          routing
          tables on the relay.

          A new builtin topic (Connection Record) was created to monitor
          the
          connection with the relay.

          Future Work
          -----------

          The Connection Record topic should replace the Participant
          Location
          Topic.

          When the RtpsRelay and ICE are used simultaneously, the server
          reflexive task in ICE should be disabled and the results of the
          relay
          STUN task used instead.

          The next possible step in this design is to implement STUN via
          RTPS.
          One would most likely take the route of STUN readers and writers
          and
          secure versions of the same. One challenge is that the ports in
          the
          relay are not associated with a participant. One option is for
          the
          relay to impersonate the application participant for the purpose
          of
          reading and writing STUN.

Fri Sep 18 19:28:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8fa686abbb3ed01bf101257cbb1bcf0617658af6

          Merge pull request #1893 from mitza-oci/warnings

          Fix warnings and compile errors on older MSVC

Fri Sep 18 19:27:58 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6d4c6ddcd7de596205f705ba6599b126a62ce19e

          Merge pull request #1890 from jwillemsen/jwi-narrow

          Use dynamic_cast instead of manual narrow

Fri Sep 18 19:27:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0df97f5014a9df122eafdb19b977248a599ee553

          Merge pull request #1885 from jrw972/sedp-coverity

          Fix coverity warning

Fri Sep 18 13:58:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f5725bb16e80a04749a8dcaca4c2672ecfed022a

        * tests/DCPS/LargeSample/Writer.cpp:

          Large Sample test: avoid integer narrowing warning

Fri Sep 18 13:57:41 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 493d9787d69962735f17895457bf0b6f41e40445

        * dds/DCPS/transport/framework/TransportQueueElement.cpp:

          Use compiler-provided zero-intialization. Works with older
          compilers.

Fri Sep 18 13:32:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c1bda1a493e034ff94e5f021650fee587a95673e

          Merge branch 'master' into warnings

Thu Sep 17 12:27:59 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit db4e87daaea0bd2aaef119911bb17472641f63af

          Merge branch 'jwi-narrow2' into jwi-narrow

Thu Sep 17 12:27:41 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 5da0cdae672be2fc18e75c3b122000a8b71b6b73

        * java/idl2jni/codegen/be_produce.cpp:
        * java/idl2jni/codegen/idl2jni_visitor.cpp:
        * java/idl2jni/codegen/im_java.cpp:
        * java/idl2jni/codegen/im_jni.cpp:

          Use dynamic_cast instead of narrow

          * java/idl2jni/codegen/be_produce.cpp:
          * java/idl2jni/codegen/idl2jni_visitor.cpp:
          * java/idl2jni/codegen/im_java.cpp:
          * java/idl2jni/codegen/im_jni.cpp:

Thu Sep 17 11:51:59 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit acf201d4ab783536b9122f449b5ffb470bdfec5e

        * dds/idl/be_produce.cpp:
        * dds/idl/dds_generator.cpp:
        * dds/idl/dds_generator.h:
        * dds/idl/dds_visitor.cpp:
        * dds/idl/field_info.cpp:
        * dds/idl/itl_generator.cpp:
        * dds/idl/langmap_generator.cpp:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/rapidjson_generator.cpp:
        * dds/idl/v8_generator.cpp:
        * java/idl2jni/codegen/be_produce.cpp:

          Use dynamic_cast instead of manual narrow

          * dds/idl/be_produce.cpp:
          * dds/idl/dds_generator.cpp:
          * dds/idl/dds_generator.h:
          * dds/idl/dds_visitor.cpp:
          * dds/idl/field_info.cpp:
          * dds/idl/itl_generator.cpp:
          * dds/idl/langmap_generator.cpp:
          * dds/idl/marshal_generator.cpp:
          * dds/idl/metaclass_generator.cpp:
          * dds/idl/rapidjson_generator.cpp:
          * dds/idl/v8_generator.cpp:
          * java/idl2jni/codegen/be_produce.cpp:

Mon Sep 14 18:37:44 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4e5fd2d63655ba81dc23cdf821ef87b8de1f2289

        * dds/DCPS/RTPS/Sedp.h:

          Fix coverity warning

Mon Sep 14 22:34:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1ad067ca7f7cfd13fdc5c7ebbe698774d73533ce

          Merge pull request #1884 from mitza-oci/pr1853

          Support RTPS large data for durability resends (from #1853)

Mon Sep 14 16:37:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9c2bd6a1804dc423027052abd73c9f82cc312f96

        * dds/DCPS/DisjointSequence.inl:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          cleaned up logging and whitespace

Mon Sep 14 16:28:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5b9b94db72aed1b4a13b062d27a9482715d43fc2

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Updated memory management strategy for fragmentation_helper

Mon Sep 14 16:16:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d274e08cdb8407ae9931c2045344f78d13b1c0cb

        * dds/DCPS/transport/framework/TransportQueueElement.h:

          style guidelines

Mon Sep 14 16:14:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b1f12239cd197862d4fd686dc3bedd83b1d28b2e

        * dds/DCPS/DisjointSequence.cpp:
        * dds/DCPS/DisjointSequence.inl:

          Moved some DisjointSequence methods to inl, fixed an off-by-one
          in the new code

Mon Sep 14 16:14:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 07f68d87fbf42a08f932103ca43b5cfce89aae16

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Updated log message for clarity

Mon Sep 14 16:07:45 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 586d33a0180cb3cda8b08157605c29b4fff85347

        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:

          forward declarations

Mon Sep 14 14:48:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b84870df050b628ba25e5862a312922059e3563a

          Merge pull request #1881 from jrw972/rtps-empty-ip-checks

          Add checks for empty IP addresses in RTPS

Mon Sep 14 14:48:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e3f2e570d51039b17e828dafc317fa044fce6849

          Merge pull request #1879 from jrw972/dynamic-ice-rtps-relay

          User cannot dynamically toggle RtpsRelay and ICE

Mon Sep 14 14:45:57 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 63a65afe83e7b5e4fe477d76c074ecfde5bb8bc5

        * tests/transport/best_effort_reader/subscriber.cpp:
        * tests/transport/rtps/publisher.cpp:
        * tests/transport/rtps/subscriber.cpp:
        * tests/transport/rtps_directed_write/subscriber.cpp:
        * tests/transport/rtps_reliability/rtps_reliability.cpp:

          From review

Sun Sep 13 22:56:39 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1c7ebcbd0832fe71b98c2faf7a3a389a8acc89bf

        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:

          test enum

Sun Sep 13 06:42:56 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 32dbd12bf2da3ea4fe734a80cbfb6c25a90fa5e5

        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          DELETED and DISASSOCIATED

Sat Sep 12 05:52:35 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a14f94dd1dfaa5f5276a9c38f6ce7fb675f4c593

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Change assert to error message

Sat Sep 12 05:33:04 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c86fc9cc1fee9f17365b6601a53b19784284e6a5

        * tests/transport/best_effort_reader/subscriber.cpp:
        * tests/transport/rtps/subscriber.cpp:
        * tests/transport/rtps_directed_write/subscriber.cpp:
        * tests/transport/spdp/spdp_transport.cpp:

          Fix broken tests

Fri Sep 11 21:32:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d3fb0001bc99ddb29b2872f6e2a62b256a71e281

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          From review

Fri Sep 11 21:12:14 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a219fd02e21116ce2ee78f532a572bdeb98aa3c6

        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Fix Fragment Memory Leak

          Also remove unneeded things in fragmentation_helper.

Fri Sep 11 20:49:51 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d3ef9c31886636ac043b66333f3b4db66642b7ca

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Add checks for empty IP addresses in RTPS

Fri Sep 11 19:51:49 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit f2d9f902e847f56531eb744d879f7b49ec03c1d5

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * dds/DCPS/PublisherImpl.cpp:
        * tests/DCPS/Observer/TestObserver.h:

          prepare_to_delete once

Fri Sep 11 19:44:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dcb83149cbbcf2cf9450a6a4cc413071d123a797

          Merge remote-tracking branch 'fred/igtd/durability-resend' into
          pr1853

Fri Sep 11 19:42:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0213d0957c4c7828b63196edf583a9f25b693a1b

        * dds/DCPS/DisjointSequence.cpp:
        * dds/DCPS/DisjointSequence.h:
        * dds/DCPS/DisjointSequence.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          continued features for durable fragments:

          - respond to NackFrag with just the DataFrags requested
          - updated Gaps sent as responses to nacks in the durable range
          - start of memory management for fragmentation_helper

Fri Sep 11 19:09:21 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 153ed6e729e152fa132a9f3a26942a6a1c1dc40f

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RtpsUdpDataLink.cpp: Fix Function Names in Logs

Fri Sep 11 18:02:19 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f477a9cc53714e8a94a2b966e70960180285272f

        * dds/DCPS/DiscoveryBase.h:

          Fix build

Thu Sep 10 17:57:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit be7620ccd7a9fceb5bf47771204cbd3a5d6fcbda

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportInst.cpp:
        * dds/DCPS/transport/framework/TransportInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          User cannot dynamically toggle RtpsRelay and ICE

          The decision to use the RtpsRelay (or to only use the RtpsRelay)
          or
          ICE can only be made at start time. Users of OpenDDS want the
          ability
          to dynamically turn off the RtpsRelay and ICE for testing
          purposes.

          Solution: Make the corresponding configuration dynamic.  The
          configuration for the RtspRelay is straightforward as it can be
          picked
          up on the next send. The configuration of ICE is more difficult
          since
          ICE needs to be restarted for participants that have already been
          discovered.

          The code attempts to reset flags in the ParticpantLocationTopic.
          The
          ParticipantLocationTopic in a remote participant will be updated
          after
          the corresponding entries time out.  To a certain extent, these
          controls influence the ways in which other participants can
          discover a
          given participant. For example, switching to RtpsRelay only means
          that a remote participant will eventually say that the given
          participant can only be reached via the RtpsRelay.  The local
          participant may still be able to discover the remote locally.

Thu Sep 10 20:25:57 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 24d3fbc9d7afffc913162a294ac1ae1f989679c9

        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          no member observers

Thu Sep 10 20:24:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 5fd7d7f41d20a4d5f0c451afd9cc38971692e8db

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/DelayedDurable/rtps_disc.ini:

          Delayed Durable Temp Changes

Thu Sep 10 19:50:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c664b7f4998c41a2a76f972fbd96f236df7e3285

          Merge pull request #1877 from jonesc-oci/domain_range_coverity

          Fix Coverity issues.

Thu Sep 10 19:27:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1264cad80377a12fbbf4cd1728d05d847915ce05

          Merge pull request #1871 from jrw972/rtps-graceful-degradation

          RTPS Discovery does not degrade gracefully with load

Thu Sep 10 19:26:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9333edf51574ba10e2b8bcd05abce0951762b641

          Merge pull request #1845 from adamsj-oci/marshal_traits_master

          dds_(de)marshal skip serialization step for RMW interop

Thu Sep 10 14:11:00 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 551f1340f5aee976e1fce87797751b3638551df6

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Code review changes.

Thu Sep 10 00:41:29 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 0ad352360dfa15ca555cfc5adf596dc42a5e0a93

        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          test stats checks

Wed Sep 09 21:29:25 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 156ddb1fe85dc38263c54a8014f8fb2842325631

        * tests/DCPS/DelayedDurable/DelayedDurable.cpp:

          DelayedDurable: Large Sample Minimum Sample Count

Wed Sep 09 21:24:18 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit f0f4ed8e9ebf149d19925a0ac53b86090fc97c58

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RtpsUdpDataLink.cpp: Add Missing (%P|%t) to logs

Wed Sep 09 18:28:28 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c5f66463769e33b5656748c0a594a5f2898a322c

        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:

          stats, guid

Tue Sep 08 22:23:13 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c391e2cee1af93473692f1b71636add508e4c74b

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Fix Coverity issues.

Wed Sep 09 03:25:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3ba7d1be8a18d0ca52035ee819ca36a2f5bd8d1f

        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:

          fixed warnings

Wed Sep 09 01:15:06 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1a3430be18e4c084d0cae2f79784bb28253972df

        * tests/DCPS/Observer/DataReaderListenerImpl.cpp:
        * tests/DCPS/Observer/DataReaderListenerImpl.h:
        * tests/DCPS/Observer/Domain.h:

          read_instance, take_instance

Wed Sep 09 00:38:27 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 1d8193fa3d02d73a61927e17579eac32e62c6143

        * tests/DCPS/DelayedDurable/DelayedDurable.cpp:

          DelayedDurable Test: Fix New Instance Check

          Added instance read check was missing the instances updated later
          by the
          writer (with values 50x + 1). This fixes that by reading all
          instances
          and waiting for a timeout before having the reader stop.

Tue Sep 08 20:19:31 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a780698d698001a40771475fbaa2c0eb841c0d9f

        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:

          RtpsUdpSendStrategy::max_message_size: No 0 Check

Tue Sep 08 20:04:03 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 1a386baeb7b4110cabb20bee78109d49e0c19250

        * tests/DCPS/DelayedDurable/DelayedDurable.cpp:

          DelayedDurable changes that should work, but don't

Tue Sep 08 17:50:37 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 9349b94b841ccb3d0b8e4ad543ef9b294e7e4c4a

        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/DataReaderListenerImpl.cpp:

          _Export; listener

Tue Sep 08 15:51:53 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit bd278611244f44c45d6423cbebe69e78dae79e50

        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          pch, pre-c++11, to_str(GUID_t)

Mon Sep 07 22:25:43 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 2bdbd74a8b1fa3e322e78e149e00581d197e0481

        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/run_test.pl:
        * tests/DCPS/Observer/subscriber.cpp:

          test

Mon Sep 07 19:05:20 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1b708c5f98daa727a38fcc1ba123bf204b4c8739

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:
        * dds/DCPS/RakeResults_T.cpp:
        * tests/DCPS/Observer/DataReaderListenerImpl.cpp:
        * tests/DCPS/Observer/DataReaderListenerImpl.h:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/subscriber.cpp:

          read/taken

Sat Sep 05 00:30:41 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit d2d02552a07cc0eaa3f45f91c2573ec036d26220

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/DataReaderListenerImpl.cpp:
        * tests/DCPS/Observer/DataReaderListenerImpl.h:
        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/subscriber.cpp:

          qos_changed and sample_received

Fri Sep 04 21:04:17 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 94a63f8cb88ec86c0d3c63bd5e27206b387343c0

        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl_T.h:

          didn't need virtual for these methods

Fri Sep 04 20:48:27 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit b23f3cb678c8e1dcd703838d5a20eb511fd4127d

        * dds/DCPS/SequenceNumber.cpp:
        * dds/DCPS/transport/framework/TransportCustomizedElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:

          PR 1853 Cleanup

Fri Sep 04 00:35:37 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4396d619e2abc22fab76e7466a77dfc0b9323dd2

        * dds/DCPS/JobQueue.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/framework/TransportInst.cpp:

          Fix shutdown failures

Thu Sep 03 12:23:56 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ffe64123ce20aea0e390d37197fae2ce42df1cf5

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/framework/TransportInst.cpp:
        * dds/DCPS/transport/framework/TransportInst.h:
        * dds/DCPS/transport/multicast/MulticastDataLink.cpp:
        * dds/DCPS/transport/multicast/MulticastDataLink.h:
        * dds/DCPS/transport/multicast/MulticastDataLink.inl:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/udp/UdpDataLink.cpp:
        * dds/DCPS/transport/udp/UdpDataLink.h:
        * dds/DCPS/transport/udp/UdpDataLink.inl:
        * dds/DCPS/transport/udp/UdpTransport.cpp:

          RTPS Discovery does not degrade gracefully with load

          SEDP messages are queued and processed on a different thread than
          the
          SEDP transport.  This queue has blocking behavior and causes a
          deadlock when it fills up.

          Solution: The solution is to create back pressure at the point of
          input processing. This means that the transport thread(s) that
          process
          the input should be doing the work of processing the messages.
          This
          commit shifts all discovery processing to the SEDP transport
          thread
          and eliminates the SEDP worker thread and SPDP transport thread.

Fri Sep 04 19:42:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5dcfdd40d31d594b9273ceef4077048da6528d7b

          Merge pull request #1873 from jrw972/durable-participant-messages

          Durable participant messages

Fri Sep 04 19:40:31 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 064300dd65fcd9061a0e8be25653e4b815ddc178

        * dds/DCPS/RTPS/Spdp.cpp:

          Update dds/DCPS/RTPS/Spdp.cpp

          Review enable writer settings.

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Fri Sep 04 13:56:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6d438e079944d71bbd65978101e36b7e97fd8c05

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          No durability/security for Participant Message Writers
          (liveliness)

          The durability cache for the Participant Message writers in SEDP
          was
          nevery populated. Furthemore, durable data for the Secure
          Participant
          Message Writer was never replayed.

          Solution: Cache the most recent liveliness messages and implement
          durable replay for the seure version of the writer.

Fri Sep 04 03:36:43 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c9c051abbba45034efed943194c55fec5959ecc4

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:

          Incorrect flags for Participant Message Data Writer

          Methods using the Participant Message Data Writer (participant
          liveliness) were using the wrong flag to see if it was enabled.
          If
          the writers were not enabled, the incorrect flag was not set
          which
          cause the writer to not be associated with a remote reader.
          Consequently, the reader would send acknacks that were never
          answered.

          Solution: Use the correct flag to check if the Participant
          Message
          Data Writer is enabled. Update the not enabled writers setting to
          more
          accurately match the desired use case of a participant that does
          not
          write about publications, subscriptions, or liveliness.

Fri Sep 04 03:06:24 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 7f0df683dc2e291c04ae4d5c9879fdd6106fa03c

        * tests/DCPS/DelayedDurable/rtps_disc.ini:

          DeleyedDurable: remove max_message_size

Fri Sep 04 02:48:23 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 8e95127f43707cfc677f5904fd774ab4a3c8562d

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          TransportSendStrategy: Generic space_available

Thu Sep 03 22:28:56 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 645fc5378265c1cbe46bd56f13349e017074bf8f

        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/TransportCustomizedElement.cpp:
        * dds/DCPS/transport/framework/TransportCustomizedElement.h:
        * dds/DCPS/transport/framework/TransportCustomizedElement.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.h:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.inl:

          Set TransportCustomizedElement Common Fragment Properties

Thu Sep 03 21:57:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f52ced8360531ac9346427a133a45cca29a5da55

          Merge pull request #1867 from jrw972/no-relay-dups

          Eliminate duplicate messages when only using the RtpsRelay

Thu Sep 03 21:56:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a1f1afae16f1eeb1fd34c75a554421d834e68548

          Merge pull request #1869 from mitza-oci/gcc4

          apply GCC 5.2 workaround to GCC 4 as well

Thu Sep 03 20:25:33 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit e597f463ed7a9dd25eee90d2936505b4f29dff6f

        * dds/DCPS/DataReaderImpl_T.h:
        * tests/DCPS/SkipSerialize/pub_ipv6.ini:
        * tests/DCPS/SkipSerialize/rtps.ini:
        * tests/DCPS/SkipSerialize/run_corbaloc_test.pl:
        * tests/DCPS/SkipSerialize/run_ns_test.pl:
        * tests/DCPS/SkipSerialize/sub_ipv6.ini:

          remove unused files and remove overuse of static_cast

Thu Sep 03 15:26:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c5077e9576c648c57a94e21e7936ddf93d66929b

        * dds/DCPS/RTPS/RtpsDiscovery.h:

          rename macro

Wed Sep 02 21:01:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 69c95039098775431599a5cc7a10c4fe9e5aaf61

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:

          Eliminate duplicate messages when only using the RtpsRelay

Thu Sep 03 13:56:12 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 28858766da57f9c672414c0d55995a2b05748383

          Merge pull request #1866 from
          simpsont-oci/update_bench_for_disco_wait

          Updating Bench To Use Discovery Wait Flag, Fix Failing Tests

Thu Sep 03 02:38:56 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit aa6a985ab470fd183705aba70017a207eacf570e

        * dds/DCPS/Observer.h:
        * tests/DCPS/Observer/.gitignore:
        * tests/DCPS/Observer/DataReaderListenerImpl.cpp:
        * tests/DCPS/Observer/DataReaderListenerImpl.h:
        * tests/DCPS/Observer/Domain.cpp:
        * tests/DCPS/Observer/Domain.h:
        * tests/DCPS/Observer/Observer.mpc:
        * tests/DCPS/Observer/TestObserver.cpp:
        * tests/DCPS/Observer/TestObserver.h:
        * tests/DCPS/Observer/publisher.cpp:
        * tests/DCPS/Observer/rtps_disc.ini:
        * tests/DCPS/Observer/run_test.pl:
        * tests/DCPS/Observer/subscriber.cpp:

          Observer test

Thu Sep 03 01:57:45 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8fbcc7dd6122c9924e9cf7d4ba535c6fe7215b88

        * performance-tests/bench_2/example/config/scenario/ci_mixed.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_daemon.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_master.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_worker.json:

          cutting down number of nodes for test vms

Wed Sep 02 21:53:48 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a60e588beb95569f5d52d77ac7ba6cb3fff1349e

        * dds/DCPS/RTPS/RtpsDiscovery.h:

          apply GCC 5.2 workaround to GCC 4 as well

Wed Sep 02 19:35:59 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 4951452f1c98403598fbb6ff732be25329b41b42

        * dds/DCPS/DataReaderImpl_T.h:

          return from demarshal after failed from_message_block

Wed Sep 02 16:33:17 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 6913400e9e1dd8b0e9a0f4e6feb3545721499c60

        * tests/DCPS/SkipSerialize/SkipSerialize.idl:

          Update tests/DCPS/SkipSerialize/SkipSerialize.idl

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:23:53 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit bd67fe94af44f7591af53e8f6c20fd35415e9fa0

        * dds/DCPS/DataWriterImpl_T.h:

          Update dds/DCPS/DataWriterImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:23:33 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 3913b11e40e20a58107a060aaffcef29318ab17b

        * dds/DCPS/DataWriterImpl_T.h:

          Update dds/DCPS/DataWriterImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:22:47 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit a333111feac8b6482d1c5a2f31b3005f3e659498

        * dds/DCPS/DataWriterImpl_T.h:

          Update dds/DCPS/DataWriterImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:22:29 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 6eabbcff69b82f2aa42bc6e72ddcd6c6b5d12ce1

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:22:16 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit ba249eda14a76a0017e30cee1b7c468ed127dc9f

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:22:05 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 1a3bab3f66e2465704dca29bd462efee7b7f55a3

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:20:58 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 48eecda028e3fbb77b63c6aeeb4118f510560493

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Sep 02 16:13:04 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit c515cd6bb5a0d6cbc32a96344d167f2c9996e23c

        * tests/DCPS/SkipSerialize/governance.xml:
        * tests/DCPS/SkipSerialize/governance_signed.p7s:
        * tests/DCPS/SkipSerialize/permissions_1.xml:
        * tests/DCPS/SkipSerialize/permissions_1_signed.p7s:
        * tests/DCPS/SkipSerialize/permissions_2.xml:
        * tests/DCPS/SkipSerialize/permissions_2_signed.p7s:
        * tests/DCPS/SkipSerialize/publisher.cpp:
        * tests/DCPS/SkipSerialize/subscriber.cpp:

          drop security for this test

Wed Sep 02 16:06:55 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 335b50f3a59a663bc3dcbc691c0d2c568e45d024

        * tests/DCPS/SkipSerialize/pub.ini:
        * tests/DCPS/SkipSerialize/pub_multicast.ini:
        * tests/DCPS/SkipSerialize/pub_udp.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_sec.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_tcp.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_tcp_udp.ini:
        * tests/DCPS/SkipSerialize/rtps_uni.ini:
        * tests/DCPS/SkipSerialize/run_test.pl:
        * tests/DCPS/SkipSerialize/shmem.ini:
        * tests/DCPS/SkipSerialize/sub.ini:
        * tests/DCPS/SkipSerialize/sub_multicast.ini:
        * tests/DCPS/SkipSerialize/sub_udp.ini:

          reduce tests to what's necessary

Wed Sep 02 15:41:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 1478213fe789f74f1ee6fdf73a79fa3819e94515

        * performance-tests/bench_2/worker/main.cpp:

          removing old debug code

Wed Sep 02 15:36:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit fc983c7d3a8acc20331086597564fa9e561b299b

        * bin/dcps_tests.lst:
        * performance-tests/bench_2/example/config/scenario/ci_mixed.json:
        * performance-tests/bench_2/example/config/worker/ci_disco.json:
        * performance-tests/bench_2/example/config/worker/ci_disco_flag.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_client.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_client_frag.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_server.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_client.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_client_frag.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_server.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_daemon.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_master.json:
        * performance-tests/bench_2/example/config/worker/ci_mixed_worker.json:
        * performance-tests/bench_2/run_test.pl:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          Updating bench to value-initialize json-parsed objects before
          parsing, updating bench CI configs to use discovery wait flag

Wed Sep 02 15:24:03 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 1eea916852f2324199e9e858e692e98170342ac2

        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl_T.h:

          address style issues and add new tests to auto tests

Tue Sep 01 22:12:24 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit e7bf3e402a7792d80a3bd146d399e68bb67386fc

        * dds/DCPS/DataWriterImpl_T.h:
        * dds/idl/marshal_generator.cpp:

          fixes from code review

Tue Sep 01 20:17:09 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit fd866d2b9dd176d6982b01d2b46a536ebb6703ba

        * dds/DCPS/SequenceNumber.cpp:
        * dds/DCPS/SequenceNumber.h:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:

          Detect if Fragmentation Failed

Tue Sep 01 15:05:46 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit ac3ee6761a886c3fc62beb2eb21b6ffc26e26a7e

        * dds/DCPS/DataWriterImpl_T.h:

          Update dds/DCPS/DataWriterImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 15:00:58 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 7610097012c5271701bd232288b67c36992eae5c

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:49:22 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 9f05bd4e2b993c996a23b69aeeff00f185a2d195

        * dds/idl/marshal_generator.cpp:

          Update dds/idl/marshal_generator.cpp

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:49:12 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 197d91b8b2e5ea60d64a43512b574a17b7d27744

        * dds/DCPS/DataWriterImpl_T.h:

          Update dds/DCPS/DataWriterImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:48:33 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 3be96b344607e6f9b7feba79325666a430905cd1

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:48:22 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit b49510a93189907c88306008d7a2246db98dca72

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:47:54 UTC 2020  Jeremy Adams  <57412896+adamsj-oci@users.noreply.github.com>
        commit 9a6af0356d172a2535985cd29dc39ec0ff0f2f26

        * dds/DCPS/DataReaderImpl_T.h:

          Update dds/DCPS/DataReaderImpl_T.h

          Co-authored-by: Fred Hornsey <fred@hornsey.us>

Tue Sep 01 14:47:05 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit d1c142349ba665efb9d659e4fab1df8e6c2653b8

        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:

          missed :

Tue Sep 01 13:40:18 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit c11553adf94de3325229bdc817cdc904981d10e0

          Merge pull request #1836 from jonesc-oci/domain_ranges

          Add support for multiple participants per domain.

Tue Sep 01 12:36:43 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 9403ea647d7e5f08fff38bf9110978d3df2348d5

          Merge pull request #1857 from wilsongOCI/task_4110

          Implement Wait-for-Discovery-Complete for Bench Worker

Tue Sep 01 12:36:03 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit faf2d94153ee88f50d99027b96eef0ce08e7dd5c

          Merge pull request #1852 from mitza-oci/gcc52

          Work around a bug on GCC 5.2

Mon Aug 31 21:39:28 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 7e9787868a9251921051856aed4d9252391f2da4

        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:
        * tests/DCPS/SkipSerialize/DataReaderListener.h:

          cleanup for unused vars

Mon Aug 31 21:34:17 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit b0a6cf5e0b322147aff5ba768aac795095905aff

        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:
        * tests/DCPS/SkipSerialize/run_test.pl:

          check length and valid data

Mon Aug 31 21:10:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d20d6c542dcd3fcaaafcbcef7731b4a3361da579

        * bin/dcps_tests.lst:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsCustomizedElement.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * tests/DCPS/DelayedDurable/DelayedDurable.cpp:
        * tests/DCPS/DelayedDurable/DelayedDurable.idl:
        * tests/DCPS/DelayedDurable/rtps_disc.ini:
        * tests/DCPS/DelayedDurable/run_test.pl:

          RtpsUdpDataLink::durability_resend Frag Attempt

Mon Aug 31 16:39:30 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 7d71c9edd7c2b278c0a69ccce84637372618a21d

        * tests/DCPS/SkipSerialize/Writer.cpp:
        * tests/DCPS/SkipSerialize/publisher.cpp:
        * tests/DCPS/SkipSerialize/subscriber.cpp:

          using skip serialize

Mon Aug 31 16:09:09 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit 0ef2b3d4101df8acd6f9cecaf40e9a55e29398fb

        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/main.cpp:

          Added conditional variable includes for linux build

Mon Aug 31 15:20:07 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit a97d22968e320de4e64d9b5a52387415a650ca79

        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:
        * tests/DCPS/SkipSerialize/SkipSerialize.idl:
        * tests/DCPS/SkipSerialize/Writer.cpp:

          passing test with just octet sequence in IDL

Mon Aug 31 13:46:43 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 379d13780bd27c552026e46e041af2ad5259cb62

        * tests/DCPS/DomainRange/DataReaderListenerImpl.h:

          Fix for safety profile build.

Sun Aug 30 17:02:48 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 02b2e0dc05e482061ac7833ba795e3ba08981f53

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Replace std::string and std::vector

Sat Aug 29 05:50:18 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 8ae324207654200685cbd12f673f4a1fc9eb16ed

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Observer.cpp:
        * dds/DCPS/Observer.h:

          monitoring points group 3

Fri Aug 28 21:25:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a345909ff0c389d2d3ca72b0bc5aed07f4c576d5

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Modify add_domain_id_to_port logic.

Fri Aug 28 18:02:39 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 583784af45551642f7c3d0bfed78a21497dd2662

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/run_test.pl:

          Test support for N participants per domain (1 DW and N-1 DRs)

Fri Aug 28 15:40:35 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5231488e08eb5f7c06103e3a56270adf7dad642d

        * tests/DCPS/DomainRange/run_test.pl:

          Update test to use 2 participants for domains and domain ranges.

Fri Aug 28 15:22:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit bb65b48a5eca1b596e81b18aa3949bf4043daab7

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Template support for domains not belonging to a domain range.

Fri Aug 28 15:19:52 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit bfa3fe6e90bf437c2c706cb1f3ed8f0e9dc43f34

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Check for transport template. Use ACE_ERROR_RETURN.

Fri Aug 28 11:09:41 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit b46a7511fd9226eb9bf2a08787b07043b705b36b

        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/main.cpp:

          Updated per peer review

Thu Aug 27 12:03:52 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 273f753a02dd9c02c7df9d5e8374fb4f283bc960

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Transport customization changes.

Thu Aug 27 00:08:41 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4a5702dd695e5747cbf970b0fbb543231f3ae855

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Template support for perDomainDefaultTportConfig.

Wed Aug 26 21:05:31 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 79333cfdd446bddea6b2c58ebd45afcad19259e5

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          monitoring points group 2

Wed Aug 26 16:53:58 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit 8270ba82b9b1198e51d7c2b68053d46fb3c0efc2

        * performance-tests/bench_2/worker/main.cpp:

          Removed spaces from empty line

Wed Aug 26 16:47:57 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit c8ec12ff1ee35b76cf1c52f64a9ca7f9079e037b

        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:

          Removed spaces on lines 25 and 38

Wed Aug 26 04:24:41 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 354de73f85a082ad3c0b9efcb1d502e34aebb36b

          Merge pull request #1856 from
          simpsont-oci/fix_bench_statistics_typo

          Fix Bench 2 Statistics Output Typo

Tue Aug 25 23:42:25 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit b4536b0555af2c7e6fac0c4bb6e3a5d662238856

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/Observer.h:

          monitoring points group 1

Tue Aug 25 21:17:43 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ec5a0cad2ec65d9f55bbe57a7d7850b7ace7fb48

        * performance-tests/bench_2/common/PropertyStatBlock.cpp:

          fix bench statitics/statistics typo

Tue Aug 25 00:11:09 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 530f062181bdb9f4020de83d82d69fb160a05d57

        * dds/DCPS/Observer.h:

          Observer interface and registration

Tue Aug 25 00:02:43 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 33a3c1dfd1f09042a43ed614e02f8138b4a7dc6e

        * dds/DCPS/EntityImpl.cpp:

          Observer interface and registration

Mon Aug 24 22:58:52 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 66fc191a90c086a3e50d2d32d612694c13aa3d6e

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Allow Fragmentation in RTPS Durability Resends

          Fixes issue with durable samples bigger than the max UDP message
          size
          failing because they were not being fragmented.

          Also correct error logs in RtpsUdpTransport.cpp.

Mon Aug 24 20:38:32 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit aeace5d434ef95647b8236111d9324dac43f195e

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Check for per_participant rule before creating new transport
          instance.

Mon Aug 24 20:37:53 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c138e79e202cf4a818080112f444523b13f15798

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Change method name

Mon Aug 24 19:55:48 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit e6c9951c1fac196ff56a1d41dc7d41b3f87e1ecb

        * performance-tests/bench_2/example/config/scenario/ci_disco_flag.json:
        * performance-tests/bench_2/example/config/worker/ci_disco_flag.json:

          Added Task 4110 Example Files

Mon Aug 24 16:22:57 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 175876b9c83e7031a4a07e291a8bf84f5e5eab40

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/run_test.pl:

          Test and global_transport_name logic changes.

Mon Aug 24 15:04:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit febc324c90bbc6d6f92bb4be1977074447dad911

        * dds/DCPS/RTPS/RtpsDiscovery.h:

          Work around a bug on GCC 5.2

          Optimized version of the function didn't write all bytes of the
          return value

Mon Aug 24 14:49:40 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit 299e770a816704639664e44574c2b988ea255a47

        * performance-tests/bench_2/idl/Bench.idl:

          Updated indent

Mon Aug 24 13:49:00 UTC 2020  wilsongOCI  <wilsong@objectcomputing.com>
        commit 67a27f8e73cb0c424f00f5decb6805405c99bf43

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.h:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/main.cpp:

          Task 4110 Beta

Fri Aug 21 22:41:21 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit aab32e1526792a19d1e80e093187c4c56fcd15e2

        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/Observer.h:

          initial Observer interface and registration

Fri Aug 21 21:15:08 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 13b87a7ac6e7fc4fb79cb9b208263c1458d28963

          Merge branch 'marshal-traits' into marshal_traits_master

Fri Aug 21 21:14:21 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 2e928da76a1064b0f650094d8f9ff28f087aeb91

        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:
        * tests/DCPS/SkipSerialize/SkipSerialize.idl:
        * tests/DCPS/SkipSerialize/Writer.cpp:

          update IDL type similar to octet sequence for test

Fri Aug 21 16:20:21 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c9b8469ee8022ca581573f863fc12f8e142ca4b5

          Merge pull request #1847 from simpsont-oci/bench_median_stats_fix

          Bench Stats Calcuation Bug Fix For Median & MAD Stats

Fri Aug 21 16:20:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 407faaa39bd30a797c7fcdef658e7de670f6ef33

          Merge pull request #1844 from mitza-oci/issue1826

          Additional validity check for submessage parsing

Fri Aug 21 16:19:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c393668c9b6a59663eb33c5e62f02bbbe7f64105

          Merge pull request #1843 from jwillemsen/patch-7

          Upgrade to ACE/TAO x.5.11

Thu Aug 20 23:22:42 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 5e7eeb2d278e40dd307837b67ad5b7e96fc09f38

        * tests/DCPS/SkipSerialize/SkipSerialize.mpc:
        * tests/DCPS/SkipSerialize/Writer.cpp:
        * tests/DCPS/SkipSerialize/stack_subscriber.cpp:

          beginning to remove items from Messenger than we won't need in
          this test

Thu Aug 20 22:15:28 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 30a681f7b124e804863c15a4ae5c6386de55dbf7

          Merge branch 'marshal-traits' into marshal_traits_master

Thu Aug 20 22:15:02 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 7629d15e788395f68a8574ba6803f74a3e61797e

        * tests/DCPS/SkipSerialize/.gitignore:
        * tests/DCPS/SkipSerialize/Args.h:
        * tests/DCPS/SkipSerialize/DataReaderListener.cpp:
        * tests/DCPS/SkipSerialize/DataReaderListener.h:
        * tests/DCPS/SkipSerialize/SkipSerialize.idl:
        * tests/DCPS/SkipSerialize/SkipSerialize.mpc:
        * tests/DCPS/SkipSerialize/SkipSerialize_export.h:
        * tests/DCPS/SkipSerialize/Writer.cpp:
        * tests/DCPS/SkipSerialize/Writer.h:
        * tests/DCPS/SkipSerialize/governance.xml:
        * tests/DCPS/SkipSerialize/governance_signed.p7s:
        * tests/DCPS/SkipSerialize/permissions_1.xml:
        * tests/DCPS/SkipSerialize/permissions_1_signed.p7s:
        * tests/DCPS/SkipSerialize/permissions_2.xml:
        * tests/DCPS/SkipSerialize/permissions_2_signed.p7s:
        * tests/DCPS/SkipSerialize/pub.ini:
        * tests/DCPS/SkipSerialize/pub_ipv6.ini:
        * tests/DCPS/SkipSerialize/pub_multicast.ini:
        * tests/DCPS/SkipSerialize/pub_udp.ini:
        * tests/DCPS/SkipSerialize/publisher.cpp:
        * tests/DCPS/SkipSerialize/rtps.ini:
        * tests/DCPS/SkipSerialize/rtps_disc.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_sec.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_tcp.ini:
        * tests/DCPS/SkipSerialize/rtps_disc_tcp_udp.ini:
        * tests/DCPS/SkipSerialize/rtps_uni.ini:
        * tests/DCPS/SkipSerialize/run_corbaloc_test.pl:
        * tests/DCPS/SkipSerialize/run_ns_test.pl:
        * tests/DCPS/SkipSerialize/run_test.pl:
        * tests/DCPS/SkipSerialize/shmem.ini:
        * tests/DCPS/SkipSerialize/stack_subscriber.cpp:
        * tests/DCPS/SkipSerialize/sub.ini:
        * tests/DCPS/SkipSerialize/sub_ipv6.ini:
        * tests/DCPS/SkipSerialize/sub_multicast.ini:
        * tests/DCPS/SkipSerialize/sub_udp.ini:
        * tests/DCPS/SkipSerialize/subscriber.cpp:

          SkipSerialize test started from Messenger test

Thu Aug 20 13:47:25 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 72b69f7999266655a7b166a6fb289e98574a7caa

        * performance-tests/bench_2/common/PropertyStatBlock.cpp:

          Update performance-tests/bench_2/common/PropertyStatBlock.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Thu Aug 20 05:11:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 38bad27d5ac49a1fd1253fddcc99509abee8c55f

        * performance-tests/bench_2/test_controller/main.cpp:

          error output formatting

Thu Aug 20 05:11:11 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cc081b9e2d39167ae362c65b0eda62e96b09cedc

        * performance-tests/bench_2/common/PropertyStatBlock.cpp:

          bug fixes for median / MAD stats calculation

Thu Aug 20 00:56:04 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4e0ad2d918f16cb927d16539b9910e057eb55251

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Rework create_transport_instance logic

Tue Aug 18 15:33:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6d6013e45cf3ac075ffa19dccc35682806f54ce0

        * dds/DCPS/transport/rtps_udp/RtpsSampleHeader.cpp:

          Additional validity check for submessage parsing

Mon Aug 17 20:58:34 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 6bfb5cb500adf23ad549f64736051ec0ce84dac4

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Use ACE_TString to fix wchar builds.

Mon Aug 17 08:09:46 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 6e54d23bb180d572394fa24f60d3816bdcc5149b

        * configure:

          Upgrade to ACE/TAO x.5.11

Fri Aug 14 16:54:19 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f8769c7f426d87ed15ac3a93d8ff8c2178caf01e

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          WCHAR build issue.

Thu Aug 13 22:46:42 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit c764f7b84cd3b5d1c533778eba00e31db3d203d3

          Merge branch 'marshal-traits' into marshal_traits_master

Thu Aug 13 22:35:30 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit f724d1a94ed8ffb28852755b9b24c8e14b791e24

        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataWriterImpl_T.h:

          cleaned up comments

Thu Aug 13 21:26:35 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b9151d5af9b199fc827c22c680b5e6e4afe960b4

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Incorporate review comments.

Thu Aug 13 18:24:43 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 56a0a0ca7eedcd73af96db114e64f12deffbde07

          Merge branch 'marshal-traits' into marshal_traits_master

Thu Aug 13 18:24:27 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit adb93715676a4703f845ea2f88626c0659b70611

          Merge remote-tracking branch 'adamsj-oci/master' into
          marshal_traits_master

Thu Aug 13 18:23:40 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 4fcfc25599be91404f5a896457de13a4a7da1f5c

        * dds/DCPS/DataReaderImpl_T.h:

          forgot store_instance_data

Wed Aug 12 19:20:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 2747e15c03fae3715c35e958f0e4e172224a5d37

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/config.ini:
        * tests/DCPS/DomainRange/run_test.pl:

          Add support for multiple participants per domain.

Tue Aug 11 21:44:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 245a2f6668cfefd09a50beb8d42bbcd861d6d52d

          Merge pull request #1833 from jrw972/rtps-relay-port-change

          Accomodate changes in ports for RtpsRelay clients, improve
          logging

Tue Aug 11 15:56:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d493f782483851d8e7eae979a5c8ee6b901dd17f

        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/SubscriptionListener.cpp:

          Accomodate changes in ports for RtpsRelay clients, improve
          logging

Mon Aug 10 15:17:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2116065abecb8c18fe24fd60147038c9b74e2b03

          Merge pull request #1831 from iguessthislldo/igtd/pending-timeout

          Improve Efficiency of Waiting on Pending Writes

Fri Aug 07 22:01:11 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 09817ecad998d706e8894cff82ac2337f9d82959

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:

          Apply suggestions from code review

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Fri Aug 07 20:59:11 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 5640dd3f0713a20aba170a5844ff0b13ae6116cd

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/MessageTracker.cpp:
        * dds/DCPS/MessageTracker.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/SendResponseListener.cpp:

          Improve Efficiency of Waiting on Pending Writes

          If multiple DataWriters are being deleted in a DomainParticipant
          or
          Publisher, use PendingTimeout for a single deadline to finish
          pending
          data and control writes for all the writers, instead of waiting
          for at
          least 2 separate data and control deadlines for every single
          writer.
          Also start instance unregisters for all writers before setting
          and
          waiting on the deadline.

          These changes should dramatically reduce the amount of time
          `Publisher::delete_contained_entities` and
          `DomainParticipant::delete_contained_entities` block for multiple
          writers, especially when there are a large amount of them.

Thu Aug 06 17:57:05 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 621e35e539e16438d165a10158c23dc6f1867de2

          Merge branch 'master' into marshal_traits_master

Thu Aug 06 17:32:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 54cc9d5bba0e1f0306ed3f14f4f651e25596cea2

          Merge pull request #1830 from mitza-oci/doxygen

          Updated Doxygen config to include OPENDDS_SECURITY

Thu Aug 06 17:02:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 880bb9b9e1b25a418c6a5bb298e55f57789008a9

          Merge pull request #1825 from mitza-oci/master

          Removed some unused tests

Thu Aug 06 16:56:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 40c21062fab6d6db288e83aa85fee8404e9e3c52

        * etc/dds.doxygen:

          Updated Doxygen config to include OPENDDS_SECURITY

Tue Aug 04 23:24:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a2b804fe5a74529b70b4b0e721e4d6944c341b04

        * tests/DCPS/BidirMessenger/.gitignore:
        * tests/DCPS/BidirMessenger/BidirMessenger.mpc:
        * tests/DCPS/BidirMessenger/BidirMessenger_export.h:
        * tests/DCPS/BidirMessenger/DataReaderListener.cpp:
        * tests/DCPS/BidirMessenger/DataReaderListener.h:
        * tests/DCPS/BidirMessenger/Messenger.idl:
        * tests/DCPS/BidirMessenger/Writer.cpp:
        * tests/DCPS/BidirMessenger/Writer.h:
        * tests/DCPS/BidirMessenger/pub_udp.ini:
        * tests/DCPS/BidirMessenger/pubsub.cpp:
        * tests/DCPS/BidirMessenger/pubsub.ini:
        * tests/DCPS/BidirMessenger/pubsub_ipv6.ini:
        * tests/DCPS/BidirMessenger/pubsub_multicast.ini:
        * tests/DCPS/BidirMessenger/run_test.pl:
        * tests/DCPS/BidirMessenger/sub_udp.ini:
        * tests/DCPS/Footprint/.gitignore:
        * tests/DCPS/Footprint/Args.h:
        * tests/DCPS/Footprint/DataReaderListener.cpp:
        * tests/DCPS/Footprint/DataReaderListener.h:
        * tests/DCPS/Footprint/Footprint.mpc:
        * tests/DCPS/Footprint/Writer.cpp:
        * tests/DCPS/Footprint/Writer.h:
        * tests/DCPS/Footprint/pub.ini:
        * tests/DCPS/Footprint/rtps.ini:
        * tests/DCPS/Footprint/rtpspublisher.cpp:
        * tests/DCPS/Footprint/rtpssubscriber.cpp:
        * tests/DCPS/Footprint/run_test.pl:
        * tests/DCPS/Footprint/sub.ini:
        * tests/DCPS/Footprint/tcppublisher.cpp:
        * tests/DCPS/Footprint/tcpsubscriber.cpp:
        * tests/DCPS/PubScalability/.gitignore:
        * tests/DCPS/PubScalability/DataReaderListener.cpp:
        * tests/DCPS/PubScalability/DataReaderListener.h:
        * tests/DCPS/PubScalability/InstanceDataMap.cpp:
        * tests/DCPS/PubScalability/InstanceDataMap.h:
        * tests/DCPS/PubScalability/PubDriver.cpp:
        * tests/DCPS/PubScalability/PubDriver.h:
        * tests/DCPS/PubScalability/PubScalability.mpc:
        * tests/DCPS/PubScalability/README:
        * tests/DCPS/PubScalability/SampleType.idl:
        * tests/DCPS/PubScalability/SubDriver.cpp:
        * tests/DCPS/PubScalability/SubDriver.h:
        * tests/DCPS/PubScalability/TestException.h:
        * tests/DCPS/PubScalability/Writer.cpp:
        * tests/DCPS/PubScalability/Writer.h:
        * tests/DCPS/PubScalability/pub_main.cpp:
        * tests/DCPS/PubScalability/run_test.pl:
        * tests/DCPS/PubScalability/sampletypelib_export.h:
        * tests/DCPS/PubScalability/sub_main.cpp:
        * tests/DCPS/SimpleFooTest/.gitignore:
        * tests/DCPS/SimpleFooTest/README:
        * tests/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:

          Removed some unused tests

Tue Aug 04 23:24:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1332fdc84e6d758be5ffcd2dd3077ebeacc82068

          Merge pull request #1823 from mitza-oci/master

          Travis CI: updated macOS config and use of 'travis_wait'

Tue Aug 04 23:23:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 66ec4e76367f8d86ab8e283542dc3b6111890047

          Merge pull request #1822 from
          jrw972/remove-discovered-participant-deadlock

          remove_discovered_participant doesn't unlock before calling BITS

Tue Aug 04 22:51:41 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 9edbb60a452acd47d329b491f18ab4c1ae552002

        * dds/DCPS/DataReaderImpl_T.h:

          add accessors for marshal_skip_serialize_

Tue Aug 04 22:49:06 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit 57604edc0d7df73f806bc67d85d20a73aafdb410

        * dds/DCPS/DataWriterImpl_T.h:

          skip serialize in dds_marshalling

Tue Aug 04 19:19:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d63dfd263579d716c3a56724ab377fc778133e55

        * .travis.yml:

          Travis CI: updated macOS config and use of 'travis_wait'

Tue Aug 04 18:49:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3688cf9d2779b0a4c9bf0256ed23a763f6eaaf0c

        * dds/DCPS/DiscoveryBase.h:

          remove_discovered_participant doesn't unlock before calling BITS

          A reverse lock was added but the guard to use it was not added.

          Solution

          Add the guard.

Tue Aug 04 12:29:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 15a44f6a72e4007c2e2d2aae844e3345a39eb9f5

          Merge pull request #1821 from jrw972/ice-connect-deadlock

          Deadlock from ice_connect

Tue Aug 04 01:24:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 92f88f7518e62dc6b104e78f526f3820642cc6e3

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          From review

Mon Aug 03 20:35:08 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cc9e0e6e859ae4df872678ed5d8892ed1a1c1377

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Deadlock from ice_connect

          Sedp::data_received acquires the SPDP lock and may acquire the
          ICE
          AgentImpl lock if it decides to send. A successful ICE session
          will
          have the ICE AgentImpl lock and needed to acquire the SPDP lock.

          Solution

          Break the deadlock by deferring ice_connect and ice_disconnect in
          SPDP.

Fri Jul 31 20:10:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1ff7027c81e08f548afb2f8cd3beced8eabc6846

          Merge pull request #1819 from lij-oci/anonymous2

          Added missing #include for opendds_idl

Fri Jul 31 17:34:26 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 6b2f72a3a5b5d591a82f36bd710290a8736ea842

        * dds/idl/metaclass_generator.cpp:

          #include

Thu Jul 30 18:04:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a748126c96751beedcc78e0d851734ca1ea1c523

          Merge pull request #1754 from lij-oci/anonymous

          IDL4 anonymous types

Thu Jul 30 04:18:44 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 6e5ad46c608c4693b6afcc6b9c5d895490680120

        * tests/DCPS/Compiler/anonymous_types/test.idl:

          test.idl

Thu Jul 30 00:25:02 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit bc99bf1db90ef3c979b120e1b204e7d26e3ef0ad

        * dds/idl/field_info.cpp:
        * dds/idl/metaclass_generator.cpp:

          code review changes

Wed Jul 29 22:10:23 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5dc6654eaebe59d7ffc05f53bfb7fe844e5a3df4

        * azure-pipelines.yml:
        * dds/idl/field_info.cpp:
        * dds/idl/langmap_generator.cpp:

          langmap_generator

Wed Jul 29 21:51:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bd252ab0def90f63922d0437b2e804a280d7717e

          Merge pull request #1811 from
          simpsont-oci/prevent_transportclient_schedulecommand_invalid_access

          Prevent invalid access in
          TransportClient::PendingAssocTimer::ScheduleCommand during
          shutdown

Wed Jul 29 18:14:10 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c32da1a02188e91d18fc3fe58b08dd4c07b75dbe

        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/framework/TransportClient.h:

          Prevent invalid access in
          TransportClient::PendingAssocTimer::ScheduleCommand During
          Shutdown

Wed Jul 29 03:26:26 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 8cadb02e391c3e723eabc66a26e040acf8150f44

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/langmap_generator.cpp:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:

          FieldInfo

Tue Jul 28 21:16:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dbc40cf156c31f45ef414f0ae7a0b77b739ebfee

          Merge pull request #1809 from
          simpsont-oci/prevent_memory_leak_sedp_task_queue

          Fix Potential Memory Leak During Shutdown of SEDP Task Queue

Tue Jul 28 12:20:24 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 275ff44e4a6c1810bbf99312c95991c92d395943

        * dds/DCPS/RTPS/Sedp.cpp:

          use local shutdown flag, drain sedp task queue upon stop msg to
          prevent leaking allocated msg objects

Tue Jul 28 00:55:35 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 96cf0473be8116dd8a8693c840398655afa26919

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/langmap_generator.cpp:
        * dds/idl/metaclass_generator.cpp:

          code review changes

Mon Jul 27 14:56:14 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit ecfcb7a46665eba6041616f11d83d5c1b4b41a2a

        * dds/DCPS/DataReaderImpl_T.h:

          skip serialize in dds_marshal for special cases

Sun Jul 26 12:45:07 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit d2eb16718881be1061efae95f6cbd6e9cc2e6b90

          Merge pull request #1803 from
          simpsont-oci/fix_windows_bench_coordination

          Fix Windows Bench Scoreboard Failures

Sat Jul 25 21:52:00 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f9fa9b99c207c298d6f78c5ca17eef8cf0cf6abd

        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          using steady_clock, avoiding waits less than 100 ms

Fri Jul 24 22:29:09 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 0117e5dfdbaa4a7cf877b9d45785378864edee9f

        * dds/idl/field_info.cpp:
        * dds/idl/langmap_generator.cpp:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/classic/anonymous_types_classic.mpc:
        * tests/DCPS/Compiler/anonymous_types/cpp11/anonymous_types_cpp11.mpc:

          code review changes

Fri Jul 24 20:25:04 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7bbb5b768326e881ec8ebb9cdfefa14f8908a263

        * performance-tests/bench_2/node_controller/main.cpp:

          same fix for nodecontroller's launch_time

Fri Jul 24 17:50:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e6077ec04c13208c7f45916aefc3602f9e7e06ba

          Merge pull request #1807 from mitza-oci/master

          Run_Test.pm updates:

Fri Jul 24 17:50:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit acdb40ef344021760af1e8d1309fa032b612aef9

          Merge pull request #1806 from iguessthislldo/igtd/pending-timeout

          Service_Participant: Setter for Pending Timeout

Fri Jul 24 16:43:11 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 144fa81e255befb92f6ff2fe500fbac5f31713fd

        * performance-tests/bench_2/worker/main.cpp:

          minor debug output fix

Fri Jul 24 16:11:03 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 475b1b54137cf10348e22a14cba7e0b99fa6aa34

        * performance-tests/bench_2/worker/main.cpp:

          consolidate wait logic, use durations / sleep_for over absolute
          times (which may be in the past)

Fri Jul 24 14:14:56 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 9a8c85ec47d9c5e909efee1a6e7c2262b1afccec

        * tests/DCPS/Compiler/anonymous_types/test.idl:

          include ShortSeq

Fri Jul 24 13:44:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1fd46d8486cd7ad5f8cd081e10a00960d277fd1c

        * bin/PerlDDS/Run_Test.pm:

          Run_Test.pl updates:

          - don't default to enabling all security debug flags
          - provide a way to skip dumping out full log files

Fri Jul 24 05:09:18 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 86bc09eda28cfc8cacd2703e7c86cc520a5ea413

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Service_Participant: Setter for Pending Timeout

Fri Jul 24 04:22:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f7528d76ecae82527e8f118255ed8d6e4e8f7a21

        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          speed up node controller report writing, fix wait-for-past-time
          issue

Thu Jul 23 16:12:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bc56fedc817e6ba9e47a2346dcfee1746d3d0f82

          Merge pull request #1804 from jonesc-oci/domain_ranges

          Disable DomainRange test in safety profile builds.

Thu Jul 23 16:11:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 332d38caf549c51a7f8c54c42056afee8bbdd01a

          Merge pull request #1800 from
          iguessthislldo/igtd/security_fragmenation

          Fix Data Fragmentation and Bundled Submessages in Security

Thu Jul 23 16:01:22 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c64970c5ec8ec726e1dd0b1dd98b884f5a2cc117

        * dds/idl/marshal_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          multidimensional arrays

Thu Jul 23 14:19:38 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 966366cf14c2cf95a07a2787592300f345e7c4b6

        * bin/dcps_tests.lst:

          Disable DomainRange test in safety profile builds.

Thu Jul 23 01:45:48 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1eb9d6f8a247bb7d3ba4604ca403878c866b94fc

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:

          gen_anonymous_array

Wed Jul 22 23:10:22 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c945d10f5554eefa1931b765c56191ce746d020f

        * tests/DCPS/LargeSample/LargeSample.mpc:
        * tests/DCPS/LargeSample/common.cpp:
        * tests/DCPS/LargeSample/common.h:
        * tests/DCPS/LargeSample/permissions.xml:
        * tests/DCPS/LargeSample/permissions_signed.p7s:
        * tests/DCPS/LargeSample/publisher.cpp:
        * tests/DCPS/LargeSample/run_test.pl:
        * tests/DCPS/LargeSample/subscriber.cpp:

          LargeSample Test: Separate Security Identities

          Remove the previous single permissions file and use separate
          identities
          (and their corresponding generic permissions files) for each
          participant.

Wed Jul 22 22:58:28 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d5c0e4112e471c34674f0708d697cbace75642ac

        * tests/security/permissions/generate_generic_permissions.pl:
        * tests/security/permissions/permissions_test_participant_01.xml:
        * tests/security/permissions/permissions_test_participant_01_signed.p7s:
        * tests/security/permissions/permissions_test_participant_02.xml:
        * tests/security/permissions/permissions_test_participant_02_signed.p7s:
        * tests/security/permissions/permissions_test_participant_03.xml:
        * tests/security/permissions/permissions_test_participant_03_signed.p7s:
        * tests/security/permissions/permissions_test_participant_04.xml:
        * tests/security/permissions/permissions_test_participant_04_signed.p7s:

          Added Generic Permissions Files

          Added generic permissions with no domains specified or other
          restrictions based on what identities have been generated with
          the
          identity CA.

Wed Jul 22 22:56:16 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 52beddb2022b59db1480bdadcadfc23c6a295a37

        * tests/DCPS/LargeSample/rtps_disc_sec.ini:

          LargeSample Test: Higher max_bundle_size

          To account for possible INFO_DST being inserted.

Wed Jul 22 22:54:21 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit f4bfd2c29bd2c6eea6018212017ce54083231848

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * tests/DCPS/ManyToMany/DataReaderListener.h:

          Respond to Review of #1800

Wed Jul 22 15:00:26 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 79174820c10627cd31760b62787d6026c857b747

        * bin/dcps_tests.lst:

          adding mixed durable / reliable messaging during discovery test
          to bench_2 ci tests

Wed Jul 22 14:50:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 30654f52a13b2e9a45cbd1f007d615a87523f83a

        * performance-tests/bench_2/worker/main.cpp:

          use system_clock for waiting on times potentially propogated
          between processes

Wed Jul 22 02:58:16 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 900cf439ca15299171c2eba06b51017ac4e34179

        * tests/security/security_tests.lst:

          security_tests.lst: Add LargeSample Test

Wed Jul 22 02:54:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 11b1c1ffaab9726b8b435e12c7f409a7f32f8ca1

        * tests/DCPS/ManyToMany/DataReaderListener.cpp:
        * tests/DCPS/ManyToMany/DataReaderListener.h:
        * tests/DCPS/ManyToMany/Writer.cpp:
        * tests/DCPS/ManyToMany/publisher.cpp:

          Fix ManyToMany Test

          Caused by IDL changes to LargeSample test.

Wed Jul 22 02:45:49 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit fc07ae6616ac3ec61d16fb7748d8acdaad1342c4

        * dds/DCPS/RTPS/MessageTypes.h:
        * dds/DCPS/security/CryptoBuiltInImpl.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * tests/DCPS/LargeSample/governance.xml:
        * tests/DCPS/LargeSample/governance_signed.p7s:
        * tests/DCPS/LargeSample/rtps_disc_sec.ini:

          Attempt at Exact Worse Case Security Added Size

Tue Jul 21 23:22:13 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 064bea2806b66cd4330dd6c6b423dfa51eff6aa3

        * dds/idl/marshal_generator.cpp:

          findSizeAnonymous and streamAnonymous

Tue Jul 21 21:05:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit be6d9c53cb6f20e350bb9bbc1bef6799d7164076

          Merge pull request #1802 from jonesc-oci/domain_ranges

          Domain and Transport templates platforms support

Tue Jul 21 16:48:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dc3f810b8ec0cd942abab0c5e4dc825634ed1dcc

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:

          RtpsUdpReceiveStrategy: reassemble fragments from encoded
          submessages

Tue Jul 21 14:20:09 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b02e3eb2c3e468ecb199ba16ae96f6715eeb181a

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Uint16_t is not available on all platforms.

Tue Jul 21 05:14:06 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit b4cc0d4f06e343485816e1d5c6ab41fc865cc43a

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:

          Remove Comment, Fix Indent

Tue Jul 21 05:10:32 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit adf183acd33d8e819e5e8700294f35e98e81b497

        * tests/DCPS/LargeSample/governance.xml:
        * tests/DCPS/LargeSample/governance_signed.p7s:
        * tests/DCPS/LargeSample/rtps_disc_sec.ini:
        * tests/DCPS/LargeSample/run_test.pl:

          Tweaks to Large Sample Test

Mon Jul 20 21:39:23 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8cbe63322f48a328c0230a57d40ff0a6bf8c42f4

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/multicast/MulticastSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * dds/DCPS/transport/udp/UdpSendStrategy.h:

          Account for security overhead when bundling

Tue Jul 21 03:14:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2f262ed502f0a25d70315499c18edd739c023e2a

          Merge pull request #1764 from jonesc-oci/domain_ranges

          Support for dynamic configuration of domains and transports from
          .ini file templates

Tue Jul 21 03:14:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b352ec5e5509862fb275b467beba587b30a4fb06

          Merge pull request #1799 from jrw972/durability-nacks

          RTPS durability nacks gapped or answered from send buffer

Mon Jul 20 20:52:16 UTC 2020  Chip Jones  <51006990+jonesc-oci@users.noreply.github.com>
        commit cfb95e210d5426d00cea49765b720e475240514b

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Update dds/DCPS/transport/framework/TransportRegistry.cpp

          Co-authored-by: Timothy Simpson
          <32278075+simpsont-oci@users.noreply.github.com>

Mon Jul 20 17:50:21 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c4daef7c6882e1a1fcd5dbe9531d0639ca6afd41

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/multicast/MulticastSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * dds/DCPS/transport/udp/UdpSendStrategy.h:

          First Stab at Variable max_message_size

          To fix fragmentation issue with security.

Mon Jul 20 17:46:51 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 6253456dc399fa9c1c8dbd434bd23506190b5766

        * tests/DCPS/LargeSample/DataReaderListener.cpp:
        * tests/DCPS/LargeSample/DataReaderListener.h:
        * tests/DCPS/LargeSample/Messenger.idl:
        * tests/DCPS/LargeSample/README:
        * tests/DCPS/LargeSample/Writer.cpp:
        * tests/DCPS/LargeSample/Writer.h:
        * tests/DCPS/LargeSample/common.h:
        * tests/DCPS/LargeSample/governance.xml:
        * tests/DCPS/LargeSample/governance_signed.p7s:
        * tests/DCPS/LargeSample/permissions.xml:
        * tests/DCPS/LargeSample/permissions_signed.p7s:
        * tests/DCPS/LargeSample/publisher.cpp:
        * tests/DCPS/LargeSample/rtps_disc_sec.ini:
        * tests/DCPS/LargeSample/run_test.pl:
        * tests/DCPS/LargeSample/subscriber.cpp:

          Secure Large Sample Test and Make It More Flexable

Mon Jul 20 15:05:20 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f35afa232f56b5b496e79ee229c3041697846270

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          RTPS durability nacks gapped or answered from send buffer

          The first nack from a durable reader can result in a call to
          send_and_gather_nack_replies that uses data in the send buffer to
          process the nack or sends a gap instead.

          Solution: Only process the nack if the reader is not expecting
          durability data.

Sat Jul 18 23:55:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b4f2cf8d9e9f8ffb475e515773f550382a6e14d3

        * dds/idl/marshal_generator.cpp:

          opendds_idl: additional functions in MarshalTraits

Sat Jul 18 18:18:19 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 166fcdc22b32dd1a3041234b6de81718a6ef73d2

          Merge pull request #1798 from mitza-oci/master

          Minor cleanup

Sat Jul 18 18:18:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a61e2c83c64907e3eec9e19e3dd1524bdcd7dc60

          Merge pull request #1793 from
          simpsont-oci/fix_potential_leak_in_sedp_msg

          Fix potential leak in Sedp::Msg by checking for ownership

Sat Jul 18 18:17:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a554ca5006f5c3182c349b876a9810010061f82a

          Merge pull request #1792 from
          simpsont-oci/prefer_unicast_for_info_dst_submessages

          Prefer Unicast For INFO_DST Submessages

Sat Jul 18 18:17:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 32d0f6b9256949e61846489a6e13688c4690da48

          Merge pull request #1791 from
          simpsont-oci/skip_bad_rtps_transport_headers

          Allow skipping of packets with bad transport headers

Sat Jul 18 02:40:42 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 8b9d2d3c18745d313ccc65f1e00bbfbe44b38992

        * dds/idl/langmap_generator.cpp:

          gen_anonymous_type

Sat Jul 18 00:49:28 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit b9a78a37110835d764c0a3be266864886ac33242

        * tests/DCPS/Compiler/anonymous_types/test.idl:

          idl

Fri Jul 17 21:37:23 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit eddefe42c884d1330426dd33b4adb656d05183ba

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Update
          dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Fri Jul 17 21:19:25 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 25cdf88d67599e3ffb8ba8e6956891446a3a1ea9

        * dds/idl/langmap_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          string

Fri Jul 17 21:12:42 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6563ec8d8c39de55e95da413930ac9310d5a0ba9

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          TransportReceiveStrategy_T: remove duplicated assignment

Fri Jul 17 21:12:21 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 917a2791d5f2923192260546d804583e2c000660

        * dds/DCPS/DataReaderImpl.cpp:

          ACE_GUARD for RW locks is equivalent to ACE_WRITE_GUARD

Fri Jul 17 20:58:25 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 05f329c114915dee3e36c692461fb3d276b4a73a

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Make invalid transport header error into a filterable warning

Fri Jul 17 20:21:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ae4d834d1daa39195fe2d7d4967e30a7bbe8cc73

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          partial resolution of review comments

Fri Jul 17 00:26:30 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit f4a3bd0958adbf5b259c212e671591435e8bb367

        * dds/idl/marshal_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          scalar

Thu Jul 16 20:21:06 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1ef4b76450277ad85ae19d03b5558d64b2d2c80c

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          c++11 mapping 2

Wed Jul 15 16:05:20 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 69d3c05268d507f3d8e6fbff59d636f34e5f2800

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          Fix potential leak in Sedp::Msg by checking for ownership and
          deleting owned objects in destructor

Fri Jun 26 14:22:27 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c71d0832c4be305a50d3cc1a57193bdbf1e6e383

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          update get_addresses_i that takes both ids to use 'narrow'
          address, use the first viable unicast & multicast addresses if
          possible

Thu Jul 16 14:29:09 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8808e4c5fc17d533884ab00f227f245bb1ef2caa

        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Update Debug messages. Remove sleep in test.

Thu Jul 16 05:57:47 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit bf84bb8a872c6a7f1a048185b685cfcaf61b96a8

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/langmap_generator.cpp:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          c++11 mapping 1

Wed Jul 15 22:40:24 UTC 2020  Chip Jones  <51006990+jonesc-oci@users.noreply.github.com>
        commit 0aa39a4a1c7dc7898128d8e94638aefcaacd5e79

        * dds/DCPS/Service_Participant.cpp:

          Applied code review suggestions.

          Co-authored-by: Timothy Simpson
          <32278075+simpsont-oci@users.noreply.github.com>

Thu Jun 25 19:59:20 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit a2914940eeb7abb88bc7785871cd0c2da34838ad

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          Prefer Unicast Addresses for INFO_DST RTPS Submessages

Wed Jul 15 14:41:02 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit df06aefb1426321f0aa2ab2caebc42a2c3a926fe

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Allow skipping of packets with bad transport headers in
          TransportReceiveStrategy::handle_simple_dds_input()

Tue Jul 14 13:32:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit accbc85b70f9c7ec38c6a3f95b185e538c0922cb

          Merge pull request #1789 from
          jrw972/checklist-succeeded-triggered-check-queue-assert

          ICE: Empty triggered check queue assert fails in
          checklist_succeeded

Tue Jul 14 13:31:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 910982760d0767cc5260a05026911d0c352860e2

          Merge pull request #1742 from
          simpsont-oci/test_controller_send_whole_scenario

          Improve Coordination Between Bench's Test & Node Controllers

Mon Jul 13 19:35:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f9dea61f7e9b2e768d648d9bf3b8c53bb42c3e73

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          resolve review comments

Mon Jul 13 17:04:22 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f9a53cee53360f334a73e06caf661206f3447a35

        * dds/DCPS/RTPS/ICE/Checklist.cpp:

          ICE: Empty triggered check queue assert fails in
          checklist_succeeded

          A sequence of events leading to the assert failing is:
          1. Controlled agent nominates a candidate pair.
          2. Controlled agent receives a check resulting in a new triggered
          check.
          3. The triggered check queue is not clear when the nominated
          candidate
          pair succeeds.

          Solution: Clear the triggered check queue before nominating a
          candidate pair and do not generate triggered checks after the
          pair has
          been nominated.

Mon Jul 13 15:28:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ab04e6308e35c2a3a0889ba7b716fbeb4ac7c2e7

          Merge pull request #1788 from jrw972/set-historic-sample

          Set historic_sample_ on replayed durable data

Mon Jul 13 11:56:01 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9878e9cb5145f803b3e61b4d32f340abfb984e12

        * dds/DCPS/DataWriterImpl.cpp:

          Set historic_sample_ on replayed durable data

Mon Jul 13 02:07:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0e274d8d73102c85d5ed68c6070172fa1aa139b9

          Merge pull request #1786 from
          mitza-oci/handshake-token-optional-properties

          By default, omit optional properties from Authentication's
          handshake tokens

Sun Jul 12 19:58:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f902a0f6e090099130f56e96e55dc01e3165223a

        * tests/security/Authentication/AuthenticationTest.cpp:

          AuthenticationTest update

Sun Jul 12 19:50:48 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ce2741a730a6b811290c90b9b069276321594ef7

          Merge pull request #1787 from mitza-oci/durable-cleanup

          Fixing leaked durable buffered data

Sat Jul 11 12:31:11 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4d2ddc59aef5ec0c476ea2f33e76555f47e28b37

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/config.ini:

          Add [Customization/name] section logic

Sat Jul 11 02:48:45 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5a7f459bd1a247369ad38707f0a77c5d73a4743a

        * tests/DCPS/Compiler/anonymous_types/cpp11/anonymous_types_cpp11.mpc:

          deleted IDL_Files from c++11

Fri Jul 10 22:56:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit abb88f8241c528cb016b144a19c4d073ad852168

        * dds/DCPS/DataWriterImpl.cpp:

          restored setting historic_sample_ (from before #1732)

Fri Jul 10 20:33:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a2770733fa2c5ca880cf67c5794a6123c16617b1

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          Sedp::Writer::header_ is unused, removing

Fri Jul 10 20:25:35 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 36e67e211ae5f412c7d1b822c2517a8b344d0bef

        * tests/DCPS/Compiler/anonymous_types/.gitignore  tests/DCPS/Compiler/anonymous_types/classic/.gitignore:
        * tests/DCPS/Compiler/anonymous_types/cpp11/.gitignore:

          added .gitignore

Fri Jul 10 19:53:06 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit eeb4142244c67e9e2c4d0463ec83f807198d3325

        * tests/DCPS/Compiler/anonymous_types/anonymous_types.mpc:
        * tests/DCPS/Compiler/anonymous_types/classic/anonymous_types_classic.mpc:
        * tests/DCPS/Compiler/anonymous_types/cpp11/anonymous_types_cpp11.mpc:

          classic and cpp11 tests

Fri Jul 10 15:41:56 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5ff6fe39c95c8e78378afc284d2169e3c22f9515

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          WChar conversion.

Fri Jul 10 15:41:22 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 579a757d4e53f3c3bf3b99f02dc8a34f7a1b8193

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Simplify writer wait logic with Utils::wait_match();

Fri Jul 10 14:30:13 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit a5cdb14aa6d57e58e4364ab1a204a423990f0130

        * azure-pipelines.yml:

          timeout back to 90

Fri Jul 10 13:04:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 87a98feeb492bf4aa795a1ba6f87f107254d5a28

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * dds/DCPS/security/AuthenticationBuiltInImpl.h:

          By default, omit optional properties from Authentication's
          handshake tokens

          Use a DomainParticipantQos Property_t to include them again

Fri Jul 10 12:51:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 71542aa50e869d8228b98949c940d9efb10c6cad

          Merge pull request #1783 from jrw972/reauth-redux

          Authentication does handle resends

Fri Jul 10 12:51:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fa1f9bf536ec265de94f5ebc0f9c585c75da9f27

          Merge pull request #1784 from iguessthislldo/igtd/dcpslib_leak

          Remove dcpslib from opendds_security.mpb

Fri Jul 10 11:39:50 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit d7f927fb65384372945e17add4bb253bee0739e0

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/config.ini:

          Test changes.

Thu Jul 09 20:47:27 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8a9962fe434de6b449e4a5e179552552a4ccfe6f

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Fix AddDomainId and transport template generation.

Fri Jul 10 01:32:05 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit d463c3ef69d26abf95245fa4319b5b16a4f715ca

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/metaclass_generator.cpp:

          to_cxx_type back to metaclass_generator.cpp

Fri Jul 10 00:16:16 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 729e74642ad3aaa4e234f61eed9d5d1471f6fe90

        * dds/DCPS/RTPS/Spdp.cpp:

          From review

Fri Jul 10 00:05:24 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit dfd848beb619edf3577e1c3a48816c5a3faa3c0e

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:

          local anonymous_seq_generated

Thu Jul 09 23:57:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5dae62e6c5ac7954166b06a610d4b78a5046b0bd

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Track auth reqs sequence numbers to ensure they get processed

Thu Jul 09 23:22:35 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a97ce295788c5e0a79cbb799371d432d5a673c76

        * MPC/config/opendds_security.mpb:

          Remove dcpslib from opendds_security.mpb

          dcpslib installs libraries to $DDS_ROOT/lib, which I'm certain is
          not
          the intention here.

Thu Jul 09 22:53:13 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1fa66eab78b2a775d95b8292e7a1764d71d833ad

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:

          replaced EleLen::Cmp with EleLen::operator<; added
          EleLen::struct_ to handle same anonymous sequence in different
          structs

Thu Jul 09 20:46:16 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 1338e6284ada970443d8a04a5e2c1998663991f1

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Add log messages.

Thu Jul 09 18:47:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4ae8af7add8d2fe7942554a0a6b10d8f1d5fdab0

          Merge pull request #1780 from
          simpsont-oci/handle_duplicate_array_types_for_idl2njni

          Correctly handle duplicate underlying array types within idl2jni

Thu Jul 09 18:31:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c4a4642d02b869c113b84714fc4e4b6ef079599b

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Authentication does handle resends

          An auth resend can cause the authentication process to get into a
          bad
          state (stall and/or livelock).

          Solution: Rework the state machine with the following objectives
          1. Use sequence numbers for the stateless endpoints for
          at-most-once
          processing.
          2. Resend all handshake messages (request, reply, final)
          according to
          the resend timer. Finals are resent until a token is received
          from
          the replier.
          3. Resend auth reqs until a handshake message is received from
          the remote.
          4. Further separate auth state from handshake state.  So that a
          participant remains authenticated through a reauth scenario.

Wed Jul 08 15:52:22 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit d44cd3c08750f977dfa897e65664d88dbf0fb9c8

        * java/idl2jni/codegen/im_jni.cpp:

          Update java/idl2jni/codegen/im_jni.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Wed Jul 08 15:05:01 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit d873c5a5e47e2d915031674cc0f18d3f77c2d026

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/tests/simple/simple.idl:

          Correctly handle duplicate underlying array types within idl2jni

Tue Jul 07 21:10:33 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 208b7e7fbcf76d82322ebc048867a1b80c1bbe76

        * dds/idl/field_info.cpp:

          EleLen::Cmp::operator()

Tue Jul 07 17:39:28 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit ab4e4b77021c0c0ad94ba8b45f906ebb07afba72

        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          added idl anonymous fields

Tue Jul 07 13:11:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 08d52ef836df7867653f48db443869374689c37d

          Merge pull request #1777 from
          iguessthislldo/igtd/static_secure_restart_test

          Various Coverity Fixes

Tue Jul 07 01:05:03 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 13ad021f6053f966ec699fc701ebc8b298764776

        * tools/rtpsrelay/RelayHandler.h:

          RelayHandler.h: Fix Field Init Order

Tue Jul 07 01:04:18 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e2b3d28b9902e2cbcce3c199cdb85d6e593aaef2

        * dds/DCPS/CoherentChangeControl.cpp:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/GuidUtils.cpp:
        * dds/DCPS/RestoreOutputStreamState.h:
        * performance-tests/bench_2/builder/Common.cpp:

          Expand Use of RestoreOutputStreamState

Mon Jul 06 23:17:05 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c0da718760187ca9acbc93999e6467b0cdc547db

        * cmake/tao_idl_sources.cmake:
        * dds/idl/be_init.cpp:
        * java/idl2jni/codegen/be_init.cpp:

          TAO idl -as issue

Mon Jul 06 18:21:46 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 9ee57b0e54ca930c9ce48d43200ff41703ee4273

        * tests/DCPS/ParticipantLocationTopic/ParticipantLocationListenerImpl.cpp:

          ParticipantLocationTopic: Make Coverity Happy

          Coverity CID 1492719

          It complains that `"LOCAL6"` part is dead code. `"ICE6"` and
          `"ICE"`
          strings can also be dead code depending on `ACE_HAS_IPV6`, but
          this
          isn't important at all, so I'm just doing what will please
          Coverity.

Mon Jul 06 18:08:36 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 190c859089df1fb512ee8750d51700283b23172b

        * performance-tests/bench_2/builder/Common.cpp:

          Bench: Restore outstream Format Flags

          Coverity CID 1491311

          I'm only fixing std::fixed here. It looks like Coverity is also
          complaining about setprecision, but it looks like that is already
          handled.

Mon Jul 06 18:04:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d65a89104fd7a53f462e3457a9562406f9f2b7d7

        * tools/rtpsrelay/RelayHandler.h:

          RtpsRelay: Fix Possible Uninitialized Field

          Coverity CID 1491918

          Field it complained about is
          `application_participant_guid_.entityId`.

Mon Jul 06 17:45:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 0b838dff483f3dcdff9387495c29d7e577544a81

        * tests/DCPS/Restart/RestartTest.cpp:

          Restart Test: Fix Possible Uncaught Exception

          Coverity CID 1496270

Mon Jul 06 17:38:51 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 517e3b1f27e6d91b7e14853b365a73761f5c1a74

        * MPC/config/dcps_ts_defaults.mpb:
        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          added @key to anonymous array; to_cxx_type

Mon Jul 06 15:00:19 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 58a27702b5b3fdd7c0a627205a0c141e9a867548

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Changes for safety profile build.

Sat Jul 04 19:01:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e7f34e8c7018419202f2a163f198478f43f90f7f

        * bin/dcps_tests.lst:

          Update dcps_test for DomainRange.

Sat Jul 04 13:25:03 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4e580c97002f667dc5b0b1e5189d9aa4e77203ac

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/DomainRangeTest.mpc:

          Safety and wchar build fixes.

Fri Jul 03 19:58:34 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c259c3ff4f445b6938c00cb046935793a09fcaa3

        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Test output changes.

Fri Jul 03 19:38:31 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 46511d24244bf09dda62c58fdb9e1c5cd61d0dfe

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:

          scoped_elem_, elem_const_ref_, elem_ref_

Fri Jul 03 14:57:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 181c5a5d0dff3c8767584e2bf8d8a87bf7f48111

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Template name generation and char handling changes.

Fri Jul 03 14:24:43 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 03ba63a06e8b2dc09c1b241101f50e2f4ece826a

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Update test for 2 participants per domain

Fri Jul 03 00:56:48 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit eaaae2a3c1175c84c3957a6b6fb87de57ddf4b72

        * MPC/config/dcps_ts_defaults.mpb:
        * azure-pipelines.yml:
        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/anonymous_types.mpc:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          scoped_elem; mpc; idl

Thu Jul 02 16:50:42 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5126774b79e3aaaebce1232e1e2094b1bb1f2331

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          ACE_Configuration changes for different platforms.

Thu Jul 02 17:15:04 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit ca67c113f1e5c3e1b333e7b5aa127ccb8f67364a

        * performance-tests/bench_2/common/util.cpp:
        * performance-tests/bench_2/common/util.h:

          moving chrono include to header

Thu Jul 02 16:26:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 89b351a72fc877442ec6250e98225f6d6723114d

          Merge pull request #1737 from
          iguessthislldo/igtd/static_secure_restart_test

          Allow Built-in Security Plugin to be Reloaded in a Static Build

Thu Jul 02 16:14:27 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 5571ce5e91504aeabeade84a42f01845d686f497

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Replace std::vector with OPENDDS_VECTOR

Thu Jul 02 15:07:11 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 518177e8b79501872d6160f46d2093aefcc7c3a9

          merge master

Thu Jul 02 04:26:56 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c48ea13906365b6c6ce546158415aaedd88ec9ee

        * performance-tests/bench_2/common/util.cpp:
        * performance-tests/bench_2/common/util.h:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          Tweaking wait times / delays, adding more debug messages for
          test_controller / node_controller timestamps

Thu Jul 02 01:55:20 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 3b0e805d566301cf21df8bdcf387030b062e0cfa

        * tests/DCPS/Restart/RestartTest.cpp:

          Restart Test: Remove Sleeps

Thu Jul 02 01:18:10 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit ab9ce6ce8327967cfc0c516b3ac9879fb5b6dbb4

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:

          elem_underscored

Wed Jul 01 23:34:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 06a602c3d07a719475d1bdb5d7093d05c57ae274

          Merge pull request #1772 from jwillemsen/jwi-java12home

          Azure Pipelines: Use JAVA_HOME_12_X64 as location for java

Wed Jul 01 23:34:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4e4361d096e154a5907985b39d8d1189d2f66b9c

          Merge pull request #1771 from jwillemsen/patch-7

          Upgrade to ACE/TAO x.5.10

Wed Jul 01 18:14:27 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 0286e1e19a377057a6affadb2bc73ba1ad3e0291

        * tests/DCPS/Compiler/anonymous_types/.gitignore:

          added .gitignore

Wed Jul 01 12:21:55 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 59e28abb1edc63dcdf8c4347b560c95850c01a11

        * azure-pipelines.yml:

          Use JAVA_HOME_12_X64 as location for java

          * azure-pipelines.yml:

Wed Jul 01 08:23:44 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit c4b23a903b92534bad2e8791bd1c0fa18ac4b020

        * configure:

          Upgrade to ACE/TAO x.5.10

Wed Jul 01 01:41:03 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c8f8f5f5a49b91e1989695411070892f4c467fb8

        * dds/idl/field_info.cpp:
        * dds/idl/marshal_generator.cpp:

          c++11 changes

Tue Jun 30 22:50:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 30b5fe412e1306e5624e8ff3c2016290c2288f9f

          Merge pull request #1733 from mitza-oci/secpartitions

          Security: checking permissions based on Partition QoS

Tue Jun 30 22:06:03 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 4d8cfeb35fff9e8bed0d96aa9632a77fcf4326ab

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          c++11 changes; added idl fields

Tue Jun 30 21:04:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit fc9248dc1baead8693e0475648c2ac7dd4c14073

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Replace std::to_string() with to_dds_string().

Tue Jun 30 19:37:29 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 2b27841a6b633682c26e79d5d485a0e45a8dba67

        * dds/DCPS/Service_Participant.cpp:

          Revise get_domain_range_info().

Tue Jun 30 18:41:11 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ffe222e7ed40df064fbfd9f6f8359c9b9ade39ba

        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/DomainRange/config.ini:

          Support 'add_domain_id_to_port' customization.

Tue Jun 30 17:59:28 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 51a6a6c8918a77b5e6d17557bd1426e123b3ad9d

        * dds/DCPS/security/AccessControl/Permissions.cpp:
        * dds/DCPS/security/AccessControl/Permissions.h:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:

          review comments

Tue Jun 30 17:27:39 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit c8b9fb59e13f4c6ec25160484e65fd5a4d267060

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:

          edited field_info

Tue Jun 30 17:21:20 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit d1d211e5025e54cf0aa3f2321e10b6d38e32c2e6

        * tests/DCPS/DomainRange/.gitignore:
        * tests/DCPS/DomainRange/TestMsg.idl:

          Remove unused idl file.

Tue Jun 30 16:06:26 UTC 2020  Chip Jones  <51006990+jonesc-oci@users.noreply.github.com>
        commit 74513168a96ad75f6c22abc308e141fb1fb1e33f

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Suggestions from review

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Tue Jun 30 14:40:15 UTC 2020  Chip Jones  <51006990+jonesc-oci@users.noreply.github.com>
        commit bce5100f813bf19ec990e3be2260894a6b3e5afb

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:

          Comments and changes from review.

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Tue Jun 30 15:51:59 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 0ccf39be03a1f29c88dfd8bdfcd6f31bc12136a7

          Merge remote-tracking branch 'upstream/master' into
          igtd/static_secure_restart_test

Tue Jun 30 14:34:49 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 2cbe49bfbb7ba0f15d11347219fee3bd9da99805

        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/DomainRangeTest.mpc:
        * tests/DCPS/DomainRange/run_test.pl:

          Modify test to use ConsolidatedMessengerIdl.

Tue Jun 30 14:01:25 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ad273cb7204f9234f40a9ebd40e12d9ef902b3f1

        * dds/DCPS/Service_Participant.cpp:
        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:

          Formatting and coding standard changes.

Mon Jun 29 19:10:20 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a721e0e43bafc20e6e34abb684bfd7d09e417f74

        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Transport configurations need unique names.

Fri Jun 26 16:52:06 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 80caba82ebea361d2be9805c515dd1b3c08eaa2b

        * tests/DCPS/DomainRange/config.ini:
        * tests/DCPS/DomainRange/run_test.pl:

          Add [domain/n] config to DomainRange tests.

Fri Jun 26 16:43:17 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 7c598780fbce5669184e7359ed62759f41a8db96

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          Log message changes.

Fri Jun 26 13:33:38 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 350fe31fefaa5fe8e629e002b952f5de2c990c43

        * bin/dcps_tests.lst:

          Add DomainRange test to automated tests.

Fri Jun 26 13:29:41 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 0209d1958ba12388943a6d6fb35ffe5847cf72b8

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Test cleanup

Thu Jun 25 21:52:23 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 932a354d2d43db37e5462f1a098234c4f7af17b5

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/config.ini:
        * tests/DCPS/DomainRange/run_test.pl:

          Transport template customization support.

Thu Jun 25 19:18:12 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 98fdef90e3ce2a7ceaf44df83cd7582aa306dacc

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/config.ini:

          Adding transport_template support.

Wed Jun 24 20:09:04 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit af9ae4c3bc9784c65bf534b8604a38bc87986bc4

        * tests/DCPS/DomainRange/run_test.pl:

          Remove trailing whitespace.

Wed Jun 24 20:05:55 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 110e44ea0232f291c96ff53f44fcffe7545f7f2b

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * tests/DCPS/DomainRange/config.ini:

          Support for InteropMulticastOverride:AddDomainId

Wed Jun 24 18:08:54 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit a0851e4fa6151f06addf617299ef0dfef6fea293

        * tests/DCPS/DomainRange/run_test.pl:

          Update test script.

Wed Jun 24 18:07:54 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit f940adeccf319b606c662a1e406f92a655a4f2c9

        * tests/DCPS/DomainRange/mfs_rtps.ini:

          remove unused test ini file.

Wed Jun 24 17:20:25 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit e625fd48d5ffb2d5f655f4711a5e85df3b7ee3d2

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/DomainRange/config.ini:

          Support for discovery template customization.

Mon Jun 29 20:03:45 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 504ba6cdedde7d89c1c98717962b6bb04fdb902d

        * dds/idl/marshal_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          separate anonymous type support

Mon Jun 29 16:40:02 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 4cf32338830418aaa2da06c7b23afb3d6bdcce6b

        * dds/idl/field_info.cpp:

          target C++03

Sun Jun 28 21:14:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 76f18f450e19bfbc6485869bc3c773b504f7d570

          Merge pull request #1766 from mitza-oci/master

          cleaned up warnings from #1732

Sun Jun 28 21:14:36 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bbafadd354676550159659b2b71e4847190eeafe

          Merge pull request #1763 from
          simpsont-oci/protect_listeners_in_datalink_network_change

          Protect Listeners in DataLink::network_change()

Sun Jun 28 15:08:33 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 201b261b84a1f4086b92939717cb483d1ac82f29

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:

          cleaned up warnings from #1732

Sun Jun 28 01:25:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 88fcd4aefaaa3bf758ff5e50f9b6527d6a8b0582

          Merge pull request #1732 from jrw972/reauth

          Participants cannot reauthenticate

Sat Jun 27 22:16:36 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6794a3c9202481915764ac62b4d94a242a91e545

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          fixed whitespace

Sat Jun 27 22:13:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3178ddc0f711f664e402f2dfb4e4445bf690046a

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          updated key-exchange timing: no longer assuming there will be a
          participant crypto token

Sat Jun 27 21:09:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d1dd1a8de8a2b1b19b99e98218e390704c827b7e

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          static discovery requires a separate heartbeat counter since
          RtpsWriter doesn't exist yet

Sat Jun 27 20:36:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ca3c55926a6f438baeac5746dd40ab976e9182be

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/GuidConverter.cpp:
        * dds/DCPS/GuidConverter.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          updated handling disassociation of secure builtin endpoints

Sat Jun 27 18:59:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit aee2db6507b3b74e688d67d656bb744bf1192213

        * azure-pipelines.yml:

          Revert "azure-pipelines: try a version of vcpkg other than
          master"

          This reverts commit 7286bd0801b00824679d04cd0de18964701ebf84.

Sat Jun 27 16:38:24 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit efdd2dbcc1d88290b4361cf27763c7a699e95da3

        * dds/idl/field_info.cpp:
        * dds/idl/marshal_generator.cpp:

          underscored_.replace

Sat Jun 27 14:06:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b5dd693fa307a45cb98efac7c52860131a497e28

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          reworked some of the writer-side transport cleanup from d4a26f9

Sat Jun 27 01:59:47 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5d3cef787fd20eabd64a70d2f5ac76c5e8973168

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:

          edited FieldInfo

Fri Jun 26 19:53:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c0574e20b8e60357eba05d39244f2f811581eb23

        * dds/DCPS/RTPS/Spdp.cpp:

          fixed whitespace

Fri Jun 26 19:51:54 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 33056833109322f987269c468ae21f6c250df22f

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          review comments

Fri Jun 26 19:38:23 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7286bd0801b00824679d04cd0de18964701ebf84

        * azure-pipelines.yml:

          azure-pipelines: try a version of vcpkg other than master

Fri Jun 26 18:10:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 78579c9b61eb58eeba7f452eb577a89f7ca30718

        * dds/DCPS/RTPS/Spdp.cpp:

          handle_handshake_message - check auth state before handshake
          state; attempt_authentication - keep an incoming AuthReq from
          disrupting auth already in progress

Fri Jun 26 17:53:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2371b21447eec92f73768d496891c9d2b7c47222

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:
        * dds/DCPS/security/CryptoBuiltInImpl.h:

          fixed locking in register_matched_remote

Fri Jun 26 17:37:22 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 41c20d0655e89e933b94368e0dc441d675b9ed28

        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          edited assign_field; added string in idl

Fri Jun 26 14:55:19 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 87fb2801fb4d3fe0fcfdb916bca5175c88733560

        * tests/transport/rtps/publisher.cpp:
        * tests/transport/rtps/subscriber.cpp:
        * tests/transport/rtps_reliability/rtps_reliability.cpp:

          transport test updates

Fri Jun 26 07:32:05 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 5139b98f5d3236dcd27cf1b5625d8ef19eb4a80f

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          Sedp: Fix OPENDDS_SECURITY Macros

Fri Jun 26 04:09:21 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1e6af404f374918828243775730061ec1ac2d7e3

          Merge remote-tracking branch 'justin/reauth' into pr1732

          # Conflicts:
          #       dds/DCPS/RTPS/Sedp.cpp
          #       dds/DCPS/RTPS/Spdp.cpp
          #       dds/DCPS/security/CryptoBuiltInImpl.cpp

Fri Jun 26 04:03:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e986574d182d2501e2a3612f83a2f28edb667eff

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:

          clear Crypto plugin's sessions_ during rekey

Fri Jun 26 04:02:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fd1c9858714b9c0c252efc4a1c7bfd29336ebd9b

        * dds/DCPS/RTPS/Spdp.cpp:

          Reset handshake_state_ after completing auth

Fri Jun 26 01:35:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bede27293b354d57f95b15eb19c9af485a3cb44e

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:

          Revert "CryptoBuiltInImpl: always generate the participant's key
          so that key exchange has something to send"

          This reverts commit 7f64b9dae41e10a7f024862bd5fb6ec73d1afcbe.

Fri Jun 26 01:35:25 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d20b097f540fc238faa3b1621a567c0206aef530

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Updated scheduled sends of stateless builtin messages:

          - if there's a handshake message to send, no need to send auth
          request
          - auth requests only send immediately if it's the replier and
          auth started from discovery

Fri Jun 26 01:20:47 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit ecf6e127f0d2074a5c786cdc01723c51059da25c

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          modified FieldInfo and test.idl

Thu Jun 25 23:44:25 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 39e7088dbaf49db65fda0db681efdf8b754800d6

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * dds/DCPS/security/CryptoBuiltInImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:

          Review Changes

Wed Jun 24 17:19:18 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 191b2de6dbcfd90f3d39dd33b2ca1f0b91d93d17

        * tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/DomainRange/DataReaderListenerImpl.h:
        * tests/DCPS/DomainRange/DomainRangeTest.cpp:

          Change test log messages.

Mon Jun 22 14:06:05 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8ff597332ca3ecbe0d01029492df72f86987356a

        * tests/DCPS/DomainRange/run_test.pl:

          Add run_test.pl script.

Fri Jun 19 21:49:26 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c09533010eb75782c0edb2fc3737a23b192ddb30

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          DomainRange configuration changes.

Fri Jun 19 18:11:56 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 4216cc25a54c71bd67e567ae4e9e76bab0651a60

        * tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/DomainRange/config.ini:

          Test that dynamically configures domains.

Thu Jun 18 20:16:16 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit b2ea45f5f4bd1aea26a1a9b09cba8300ee8042d4

        * tests/DCPS/ConfigTemplate/mfs.ini:
        * tests/DCPS/ConfigTemplate/.gitignore  tests/DCPS/DomainRange/.gitignore:
        * tests/DCPS/ConfigTemplate/DataReaderListenerImpl.cpp  tests/DCPS/DomainRange/DataReaderListenerImpl.cpp:
        * tests/DCPS/ConfigTemplate/DataReaderListenerImpl.h  tests/DCPS/DomainRange/DataReaderListenerImpl.h:
        * tests/DCPS/ConfigTemplate/ConfigTemplateTest.cpp  tests/DCPS/DomainRange/DomainRangeTest.cpp:
        * tests/DCPS/ConfigTemplate/ConfigTemplateTest.mpc  tests/DCPS/DomainRange/DomainRangeTest.mpc:
        * tests/DCPS/ConfigTemplate/TestMsg.idl  tests/DCPS/DomainRange/TestMsg.idl:
        * tests/DCPS/ConfigTemplate/mfs_rtps.ini  tests/DCPS/DomainRange/mfs_rtps.ini:
        * tests/DCPS/ConfigTemplate/run_test.pl  tests/DCPS/DomainRange/run_test.pl:

          Rename test.

Wed Jun 17 18:26:21 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit d1e9189b517988605d2c1b9632bb7734d705e054

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Dynamically configure domain and rtps_discovery.

Fri Jun 12 20:28:42 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit c895237e94d702e0f31179f303acac977bb09548

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:

          DomainRange template configuration logic.

Wed Jun 10 20:05:46 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 0e501bc43517f99ee409c9e7fa01b8acb939ab7a

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * tests/DCPS/ConfigTemplate/mfs_rtps.ini:
        * tests/DCPS/ConfigTemplate/run_test.pl:

          Configuration template parsing logic.

Wed May 20 18:20:02 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit ad92c4aeb232d6b1f4b47548d9742a6c62c87625

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportRegistry.cpp:
        * dds/DCPS/transport/framework/TransportRegistry.h:
        * tests/DCPS/ConfigTemplate/mfs.ini:

          Parsing logic for DomainRange sections.

Fri May 01 19:26:25 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8b7ad563e36923093829ee88f4b7cecc3e821392

        * tests/DCPS/ConfigTemplate/.gitignore:
        * tests/DCPS/ConfigTemplate/ConfigTemplateTest.cpp:
        * tests/DCPS/ConfigTemplate/ConfigTemplateTest.mpc:
        * tests/DCPS/ConfigTemplate/DataReaderListenerImpl.cpp:
        * tests/DCPS/ConfigTemplate/DataReaderListenerImpl.h:
        * tests/DCPS/ConfigTemplate/TestMsg.idl:
        * tests/DCPS/ConfigTemplate/mfs.ini:

          Configuration Templates test initial commit.

Thu Jun 25 20:49:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit fa564385eecafa4968385cbc0d5ca4399fdd3d06

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/security/CryptoBuiltInImpl.cpp:
        * dds/DCPS/security/CryptoBuiltInImpl.h:
        * dds/DdsSecurityCore.idl:

          removed rekey_remote_datareader/writer

          discovery calls register_matched_remote_datareader/writer to do
          the same thing

Thu Jun 25 19:16:03 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit cd78c612d6d9b29cea66b692dadcdda5647c2ca9

        * dds/DCPS/transport/framework/DataLink.cpp:

          Protect Listeners in DataLink::network_change()

Thu Jun 25 17:01:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7f64b9dae41e10a7f024862bd5fb6ec73d1afcbe

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:

          CryptoBuiltInImpl: always generate the participant's key so that
          key exchange has something to send

Thu Jun 25 14:42:52 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 8c31e4e1fcca539d86d8bcff8d936d99e2d641dd

          Merge pull request #4 from jrw972/reauth-handle-auth-req

          Reauth handle auth req

Thu Jun 25 14:26:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e1dbc19391671cbdcb424c037b97fae9cccb55f4

        * dds/DCPS/RTPS/Spdp.cpp:

          restored auth_req_msg_ setup from prior commit

Thu Jun 25 13:56:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b52707baf9b0e699f4e6147760c601c39c4db2c3

        * dds/DCPS/RTPS/Spdp.cpp:

          Send AuthReq only from process_auth_resends

Thu Jun 25 13:30:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 60d87e2416bce6781fec2e30efd54050e94869e7

        * dds/DCPS/RTPS/Spdp.cpp:

          make the merged code compile

Thu Jun 25 13:30:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6e3c3aac39a8e0173673349d27705c1b83aeb1ba

          Merge branch 'pr1732' into reauth-handle-auth-req

          # Conflicts:
          #       dds/DCPS/RTPS/Spdp.cpp

Thu Jun 25 12:37:20 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 30f3ba9c90ac148c81bf3451216abd3346bbfb2f

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:

          Always generate local auth request token

Thu Jun 25 03:47:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 05e6ce72218b006cf07cf27003ecc7edab3521dd

        * dds/DCPS/RTPS/Spdp.cpp:

          just receiving AuthReq shouldn't restart an auth in progress

Thu Jun 25 03:43:32 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 864d7b4b1929d9b00cf71bffd14eb3fc94d69fa3

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:

          WIP

Thu Jun 25 03:35:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 83bf9a8636a2ed3e859598ce9e3cac9761572ca6

          Merge pull request #1759 from
          simpsont-oci/fix_reliable_best_effor_readers_test

          Fix Delay & Assocation Issues In ReliableBestEffortReaders Test

Thu Jun 25 03:32:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 34d837436730a0c00e379a072a0d01e9cc0d2810

        * dds/DCPS/transport/framework/TransportSendListener.h:

          made replay_durable_data_for() non-pure-virtual to let tests
          build

Thu Jun 25 03:32:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 79d3c362c41cf42c4cccc785e35665c77aa0e7de

        * dds/DCPS/RTPS/Spdp.cpp:

          Only pass AuthReq token to plugin if this auth was started by
          that AuthReq

Thu Jun 25 01:54:54 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0354b24e3907d581e7c3f1006b0a3c1aeedef7d3

          Merge remote-tracking branch 'justin/reauth-handle-auth-req' into
          pr1732

Thu Jun 25 00:37:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b8c8ad52965c0ecfd99c572475ff845cbc40e274

        * dds/DCPS/RTPS/Spdp.cpp:

          WIP

Thu Jun 25 00:18:16 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7a5049a487c08f11a05723bdc51ef4cbe83b5384

        * dds/DCPS/RTPS/Spdp.cpp:

          Auth req should lead to attempt authentication

          Needs to restart if the authentication request changes

Wed Jun 24 23:11:17 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit f8fd8141c4c828fdc5df4046c3ff0fa9de880690

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/metaclass_generator.cpp:

          modified anonymous type name

Wed Jun 24 22:40:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4f0ba9a73644b4397d9605e2c1db3b0a557568f8

          Merge remote-tracking branch 'upstream/pr1732' into pr1732

Wed Jun 24 22:39:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d4a26f9111a75221411c619fa313a33d17961375

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RecorderImpl.cpp:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/transport/framework/TransportClient.cpp:
        * dds/DCPS/transport/framework/TransportClient.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:

          provide a hook for the transport to clean up per-client data
          based on when it's really done with the transport, not just when
          it doesn't have any associations

Wed Jun 24 22:33:46 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit c7e9bfb1a82a44ada00044860d2314fd1d7a2cad

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Update dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h

          Co-authored-by: Timothy Simpson
          <32278075+simpsont-oci@users.noreply.github.com>

Wed Jun 24 22:29:20 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c6b9cd25e7e70d99a7d302fbfc0d5dcefe929cce

        * dds/DCPS/RTPS/Spdp.cpp:

          Cleanup so reauth works

Wed Jun 24 21:25:10 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit aa352b9476c9ce03d5d0622f5811b749fc62d188

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:

          Cache crypto tokens until associated

Wed Jun 24 19:30:23 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b11fce086bf3fe9cf70185c416e97a14030e3d46

        * dds/DCPS/RTPS/Sedp.cpp:

          Forget crypto handles when expiring a participant

Wed Jun 24 18:58:51 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit fdf3d5d389063b6e3f160c84195652bda7414593

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:

          c++11 mapping

Wed Jun 24 15:04:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2f1efe682ec863b5e6ba834359b75fadfd4d99bd

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Fix race condition when sending crypto tokens

Wed Jun 24 05:59:10 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 93dd56e762bc4c369755d0d6a034962504278b46

        * dds/DCPS/RTPS/Sedp.cpp:

          Resend User DataWriter Crypto Tokens

Wed Jun 24 05:35:47 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c9ff36aa2632b798f4d8033b94c7a948ec786fa4

        * dds/DCPS/security/CryptoBuiltInImpl.cpp:

          CryptoBuiltInImpl.cpp: Fix Func Names in Log Msg

Wed Jun 24 01:11:19 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 240a7a6eccac90efe68f4a5b1a6eece4a471962e

        * dds/idl/field_info.cpp:
        * dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:

          c++11 mapping

Wed Jun 24 00:23:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4122b2950ec825d97063b485615bcb69e32e8795

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Only replay durable if durable and not replaying already

Tue Jun 23 22:25:05 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c125061cbc9cf620c975d6107990c66941141047

        * tests/DCPS/ReliableBestEffortReaders/publisher.cpp:
        * tests/DCPS/ReliableBestEffortReaders/subscriber.cpp:

          adding delay to help out best effort readers

Tue Jun 23 22:01:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 898b8f260e204a84ea4874b5c70d1dbaf55b2a70

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Replay durable data for normal readers

Tue Jun 23 21:21:50 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 09551b9af44f24b9ec59706045e2f3045cce6c25

        * dds/DCPS/GuidConverter.cpp:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          From review

Tue Jun 23 15:01:13 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 1067bbf22481de456ffe5b53d9fdfd1e05be97a7

        * dds/idl/anonymous.cpp  dds/idl/field_info.cpp:
        * dds/idl/anonymous.h  dds/idl/field_info.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:

          renamed Field and anonymous.h/cpp to FieldInfo and
          field_info.h/.cpp

Tue Jun 23 14:26:55 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit fc6226334c192f25f7dbdf04565f6bcb559f3c97

        * tests/DCPS/ReliableBestEffortReaders/publisher.cpp:

          fixing publication matched status wait

Tue Jun 23 05:35:30 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 76bd070faa19da52a575fb16d5dae7a8a4ad0eaa

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:

          Resend User DataReader Crypto Tokens Attempt

Tue Jun 23 04:27:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9c9a4297da59e310f65fb6ecc00dce00c1b43366

        * dds/DCPS/security/AccessControl/Governance.cpp:
        * dds/DCPS/security/AccessControl/Permissions.cpp:
        * dds/DCPS/security/AccessControl/Permissions.h:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:

          AccessControl: continued cleanup

Tue Jun 23 00:00:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4ba68b244c12ee754792f38b757a18520507d623

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:

          fixed whitespace

Mon Jun 22 23:59:30 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 6f1d71a22f6b09129e74165b617873d057f74b65

        * dds/idl/anonymous.cpp:
        * dds/idl/anonymous.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/marshal_generator.h:
        * dds/idl/metaclass_generator.cpp:
        * dds/idl/metaclass_generator.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          handle duplicate anonymous sequences

Mon Jun 22 23:58:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cff863e61d34dc333a33e163f3744ee225952d06

        * dds/DCPS/security/AccessControl/Permissions.cpp:
        * dds/DCPS/security/AccessControl/Permissions.h:
        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:

          AccessControl: updated Permissions handling for Partition
          criteria

Mon Jun 22 22:55:49 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4483d6f115da7b53843854549735aa3073bccd38

        * docs/design/security.md:

          Fix Typo in docs/design/security.md

Mon Jun 22 20:24:14 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit bab835b48e37f5c84154dd4caab3f608dfa32c2e

        * dds/DCPS/debug.cpp:
        * dds/DCPS/debug.h:
        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * docs/design/security.md:

          Add Ability to Force Authentication Handshake Role

Mon Jun 22 19:34:41 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d37d7b4cd55ac89918b058fef08f727851506be5

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:

          AccessControl: deny rules for check_remote_topic

Sun Jun 21 23:27:31 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9e15e598accd336c9661094dae95cdb668d01e71

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:

          AccessControl: cleanup and one case of Deny rules

Sun Jun 21 21:55:02 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8037ff097f7f1491d109e6d3698a81baf416b8c9

        * dds/DCPS/security/AccessControlBuiltInImpl.cpp:
        * dds/DCPS/security/AccessControlBuiltInImpl.h:

          AccessControl: merged search_local_permissions and
          search_remote_permissions

Fri Jun 19 23:08:28 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 5a04951a10f57ead87fe24defcd05daa03febe99

        * dds/idl/anonymous.cpp:
        * dds/idl/anonymous.h:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          changed get_type_name for sequence

Fri Jun 19 22:57:52 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3f40f5f1d20dfa26230c856c988d9576752a01ee

          Merge pull request #1748 from iguessthislldo/igtd/attributes_test

          Fix Unused Function Warning in Attributes Test

Fri Jun 19 22:57:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4024b56d772e8b4a0cd20fffeafd5dd8fc95709f

          Merge pull request #1741 from iguessthislldo/igtd/cmake_cpp11

          CMake: Remove Non-IDL-Related parts from OPENDDS_TARGET_SOURCES

Fri Jun 19 18:34:28 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit c4be6fc45841bc5406892c13e9b2fefdc2720b9c

        * dds/DCPS/RTPS/Spdp.cpp:

          Fix Segfault on Shutdown

Fri Jun 19 00:28:08 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 46d107a9da7d749f993277a5a9155291cde2e60e

        * dds/idl/anonymous.cpp:

          code review change

Fri Jun 19 00:19:36 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 879b651da20ceb7685b3769ef571e597931dfb56

        * dds/idl/anonymous.cpp:
        * dds/idl/anonymous.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          code review changes

Thu Jun 18 20:00:45 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 4eddfc6def53377201aa42fa36a3d92a9f09393a

        * dds/idl/anonymous.cpp:
        * dds/idl/marshal_generator.cpp:

          deleted cout

Thu Jun 18 19:19:58 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 863ae19d0d2eecf692c6b88d2f71c281d4215647

        * dds/idl/anonymous.cpp:
        * dds/idl/anonymous.h:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          added anonymous sequence

Wed Jun 17 18:30:19 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e10ee07ea9a5760dd7bee3d966fb5cbc66b8dfe4

        * tests/security/attributes/publisher.cpp:
        * tests/security/attributes/subscriber.cpp:

          Attributes Test: Restore result

Wed Jun 17 03:49:15 UTC 2020  Jiang Li  <lij@objectcomputing.com>
        commit 3addb5e4d2c6edfe091116756e90727a9b20a10b

        * dds/idl/anonymous.cpp:
        * dds/idl/anonymous.h:
        * dds/idl/dds_visitor.cpp:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * tests/DCPS/Compiler/anonymous_types/anonymous_types.mpc:
        * tests/DCPS/Compiler/anonymous_types/test.idl:

          added anonymous array

Tue Jun 16 16:25:19 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 09c63425242382a47b39a5e404b11122a5281989

          Merge pull request #1752 from mitza-oci/defaultaddress

          Update to #1727, avoid name resolution of DCPSDefaultAddress in
          ACE

Tue Jun 16 16:24:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c899389e1d2f1dbed06b290aef30973474d46aa1

          Merge pull request #1743 from jmccabe/master

          Handle SpdpLocalAddress formatted as defined in Dev Guide
          properly

Tue Jun 16 11:19:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f26bdd7ccf42ece7c785f750a466a1e2e8a4c62d

        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/tcp/TcpInst.h:
        * dds/DCPS/transport/udp/UdpInst.h:

          Update to #1727, avoid name resolution of DCPSDefaultAddress in
          ACE

Tue Jun 16 03:49:52 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 21847be40d55f188fe202d3f84089047a4ac5be9

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          WIP

Mon Jun 15 22:48:22 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f52d7adc2aff717403b05a6c6d33a8842322e3ca

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/ReplayerImpl.h:
        * dds/DCPS/security/CryptoBuiltInImpl.cpp:
        * dds/DCPS/security/CryptoBuiltInImpl.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/SendResponseListener.h:
        * dds/DCPS/transport/framework/TransportSendListener.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DdsSecurityCore.idl:

          WIP

Mon Jun 15 20:33:40 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 0fa4a2b946ac4f91e44cb9daa1aa311ea8c072d4

        * tests/security/attributes/DataReaderListener.cpp:
        * tests/security/attributes/Writer.cpp:
        * tests/security/attributes/publisher.cpp:
        * tests/security/attributes/run_test.pl:
        * tests/security/attributes/subscriber.cpp:

          Attributes Test: Remove Negative Exit Statuses

Mon Jun 15 20:21:46 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4f3c87f68621e93c3cb1d5e62bbebd47af5b5d5e

        * tests/security/attributes/Args.cpp:

          Fix Warning in Attributes Test

Mon Jun 15 10:35:25 UTC 2020  John McCabe  <jmccabe@kirintec.com>
        commit f95cdc468c39e7ca9f1fdf6ced3bd086b49076e0

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          Issue #1738 Previous commit caused incorrect indentation after
          changed line.

Mon Jun 15 10:26:16 UTC 2020  John McCabe  <jmccabe@kirintec.com>
        commit dd506ca9ffe6c6cad946a958167ecfdb7276460d

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * tests/DCPS/ConfigFile/test1.ini:

          Issue #1738 handle SpdpLocalAddress formatted as defined in Dev
          Guide properly

Sat Jun 13 07:03:45 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 02b0631acfa39c822bd735c193771b2e0d08eef3

        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          initializing launch time, comparison fixes

Sat Jun 13 05:49:36 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8d0921f7a2f50e5ea89b383ac628b5e7d8a8944e

        * performance-tests/bench_2/node_controller/main.cpp:

          launch time calculated relative to system clock

Sat Jun 13 05:19:25 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f073877d75846443552712d847b5f3efb1407996

        * performance-tests/bench_2/builder/Common.cpp:
        * performance-tests/bench_2/builder/Common.h:
        * performance-tests/bench_2/builder/DataReader.cpp:
        * performance-tests/bench_2/builder/DataWriter.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/worker/ForwardAction.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WriteAction.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          setting allocated scenario scenario id, distinguishing between
          high res and system time for Builder::get_time (now two methods)

Sat Jun 13 04:58:44 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2b31b164fb9bb859e295ac9c35d79bd48390f131

        * NEWS.md:

          Add CMake Fixes to NEWS.md

Sat Jun 13 04:43:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 212a7ac7e160733b12e99c561e47bbc870aa9f70

        * NEWS.md:
        * cmake/OpenDDSConfig.cmake:
        * cmake/api_macros.cmake:
        * docs/cmake.md:

          CMake: Deprecate C++ Files OPENDDS_TARGET_SOURCES

          Add deprecation warning when non IDL files are passed to
          OPENDDS_TARGET_SOURCES.

Sat Jun 13 04:40:17 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 40fa76f8a90d12152efe6c52675aab502907769a

        * cmake/OpenDDSConfig.cmake:
        * docs/cmake.md:
        * tests/cmake_integration/Messenger/Messenger_1/CMakeLists.txt:
        * tests/cmake_integration/Messenger/Messenger_2/CMakeLists.txt:

          CMake: Remove C++ Files in OPENDDS_TARGET_SOURCES

          Remove these from the tests to make sure nothing special is being
          done
          to them to help test my previous commits.

          Also remove references to that ability in the documention.

Sat Jun 13 04:30:12 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4e312879fb35c5b32412e18745b993efdbc71eb9

        * cmake/OpenDDSConfig.cmake:
        * docs/cmake.md:
        * tests/cmake_integration/Messenger/Messenger_1/CMakeLists.txt:
        * tests/cmake_integration/Messenger/Messenger_2/CMakeLists.txt:

          Add to CMake Documentation

Sat Jun 13 01:31:45 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4905d121fa2e3f5b31238f9ca1b30624586cfc4f

        * cmake/OpenDDSConfig.cmake:

          CMake: Include options.cmake Sooner

          To fix issue with macro definitions list not being defined.

Fri Jun 12 23:42:52 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit de5f47fa0fbd7112444101c3d319082594858f1e

        * cmake/OpenDDSConfig.cmake:
        * cmake/api_macros.cmake:
        * cmake/init.cmake:

          CMake: Remove include_directories Usage

          Except for `$TAO_ROOT/orbsvcs` these were already being added to
          the
          libraries correctly anyway, so all this was doing was adding
          include
          paths to the global include paths for no good reason.

Fri Jun 12 21:11:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 10b513ffc58e95be863a3770cc22b376a5620089

        * cmake/OpenDDSConfig.cmake:
        * cmake/api_macros.cmake:
        * cmake/options.cmake:

          CMake: Move Macros Out of OPENDDS_TARGET_SOURCES

          Moved OpenDDS library preprocessor macro definitions from
          `OPENDS_TARGET_SOURCES`, which should just be IDL related, to the
          OpenDDS library definitions where they belong. I think this is
          good
          enough for now, but I added TODO comments about possible future
          improvements regarding how macros definitions should be handled.

Fri Jun 12 20:16:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5ac0ede70bf1b36eacdeea8b5f44548d7ac82b82

        * tests/security/AccessControlTest.cpp:
        * tests/security/attributes/permissions/permissions_test_participant_01_partitions.xml:
        * tests/security/attributes/permissions/permissions_test_participant_01_partitions_signed.p7s:
        * tests/security/attributes/permissions/permissions_test_participant_02_partitions.xml:
        * tests/security/attributes/permissions/permissions_test_participant_02_partitions_signed.p7s:

          AccessControl unit test for partitions

Fri Jun 12 18:27:41 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 61e14f8012f23043daa4c4e6598682ce1baa0694

        * dds/DCPS/security/BuiltInPluginLoader.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.h:

          Fix Recursive Loop on Non Static Sec Builds

Fri Jun 12 03:09:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b7f3a843a4b0b0b3ab5d2dd8a446392f23ad8aed

          Merge pull request #1736 from mitza-oci/master

          CMake: support C++11 mapping when building shared libs

Thu Jun 11 22:44:51 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f01637ff3f2ed8b7542603c9b9c2ca05144cdc4c

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/GuidConverter.cpp:
        * dds/DCPS/GuidConverter.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          WIP

Thu Jun 11 22:24:48 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 168511c45dbc246fb8d98d69e270ddfa0e222c93

        * .travis.yml:
        * tests/cmake_integration/run_ci_tests.pl:

          Adapt CMake tests for Travis-CI static build

Thu Jun 11 21:19:37 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9679fc186bad80713f2f814a8d70a18a5ba42b7e

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          updating control domain to use 2-part launch of processes for
          better worker creation sync

Thu Jun 11 19:55:37 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 626b0c45a67592e1aae4cc2f5a091ec8ef1e08d4

        * tests/cmake_integration/Messenger/C++11_Messenger/CMakeLists.txt:
        * tests/cmake_integration/run_ci_tests.pl:

          run_ci_tests.pl updated expected location of run_test.pl for
          C++11 test

Thu Jun 11 19:52:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 41540ced72ad7b96c6c0254a82ae7fbcb1c81597

        * bin/dcps_tests.lst:
        * tests/security/security_tests.lst:

          Move Secure Restart to Security Tests

Thu Jun 11 18:10:13 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 6148d1f457e47bf180e48111b8be78a8c6ac33b6

        * dds/DCPS/security/BuiltInPluginLoader.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.h:
        * tests/DCPS/Restart/RestartTest.cpp:

          Respond to Review in #1737

Thu Jun 11 17:47:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 522bb90eeb9ee6800a75a7bcf068550c0ac4b56a

        * tests/cmake_integration/run_ci_tests.pl:

          run_ci_tests.pl: change current directory back after running test

Thu Jun 11 16:32:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1fe3051f4347a352eccdb5a77f38184d28d2bbcf

        * azure-pipelines.yml:
        * tests/cmake_integration/run_ci_tests.pl:

          Updated script for CMake integration testing

          Some other minor cleanups in azure-pipelines.yml

Thu Jun 11 16:30:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a39de114256e3a2e53037785165a210e550d8226

        * .travis.yml:

          Travis CI macOS: use latest XCode and enable -std=c++11

Thu Jun 11 03:39:28 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 5d26574756ded11059b1800e4eb80b8bf46bd044

        * dds/DCPS/security/BuiltInPluginLoader.cpp:
        * dds/DCPS/security/BuiltInPluginLoader.h:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.h:
        * tests/DCPS/Restart/RestartTest.cpp:

          Allow Built-in Security Plugin to be Reloaded

          Fix for static secure restart test.

          This makes BuiltInPluginLoader check if it needs to act if called
          again
          instead of just acting once. Then I added that a call to the
          loader to
          the Restart test.

          An Issue:
          The last commit appears to have a chance to segfault the restart
          test on
          the ending of a Application object. I have no idea how it's doing
          this.

          One Question:
          If we're static, is it wise to try to reload the built-in
          security
          plugin automatically from
          SecurityRegistry::load_security_plugin_lib?

Thu Jun 11 03:07:51 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 431d0b26ab17bb435ad4e28eba84528e67cd4dd8

        * bin/dcps_tests.lst:
        * tests/DCPS/Restart/RestartTest.cpp:
        * tests/DCPS/Restart/RestartTest.mpc:
        * tests/DCPS/Restart/run_test.pl:

          Security Enabled Restart Test

Thu Jun 11 00:55:27 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 6e630a2cc091af59c6592ff9aa938721cc33e861

        * tests/DCPS/Messenger/optional_security.mpb  MPC/config/opendds_optional_security.mpb:
        * tests/DCPS/Messenger/Messenger.mpc:
        * tools/rtpsrelay/RtpsRelay.mpc:
        * tools/rtpsrelay/optional_security.mpb:

          Create opendds_optional_security.mpb

          Replaces duplicates in the RTPS Relay and the Messenger Test.

Wed Jun 10 22:54:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cd8afd9a0d2bc23b9c20263685c15aa443250dca

        * cmake/api_macros.cmake:
        * tests/cmake_integration/run_ci_tests.pl:

          CMake: support C++11 mapping when building shared libs

          Updated run_ci_tests.pl to attempt C++11 test and shared libs for
          all 3 tests

Wed Jun 10 19:05:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8c3ae78ab9d60363a5aa12e1f25aed4ffc760af5

          Merge pull request #1727 from mitza-oci/defaultaddress

          DCPSDefaultAddress parsing and integration with
          NetworkConfigMonitor

Wed Jun 10 19:04:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6d3a13cd4b1f89a70ed254ead0afc8be1b64224d

          Merge pull request #1730 from
          objectcomputing/mitza-hello-java-client

          Updated build settings for Java "hello" test

Wed Jun 10 19:04:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8ab4c055763dba25db90f0c973e02e154acbe4e2

          Merge pull request #1728 from iguessthislldo/igtd/cmake_cpp11

          Support for C++11 Mapping in the CMake Module

Wed Jun 10 16:10:56 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 793c8d1be318f9df2ecd5bdfe5d4ddc809c5b09d

        * cmake/dds_idl_sources.cmake:

          dds_idl_sources.cmake: Fix syntax

Wed Jun 10 15:29:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 62354c656445791796f56986c5f8581a110933af

        * tests/security/attributes/Args.cpp:
        * tests/security/attributes/Args.h:
        * tests/security/attributes/Writer.cpp:
        * tests/security/attributes/permissions/permissions_test_participant_01_partitions.xml:
        * tests/security/attributes/permissions/permissions_test_participant_01_partitions_signed.p7s:
        * tests/security/attributes/permissions/permissions_test_participant_02_partitions.xml:
        * tests/security/attributes/permissions/permissions_test_participant_02_partitions_signed.p7s:
        * tests/security/attributes/publisher.cpp:
        * tests/security/attributes/run_test.pl:
        * tests/security/attributes/subscriber.cpp:
        * tests/security/security_tests.lst:

          Security attributes test: support checking permissions based on
          Partition QoS

Wed Jun 10 13:32:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9ee58f8f739898f024ca41099d84be5dece7f0f6

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          Participants cannot reauthenticate

          Suppose participant A has a lease time of 100 seconds and
          participant
          B has a lease time of 50 seconds. Participant B is suspended for
          50+
          seconds so that it expires in Participant A. Participant B is
          then
          resumed. This will cause Participant A to rediscover Participant
          B. (Participant B does not need to rediscover Participant A
          because
          it has not expired.)  Participant A must reauthenticate with
          Participant B.

          If Participant A is the requester, then Participant B must
          restart
          authentication when it receives the handshake request. If
          Participant
          B is the requester, then Participant A must send an auth request
          and
          Participant B must restart the authentication processes.

          Solution: Add support for both reauthentication scenarios.

Wed Jun 10 05:03:12 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 7c6ba020154dbff0d49a8aa9b6a0a204c7aae122

        * cmake/dds_idl_sources.cmake:
        * docs/cmake.md:
        * tests/cmake_integration/Messenger/C++11_Messenger/CMakeLists.txt:

          Respond to Review for #1728

          Also Other Tweaks

Tue Jun 09 23:11:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f1f9f32599afe8c79a009d8207e056f9ee594945

        * dds/DCPS/NetworkConfigMonitor.cpp:
        * dds/DCPS/NetworkConfigMonitor.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Integration of DCPSDefaultAddress with NetworkConfigMonitor

          - without NetworkConfigMonitor, only join multicast using all
          interfaces
          if a specific interface was not configured
          - use DCPSDefaultAddress (if configured) as the default address
          for the
          NetworkInterface used for joining multicast without
          NetworkConfigMonitor
          - if DCPSDefaultAddress is configured, NetworkInterface must have
          that
          address to use it for joining multicast (only matters on
          platforms that
          have NetworkConfigMonitor)
          - refactored rules for when to exclude a NetworkInterface from
          joining
          multicast so they are in the NetworkInterface class itself

Tue Jun 09 21:57:07 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9122bbc8453503da1a15636fa9501b1225473d28

        * performance-tests/bench_2/node_controller/main.cpp:

          removing infinite waits from nodecontroller to avoid missed
          conditions

Tue Jun 09 18:26:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 94e519ac93b3791b5e0460d120a5c063319af3d5

        * java/tests/hello/hello_java_client.mpc:

          Updated build settings for Java "hello" test

Tue Jun 09 15:59:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c2d74dab9b29e4c4fa94e2c55a22dc7ee3bfa187

        * performance-tests/bench_2/idl/Bench.idl:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.cpp:
        * performance-tests/bench_2/test_controller/DdsEntities.h:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:

          send whole test scenario as single sample

Tue Jun 09 03:57:20 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 8c658c068c48b50057cc74c07406f2f0b051830b

        * NEWS.md:

          Fix PR Number in NEWS.md

Tue Jun 09 03:27:04 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit b9017371ecf165039e942a51ec60cc369b1f2f5a

        * NEWS.md:
        * cmake/dds_idl_sources.cmake:
        * docs/cmake.md:
        * tests/DCPS/C++11/Messenger/Publisher/DDS_Cxx11_Messenger_Publisher.mpc:
        * tests/DCPS/C++11/Messenger/Publisher/publisher.cpp:
        * tests/DCPS/C++11/Messenger/Subscriber/DDS_Cxx11_Messenger_Subscriber.mpc:
        * tests/DCPS/C++11/Messenger/Subscriber/subscriber.cpp:
        * tests/cmake_integration/Messenger/C++11_Messenger/.gitignore:
        * tests/cmake_integration/Messenger/C++11_Messenger/CMakeLists.txt:
        * tests/cmake_integration/Messenger/CMakeLists.txt:
        * tests/cmake_integration/Messenger/Messenger_1/CMakeLists.txt:

          Support for C++11 Mapping in the CMake Module

          Fix for https://github.com/objectcomputing/OpenDDS/issues/1714

          Support for the C++11 mapping in the CMake module. `-Lc++11` can
          now be
          passed with `OPENDDS_IDL_OPTIONS` in `OPENDDS_TARGET_SOURCES`.

          Also added a property to the target of `OPENDDS_TARGET_SOURCES`
          called
          `OPENDDS_LANGUAGE_MAPPING` that states what mapping was used.
          This will
          be exported if supported by CMake. Fix for
          https://github.com/oci-labs/pyopendds/issues/9.

Tue Jun 09 02:50:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a0c8fbce59edf8d89b5b2db305af3e8621419806

        * dds/DCPS/Service_Participant.cpp:

          don't attempt to set empty string as DCPSDefaultAddress (from ini
          file)

Mon Jun 08 22:40:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cf15322ea9ace4db14b9192eae32f3c5a64ca3e3

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/tcp/TcpInst.h:
        * dds/DCPS/transport/tcp/TcpTransport.cpp:
        * dds/DCPS/transport/udp/UdpInst.h:
        * dds/DCPS/transport/udp/UdpTransport.cpp:
        * tests/DCPS/ConfigFile/ConfigFile.cpp:
        * tests/DCPS/ConfigFile/test1.ini:
        * tests/DCPS/ConfigFile/test1_nobits.ini:

          Issue #1717 DCPSDefaultAddress parsing

          Use ACE_INET_Addr as the internal representation of
          DCPSDefaultAddress
          Update transports and RtpsDiscovery to match

Mon Jun 08 16:18:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7cf92aabe0b1d6bd89bddda5db00b8d76ff348d5

          Merge pull request #1723 from
          jrw972/cancel-remove-association-sweeper

          Associations are removed after expire-associate

Sat Jun 06 16:41:49 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dc4bc704d1536dc3b877f2bbf41e87d588449504

        * dds/DCPS/RemoveAssociationSweeper.h:

          Update dds/DCPS/RemoveAssociationSweeper.h

Sat Jun 06 03:20:14 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9818b9f5c2824aaab674e73694922f13885fdf6b

        * dds/DCPS/RemoveAssociationSweeper.h:

          From review

Fri Jun 05 22:12:57 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5a401929126e582fb1805a4d76d0f9ffde3203c1

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/RemoveAssociationSweeper.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          Associations are removed after expire-associate

          Suppose that a Participant A is suspended long enough that it
          expires
          for Participant B. Participant A is then resumed. In RTPS, this
          will
          most likely cause a number of timers to fire include the one that
          will
          cause Participant A to 1) expire Participant B and 2) send SPDP.
          As
          part of expiring Participant B, associations between writers in
          Participant B and readers in Participant A will be scheduled for
          removal (in Participant A). Sending SPDP will restart the
          discovery
          process. This may cause associations between the readers and
          writers
          to complete for the timer fires that causes the association to be
          removed. Finally, that timer will fire and remove the association
          that was just added.

          Solution: When adding an association to a reader, cancel any
          RemoveAssociationSweeper that will remove the writer.

Fri May 29 22:44:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e1b3c99f74e73a537083e790f3bf9fb9ee6ed8b9

          Merge pull request #1709 from
          jrw972/unlock-for-remove-participant-plt

          Unlock for ParticipantLocationTopic unregister/dispose

Fri May 29 22:43:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7d7ec3679e5bfa9f4ddd24c44b7d4c3eb0219d8b

          Merge pull request #1705 from jrw972/ice-endpoint-managers-checks

          Improve check_invariants in ICE EndpointManager

Fri May 29 18:58:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit af662c3a02682fab931f562072173d36808d07d4

        * dds/DCPS/DiscoveryBase.h:

          Fixes from review

Fri May 29 14:39:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7247aab1e074e9ca143a91fff27bb761578f70f3

        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:

          Handle unused variables

Fri May 29 14:17:54 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0cc47cd3a43664d365d86251cf928f4a15a64858

        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:

          Handle unused variables

Fri May 29 14:03:48 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7c62c97981b3a384fd9efd7273e6eef20a8788b7

        * dds/DCPS/DiscoveryBase.h:

          Unlock for ParticipantLocationTopic unregister/dispose

          This was motivated by a deadlock.  The first thread was adding a
          participant on the basis of a successful security handshake. This
          thread unlocks the SPDP lock so that it can call into the
          ParticipantLocationTopic which acquires the sample lock and then
          reacquires the SPDP lock. The second thread was sending a
          periodic
          announcement and, as a by-product, cleaning up expired
          participants.
          This thread acquired the SPDP lock before calling into
          DiscoveryBase
          to remove the participant. The code in discovery base called into
          the
          ParticipantLocationTopic with the SPDP lock. The second thread
          then
          attempts to acquire the sample lock.

          Solution: Unlock the SPDP lock before interacting with the
          ParticipantLocationTopic reader when removing a discovered
          participant.

Fri May 29 03:05:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9236496ba5daf2011be8f0e09ca1f25db1f642f7

          Merge pull request #1704 from iguessthislldo/igtd/guidelines

          guidelines.md: Tweak Includes Sections

Fri May 29 03:05:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e207be07e4fbe5f52e3bef15edb9efc5c3ead06c

          Merge pull request #1708 from simpsont-oci/coverity_fixes

          Fixing Coverity Issues in TransportReassembly and
          TransportReceiveStrategy

Thu May 28 15:34:41 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 73d4b73b5d856c2c01e8b918ec03440ce717390f

        * dds/DCPS/transport/framework/TransportReassembly.cpp:

          Update dds/DCPS/transport/framework/TransportReassembly.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Thu May 28 15:34:36 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit ab80b421614bc0d6d6c36fd80e992ebe89cc3a27

        * dds/DCPS/transport/framework/TransportReassembly.cpp:

          Update dds/DCPS/transport/framework/TransportReassembly.cpp

          Co-authored-by: Adam Mitz <mitza@objectcomputing.com>

Thu May 28 14:15:01 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 5ea6694e1164d0ff050e764e9b9fc199c08ef3da

        * dds/DCPS/transport/framework/TransportReassembly.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          Fixing Coverity issues in TransportReassembly and
          TransportReceiveStrategy

Wed May 27 15:11:39 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d8098943b4b07016ba20b8cf0f2bf328e6ae3de0

        * dds/DCPS/RTPS/ICE/Checklist.h:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:

          Improve check_invariants in ICE EndpointManager

          The check was improved to check the consistency between the
          EndpointManager data structures and the Checklists.

Wed May 27 02:12:56 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit b0cd627fac3b51da40b272c787b43d44cdd09ab3

        * docs/guidelines.md:

          guidelines.md: Tweak Includes Sections

Fri May 22 03:52:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 05cb7bd3c1cc025f0d15b68ba7145fd2a55ed021

          Merge pull request #1701 from jmccabe/master

          Fix to make master build on VS 2019 Version 16.7.0 Preview 1.0

Fri May 22 03:52:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5f9552220e00bb645e1c9d5c37fda6c56ca67271

          Merge pull request #1696 from
          simpsont-oci/migrate_hb_replies_to_multitask_for_preassoc_acknacks

          Migrate RtpsUdpDatalink's heartbeat replies to MultiTask

Fri May 22 03:51:54 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 973020a7cd1e7ef1903c8018e474d4ccafc7118a

          Merge pull request #1699 from
          simpsont-oci/prevent_frag_storage_for_completed_sn

          Prevent Fragment Storage / Reassembly For Previously Completed
          Sequence Numbers

Thu May 21 22:16:55 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 19e6f4dc9fe0b558db89f8f970bdedd1eef0104b

        * dds/DCPS/transport/framework/TransportReassembly.cpp:

          resolving review comments

Thu May 21 08:54:59 UTC 2020  John McCabe  <jmccabe@kirintec.com>
        commit d438de15ca5d8193588abec936cf3d94b46d7ccd

        * dds/DCPS/Serializer.h:

          Fix to make master build on Visual Studio 2019 Version 16.7.0
          Preview 1.0

Thu May 21 02:03:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c90c0c6d6cc894a124420dd9b721751269c076a0

          Merge pull request #1700 from
          jrw972/rtps-relay-avoid-duplicate-replay

          Rtps relay avoid duplicate replay

Thu May 21 02:03:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit dd2bf6e2ae67cb888eb77083025b486762b1a357

          Merge pull request #1677 from
          jrw972/remove-offered-deadline-watchdog

          Remove OfferedDeadlineWatchdog

Wed May 20 20:08:31 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a25b7ce13ea6afaf4d80e1ecc9f586eecf0e6008

        * dds/DCPS/WriteDataContainer.cpp:

          Purge deadline task from reactor upon destruction

Wed May 20 16:57:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 05dd57fb02e659ccee938606c4c60eb288156e23

        * dds/DCPS/RTPS/Spdp.cpp:

          reinstate enable with correct duration

Wed May 20 16:18:02 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a2eac460f6b97a0ebea8ad5d2e815404e5e197d4

        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/WriterListener.cpp:

          Only replay SPDP for new matches in RtpsRelay

Wed May 20 16:14:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 1c5577de6a786bbe6e334cc49331cbca71ccbb5b

        * tools/rtpsrelay/RelayHandler.cpp:

          Don't print errors on ECONNRESET in RtpsRelay

Wed May 20 16:05:22 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit d487b95ecfa0c059fc549c12133f179097f29607

        * dds/DCPS/transport/framework/TransportReassembly.cpp:
        * dds/DCPS/transport/framework/TransportReassembly.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:
        * tests/DCPS/UnitTests/Fragmentation.cpp:

          Prevent Fragment Storage / Reassembly For Previously Completed
          Sequence Numbers

Tue May 19 20:50:38 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ac87ea6f7416a8fa0c432e47e14e817a0b102413

        * dds/DCPS/DataSampleElement.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          From review

Mon May 18 22:32:54 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit fb2cef2243a8b7b22f58bed1a97479170d20797e

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Migrate RtpsUdpDatalink's heartbeat replies to MultiTask for
          preassoc AckNacks

Mon May 18 20:57:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 5c73412f5eaf378447a4b3a19bcdbbb4cc990b52

          Merge pull request #1695 from mitza-oci/java-ts-includes

          Fixed Java code generation when an included IDL file has @topic

Mon May 18 20:56:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4789746f41ecd89ff2fb05b63a00ddc9d9fe6bbc

          Merge pull request #1694 from
          simpsont-oci/fix_rtps_udp_receive_strategy_coverity_warning

          Fix Coverity Warning for RtpsUdpReceiveStrategy

Mon May 18 20:56:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 96e329a2fc1c0e9c08086f65c98478f88cf10757

          Merge pull request #1693 from jwillemsen/master

          Revert "azure-pipelines.yml: removed VS2019"

Mon May 18 20:56:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 394cba5b362e6a17d3bf57926632b5ec4a835ef1

          Merge pull request #1691 from jrw972/no-auth-reply-resend

          Only send auth replies for auth requests

Mon May 18 18:34:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit df6579340dd93adcfa01243951f1d01e3013e4dd

        * dds/idl/dds_visitor.cpp:
        * java/tests/two_idl/.gitignore:
        * java/tests/two_idl/Common.idl:
        * java/tests/two_idl/two_idl.mpc:

          Fixed Java code generation when an included IDL file has @topic

Mon May 18 14:26:15 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit b0d946316677277adcb645d62796111da399a950

        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          fix coverity warning for rtpsudpreceivestrategy

Mon May 18 14:06:32 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1444bfce468ef9270479a7ec99d4d416f94bbd67

        * azure-pipelines.yml:

          Revert "azure-pipelines.yml: removed VS2019"

          This reverts commit d107805834cd30769ce14e0cb4a647ac3bf033f2.

Mon May 18 13:13:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3de2dcb6e5ed7aef09c59b4f17df6f4a727acacc

        * tests/security/Authentication/AuthenticationTest.cpp:

          Extra checks around handshake handles

Mon May 18 12:58:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2cb974bced4e6497fc64c07976aebad322fb9a21

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * tests/security/Authentication/AuthenticationTest.cpp:

          Fix initialization of handles and test

Sat May 16 16:46:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d369b40b797f9ec4bf029c7e27e14c6dee855b21

          Merge pull request #1690 from mitza-oci/frag-unit

          extended unit test for Fragmentation/Reassembly

Sat May 16 16:46:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c5e300c7fcefe1cbca17cc3367c75016c390ae07

          Merge pull request #1687 from jwillemsen/patch-8

          GitHub Actions: Upgrade to checkout v2

Sat May 16 16:46:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ba67fae93c82c60c9b945627ddb7427e62b7f98e

          Merge pull request #1686 from jwillemsen/patch-7

          Replace clang9/gcc9 with clang10/gcc10 in azure pipelines builds

Sat May 16 16:46:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b8f8a4ef1b611ae57718aab29ddaa3f3407158b0

          Merge pull request #1662 from
          simpsont-oci/handle_simple_dds_input

          Add a simpler 'handle_dds_input' for UDP protocols

Fri May 15 22:12:52 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit da2bc71a74ce3015463f4b352ced02ae63956824

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:

          From review

Fri May 08 17:39:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9118f3529d1880c779630c52a8998eb9d47a32a2

        * dds/DCPS/DataSampleElement.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/OfferedDeadlineWatchdog.cpp:
        * dds/DCPS/OfferedDeadlineWatchdog.h:
        * dds/DCPS/PublicationInstance.h:
        * dds/DCPS/ReplayerImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/TimePoint_T.inl:
        * dds/DCPS/Time_Helper.inl:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * tests/DCPS/WriteDataContainer/WriteDataContainerTest.cpp:

          Remove OfferedDeadlineWatchdog

          The watchdog uses timer_ids and therefore must wait() when
          scheduling
          timers. This effectively introduces a lock which leads to
          deadlock
          when the Deadline QoS is used. The deadly embrace occurs between
          the
          writing thread which has the DataWriterImpl lock and needs the
          reactor
          lock and the Reactor thread servicing the watchdog which has the
          reactor thread and needs the DataWriterImpl lock.

          Solution: Rewrite the OfferedDeadlineWatchdog using SporadicTask.

          In general, wait()ing on Command objects in the
          ReactorInterceptor is
          unsafe and the wait functionality should be removed to reduce the
          chance of similar deadlocks in the future.

Fri May 15 20:22:39 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit ed1b75ab075ac73dc9f714ac52d3c23cad44053d

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * tests/security/AccessControlTest.cpp:
        * tests/security/Authentication/AuthenticationTest.cpp:

          Only send auth replies for auth requests

          One participant (the initiator) has discovered another
          participant (the replier) and sent an auth request.  Due to SPDP
          reset, it removes the participant but immediately rediscovers it
          and
          sends another auth request. If the replier receives the first
          auth
          request, it will continue to respond to it but authentication
          will
          fail as the initiator has changed the Diffie-Hellman parameters.

          Solution:

          1. The replier will not periodically resend replies. It will only
          send auth replies in response to an auth request. It will send an
          auth reply for every request.
          2. If the replier detects that the auth request has changed, it
          will
          recompute a new auth reply.

Fri May 15 20:24:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c0a258591457587040792fd8e79f74771f3f2bf6

        * tests/DCPS/UnitTests/Fragmentation.cpp:

          extended unit test for Fragmentation/Reassembly

Fri May 15 16:59:02 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 0496ad64ace5b474b22a5104325ddc9f539a838b

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          simplify read buffer reset logic by forcing it to occur before
          every read

Fri May 15 14:00:54 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 2a70b55ee25cc9eb611dd2822d2a37cca45e7572

        * azure-pipelines.yml:

          Removed clang9 and gcc9 in favor of clang10 and gcc10

          * azure-pipelines.yml:

Fri May 15 12:32:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7bf677c3697526e6f9dc3bda129fef2315d176c2

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:

          reset buffer for all non-processed returns

Wed May 13 11:01:46 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit ce0f9d7ce2d5ef5084c26a2dcd7003d0b833abf7

        * .github/workflows/fuzz.yml:

          Upgrade to checkout v2

Wed May 13 08:03:53 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit e29da91d4dc6a248e7ea72526e7593da47168a37

        * azure-pipelines.yml:

          Add clang10/gcc10 to azure pipelines builds

Tue May 12 01:56:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit bb1a3167ae3f5040486b176603b312b277e598aa

          Merge pull request #1683 from mitza-oci/master

          GCC 10 fix in IntermediateTypeLang

Mon May 11 17:20:13 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 60d208395d5329cbd52b5b11182e7bdec1095e9b

        * tools/IntermediateTypeLang/cpp/itl/itl.hpp:

          ITL fix for GCC 10

Mon May 11 15:36:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 637a27268a1dd04eb4c2f80a1d20242f7f23177b

        * .travis.yml:

          Travis-CI: try GCC10 with some different options

Mon May 11 14:57:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2437ddc53bdaa4fced3641b3d59182c66a5256b7

        * .travis.yml:

          Travis-CI: try GCC10 with some different options

Mon May 11 13:19:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9407189f485b3c4fb87266ceff836ad281d47812

        * .travis.yml:

          Travis-CI: try GCC10

Sat May 09 04:23:40 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 68ad2f231d74ff208959632805fe10467d74e458

          Merge pull request #1679 from jrw972/spdp-transport-fix

          Fix SPDP transport test on Windows IPV6 builds

Fri May 08 22:45:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c692de58a91f8fb74d31228f6734b2689d987479

          Merge pull request #1676 from mitza-oci/idl2jni-union

          Fixed one more case of Java bindings generated code for unions

Fri May 08 22:14:07 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3359d2a9f126eac9c6053fa5e463e8d931b2e06c

        * tests/transport/spdp/spdp_transport.cpp:

          Fix SPDP transport test on Windows IPV6 builds

Fri May 08 19:23:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 94bce3cdfeee8d81e3f4cac57bc7ab02ecda1578

        * java/idl2jni/codegen/idl_mapping.cpp:
        * java/idl2jni/codegen/idl_mapping.h:
        * java/idl2jni/codegen/im_jni.cpp:

          fixed unions discriminated by enums scoped in modules

Fri May 08 15:23:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 62b2e09b4a319e4c68122cc169a36eb227272f87

        * java/idl2jni/codegen/im_jni.cpp:

          fixed one more case of Java bindings generated code for unions

Fri May 08 04:39:37 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 48aebd37461ea42dbb6cd6af3940f73199d58a53

          Merge pull request #1674 from jrw972/rtps-relay-dont-forward-pads

          RtpsRelay should not forward beacons

Fri May 08 04:36:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3f1ee94142483ac2a7059c61f8a702f64062c583

          Merge pull request #1673 from jrw972/spdp-ice-endpoint

          Add ICE endpoint before potential receive in SPDP

Fri May 08 04:36:37 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7342446053207c199512c8570fac97dfa07e1236

          Merge pull request #1671 from mitza-oci/idl2jni-union

          Fixed a corner case for IDL union code generation in Java

Thu May 07 18:58:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9e74bc60d0c2995a0025d806198d5f38f474d37e

        * tools/rtpsrelay/RelayHandler.cpp:

          RtpsRelay should not forward beacons

          Note: INFO_SRC was added to the PAD messages.

Thu May 07 18:37:42 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 684f08c10c4a674b2b74b393f0c1e2e23190f88a

        * dds/DCPS/RTPS/Spdp.cpp:

          Add ICE endpoint before potential receive in SPDP

Thu May 07 16:50:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b3ae90cb835634c97c267f8016df5ae7c3b289fa

        * java/idl2jni/tests/union/.gitignore:
        * java/idl2jni/tests/union/TestUnion.cpp:
        * java/idl2jni/tests/union/TestUnion.java:
        * java/idl2jni/tests/union/UnionTest.idl:

          extended test

Wed May 06 20:33:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b8af2b22da3b4a4b11a07a57168e05401426f2e3

          Merge pull request #1672 from jrw972/ipv6-bug-fixes

          Fix IPV6 related bugs

Wed May 06 20:32:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 73abb7d2d3ec6e6da0a31e0534115e2e09723dd8

          Merge pull request #1669 from jrw972/udp-max-message-size

          Configurable maximum message size for RTPS (rtps_udp, SEDP)

Wed May 06 14:53:19 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 242e8f9ae8be862a80712f1e0307c3271d06daf1

        * tests/DCPS/RtpsRelay/Smoke/pub_rtps.ini:
        * tests/DCPS/RtpsRelay/Smoke/sub_rtps.ini:

          Fix ini files

Wed May 06 14:48:40 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a9964f10d0d9caac887d362ac52994630443a986

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * tests/transport/best_effort_reader/run_test.pl:
        * tests/transport/rtps/run_test.pl:
        * tests/transport/rtps_directed_write/run_test.pl:

          Fix IPV6 related bugs

Tue May 05 23:03:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 98479d9128b10944ff2093b48b2ca9d25923b908

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/tests/union/.gitignore:
        * java/idl2jni/tests/union/TestUnion.cpp:
        * java/idl2jni/tests/union/TestUnion.java:
        * java/idl2jni/tests/union/UnionTest.idl:
        * java/idl2jni/tests/union/idl2jni_test_union.mpc:
        * java/idl2jni/tests/union/run_test.pl:
        * java/tests/dcps_java_tests.lst:

          Fixed a corner case for IDL union code generation in Java

Tue May 05 21:02:35 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit af91f85f3aed5d00091bb05e396db5cf3fbd685a

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.h:

          resolving PR comments

Tue May 05 20:30:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7f304135f8232defcce6e9b4cbcaff36e301a63e

          Merge remote-tracking branch 'upstream/master' into
          udp-max-message-size

Tue May 05 18:13:49 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 29c267b2d0a558eb2a79ee53cfe213fce276ac5b

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * tests/DCPS/RtpsRelay/Smoke/pub_rtps.ini:
        * tests/DCPS/RtpsRelay/Smoke/relay1.ini:
        * tests/DCPS/RtpsRelay/Smoke/relay2.ini:
        * tests/DCPS/RtpsRelay/Smoke/sub_rtps.ini:
        * tools/rtpsrelay/rtps.ini:

          Rename variables and config entries

Tue May 05 17:59:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 54c98f88c5b92d846e711636a98f19133f333ffe

          Merge pull request #1666 from mitza-oci/master

          Use reliable QoS in Instances and MultiDP tests

Tue May 05 17:59:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 8c02bc6d4004ceed5e6a82d90fd999d654bc7844

          Merge pull request #1660 from objectcomputing/rtps-inet-addr

          Use ACE_INET_Addr for RTPS configuration

Tue May 05 14:54:30 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7b8925a15039ce13bbba83e3da809301c88b03da

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * tests/DCPS/RtpsRelay/Smoke/pub_rtps.ini:
        * tests/DCPS/RtpsRelay/Smoke/relay1.ini:
        * tests/DCPS/RtpsRelay/Smoke/relay2.ini:
        * tests/DCPS/RtpsRelay/Smoke/sub_rtps.ini:
        * tools/rtpsrelay/rtps.ini:

          Expose UDP_MAX_MESSAGE_SIZE for RTPS

          The RTPS messages needed for security can be large enough that
          they
          trigger IP fragmentation. Usages of RTPS that traverse the public
          Internet will most likely use security and therefore be subject
          to IP
          fragmentation. Unfortunately, many routers and router-like
          systems
          don't support IP fragmentation correctly.

          Fortunately, RTPS supports fragmentation. The goal of this change
          to
          expose the limit at which fragmentation occurs to the user.

Tue May 05 13:55:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cb6066edbf20d8f1dfcdbd15d4ab12627e90b563

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          Fix parsing of InteropMulticastOverride

Mon May 04 19:42:22 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 13d188ba4110185477a9fa6b39021a750f19e5f7

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:

          Fix reverse dependencies

Mon May 04 13:56:34 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6ad1a47ed8d46da612005e2a212dc1fdf9348bd6

        * dds/DCPS/RTPS/Spdp.cpp:

          Fix from review

Fri May 01 21:19:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 2972e3401cf0c9d5ebbb3284c63c28cf7bb2adf9

        * tests/DCPS/Instances/SubDriver.h:
        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Use reliable QoS in Instances and MultiDP tests

Fri May 01 20:22:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 277f1aa326e61c9ee0f7dcf939244d059d3dc85b

          Merge branch 'rtps-inet-addr' of github.com:jrw972/OpenDDS into
          rtps-inet-addr

Fri May 01 20:20:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cd4772aeb1751ee54303f920390afa6d75fe25df

          Merge pull request #1665 from adamsj-oci/docker_ubuntu_focal

          Docker updates for ubuntu focal

Fri May 01 20:20:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c9ca6c762b8389a49d3a2fae5ba1df3cac060a95

          Merge pull request #1664 from jwillemsen/patch-6

          Make use of DOC Group ACE+TAO x.5.9

Fri May 01 20:20:15 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 66cc5c16b8df939d13a4aa2780675532d7b03b62

          Merge pull request #1663 from objectcomputing/mitza-travis-url

          README.md: updated Travis CI URL

Fri May 01 20:20:03 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 665f5c922a271b8ea5fc721548f7a2a0c6bf8231

          Merge pull request #1661 from mitza-oci/master

          IDL-to-C++11: corrected mapping of enum constants when enum is in
          a module

Fri May 01 20:19:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f246dae868a9df92c63e5b0a9e7c363fe4196a1c

          Merge pull request #1659 from
          simpsont-oci/datawriter_publication_match_listener_query_mask

          Fixing DataWriterImpl Listener Mask

Fri May 01 20:02:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit bd5eab199a1d30b7678a8c906e87857da06bff0c

        * java/dds/OpenDDS_DCPS_jni.cpp:

          Fix Java bindings

Fri May 01 18:16:40 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit e4940bc8c8b7e2e72254918bdfb3a28073fbed1a

        * Dockerfile:

          don't need gtest/gmock by default

          - remove gtest/gmock
          - no reason to explicitly set the C++ standard
          - run show_build_config.pl script for additional build setup
          details

Fri May 01 18:03:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b9ecb1db27fd8209d7137d4df9ccca8970d69a1a

        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:

          Fix reverse dependencies

Fri May 01 16:36:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0b0b59497271f88daf9c54ee8c42edcd1754a470

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Fixes from review

Fri May 01 08:29:31 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 066d87005a11e6e9d3f6125c69f38bc8cade62b0

        * configure:

          Make use of DOC Group ACE+TAO x.5.9

Thu Apr 30 22:00:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 60e5753da05ccc6cc5a278580a3da97315a9706a

        * README.md:

          README.md: updated Travis CI URL

Thu Apr 30 20:54:42 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 34f523cb48b65336a37e4357fe0a4b9e5542ea8c

        * dds/idl/dds_generator.cpp:
        * dds/idl/dds_generator.h:
        * dds/idl/langmap_generator.cpp:
        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:

          IDL-to-C++11: corrected mapping of enum constants when enum is in
          a module

Thu Apr 30 18:31:57 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7715e9fe72207f8de5bbeb8678ef0eae17a30dd1

        * bin/dcps_tests.lst:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * tests/DCPS/RtpsRelay/Unit/run_test.pl:
        * tests/transport/best_effort_reader/AppConfig.cpp:
        * tests/transport/rtps/subscriber.cpp:
        * tests/transport/rtps_directed_write/AppConfig.cpp:

          Use ACE_INET_Addr for RTPS configuration

Thu Apr 30 17:58:46 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 08f5e614e51d6399fda5cc6f28ecf080af3e43ab

        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy_T.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:

          add a simpler 'handle_dds_input' for udp protocols, where max
          packet size can be assumed

Thu Apr 30 17:03:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 3816d4c74656de34675f2ac9d58ac4ff4d34ac1b

        * dds/DCPS/DataWriterImpl.cpp:

          Fixing the query mask for DataWriterImpl's calls to
          on_publication_match to use PUBLICATION (not SUBSCRIPTION)

Thu Apr 30 14:38:40 UTC 2020  Jeremy Adams  <adamsj@objectcomputing.com>
        commit a725e78197781c0355ca11ae334e7fce0c986df8

        * Dockerfile:

          fixes for Focal

          - also works with Bionic

Wed Apr 29 22:32:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0357d46a4443a0473e90af034c2c4f54abdbe52e

          Merge pull request #1658 from jrw972/spdp-transport-fixes

          Use IPV4 for spdp transport test

Wed Apr 29 22:32:17 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit b21eb4ab162a80e386c666997f6f04462cc3ba2e

          Merge pull request #1657 from jrw972/dead-dog-lock

          Fix deadlock in OfferedDeadlineWatchdog

Wed Apr 29 22:32:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6125fbb4fe8dfaaed79c31c1730fbf2bb20abef2

          Merge pull request #1656 from jrw972/ice-include

          Fix missing include

Wed Apr 29 22:31:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 01bfed9301a4f1a554d79dc9522d3939f77b6893

          Merge pull request #1655 from jrw972/uninitialized-address-checks

          Don't use unitialized addresses for discovery/ICE

Wed Apr 29 22:31:44 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 9c85278bc08b08935256ce6599bf84a2873d168a

          Merge pull request #1654 from
          simpsont-oci/remove_reader_associator

          Remove reader_associator_ from RtpsUdpDataLink to prevent errant
          acknacks

Wed Apr 29 16:55:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f9ed754f9d78ed467ee91678f44e462c06ec4630

        * tests/transport/spdp/spdp_transport.cpp:

          Use IPV4 for spdp transport test

Wed Apr 29 16:33:50 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 7d12f317306dd7cec94339fdb0d8f74b9c1dc349

        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Fixes from review

Wed Apr 29 16:32:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 53a1d24c6a7c19c678e1dac7bd5ecc4b039234cf

        * dds/DCPS/RTPS/ICE/Checklist.h:

          Fixes from review

Wed Apr 29 16:05:07 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 8ea9ec7732ff01debd5b45a318e9154e96345296

        * dds/DCPS/OfferedDeadlineWatchdog.cpp:

          Fix deadlock in OfferedDeadlineWatchdog

          If deadline is being used and the write writes after the deadline
          and
          another durable reader is associating then deadlock can occur.

Wed Apr 29 14:49:32 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 2a53c1dca138f37001876235d5fcf39ed3232712

        * dds/DCPS/RTPS/ICE/Checklist.h:

          Fix missing include

Wed Apr 29 14:49:32 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d56bfd9d82d3355dba9f0313976bb5c0934a50a1

        * dds/DCPS/RTPS/ICE/Checklist.h:

          Fix missing include

Wed Apr 29 14:31:05 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a86202203a7b71ec04bbd325641710f58b723821

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Don't use unitialized addresses for discovery/ICE

Tue Apr 28 21:23:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 22157ba707a94ae0760f8d27d7498a5ebc070db7

          Merge pull request #1653 from jrw972/optional-ncm

          Make use of NetworkConfigMonitor optional in SPDP

Tue Apr 28 21:23:22 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f703fa5349f9dcd77635120f94fb49b43ddbd97b

          Merge pull request #1651 from jwillemsen/jwi-configure-20

          Detect std c++2a/c++20

Tue Apr 28 21:23:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6bc3d0ad5fd17ed10b2fc1aef0733580dafa4ab5

          Merge pull request #1646 from jrw972/spdp-data-races

          Fix data races in SPDP

Tue Apr 28 18:47:22 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 2aa4b7bcbd86a0222aa00f692f7ae6e62468ea50

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          removing reader_associator_ to prevent errant acknacks

Tue Apr 28 14:18:27 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f74cb8a2bc6ac34e2ddb4f44f669d71b3b6a4d46

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Force join_multicast_group to use JobQueue

Mon Apr 27 17:18:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 40caf25564c7adabfe6939fd85e5f903ca2c5d1d

        * dds/DCPS/RTPS/Spdp.cpp:

          Fix data races in SPDP

Tue Apr 28 13:58:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c6bbae3dd552fcd6505472e9338d3efb0536d2ad

        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * tests/transport/spdp/run_test.pl:
        * tests/transport/spdp/spdp_transport.cpp:

          Make use of NetworkConfigMonitor optional in SPDP

          This was motivated by the spdp test.

Tue Apr 28 11:07:11 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 65cc632a8c01004041ea2aaf0bd1ffa084a2994a

        * configure:

          Detect std c++2a/c++20
          (https://gcc.gnu.org/projects/cxx-status.html#cxx2a)

          * configure:

Tue Apr 28 04:42:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7db8597b4b51aa7742e52f3d21fe4a5b509ce5b4

          Merge pull request #1649 from jrw972/ipv6-no-ncm

          Try to join IPV4 and IPV6 multicast groups when no NCM

Tue Apr 28 04:42:20 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 043dd1a59770a6f114c6ecd84d9148eb1f367dc0

          Merge pull request #1648 from jonesc-oci/netCfgMod

          Do not use NetworkConfigModifier for Linux builds.

Tue Apr 28 04:41:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 680605f0801741c469933269de958335fc709455

          Merge pull request #1647 from
          iguessthislldo/igtd/tools_scripts_tweaks

          Tweaks for tools/scripts

Tue Apr 28 04:41:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 95dee0461b49a4bcffca19b1cd6ca5a3d87f0c0a

          Merge pull request #1643 from
          simpsont-oci/fix_fragmentation_issues

          Fix Fragmentation Issues

Mon Apr 27 22:00:34 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 0b228e2564d3335ea593d7d74dbb4cb7c9719c59

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Try to join IPV4 and IPV6 multicast groups when no NCM

          Problem: The logic to join multicast groups on platforms that
          don't
          have a network config monitor (NCM) creates a default NIC and
          populates it
          with an address to be compatible with the NCM logic.  If IPV6 is
          enabled, then the default address will be an IPV6 address meaning
          that
          the IPV4 multicast groups will never be joined.

          Solution: Always add an IPV4 address to the default NIC and add
          an
          IPV6 address if appropriate.

Mon Apr 27 18:44:43 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 9e798dff1cf4223260fb05dae7c324781187823b

        * dds/DCPS/transport/framework/TransportReassembly.cpp:
        * dds/DCPS/transport/framework/TransportReassembly.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:

          restructuring fragment info in transport reassembly, cutting back
          on passed total info, allowing get_gaps to handle tailing bitmap
          issues

Mon Apr 27 18:35:43 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit accf3958e858743102f748ced81f4febaa561d14

        * dds/DCPS/NetworkConfigModifier.h:

          Do not use NetworkConfigModifier for Linux builds.

          Linux builds use LinuxNetworkConfigMonitor. Trying to build with
          NetworkConfigModifier will fail unless ipv6 is enabled, since
          ACE_OS::if_nametoindex is not defined.

Mon Apr 27 18:09:46 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 3e5a95aae8d20374df523e28db2ad8e2cdc79524

        * tools/scripts/update_gitignore.pl:

          Use $! in update_gitignore.pl

Mon Apr 27 18:09:01 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit dff9f3ece2ec6fcc908a81769f6e251e7f4a3ef9

        * tools/scripts/show_build_config.pl:

          Tweak show_build_config.pl error message

Mon Apr 27 18:01:31 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 3995706f1c706bc77578e15bc4f0bb16a4042344

        * tools/scripts/setenv.csh:
        * tools/scripts/setenv.sh:

          Remove unused tools/scripts/setenv.* scripts

          To help avoid issue in
          https://github.com/objectcomputing/OpenDDS/issues/1611
          where `show_build_config.pl` assumes `tools/scripts/setenv.sh` is
          the file it's
          looking for.

Mon Apr 27 03:59:11 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 14c2d95b56b863f58c44e0a49ed8ef4fa0d59a44

          Merge pull request #1645 from mitza-oci/master

          ParticipantLocationTopic test: updated test lists

Mon Apr 27 03:58:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c275f7055773d90975d23858f108f4e60a7bc94a

          Merge pull request #1644 from iguessthislldo/igtd/863_fixes

          Replace Manual BIT Topic Check

Sun Apr 26 20:30:41 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 02a6bdcbcd151397655fd41b104a71020915bdeb

        * dds/DCPS/DataReaderImpl.cpp:

          Update dds/DCPS/DataReaderImpl.cpp

          Co-Authored-By: Adam Mitz <mitza@objectcomputing.com>

Sun Apr 26 18:45:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3c938dc56e973729b1c673e311f34bd33ef7c8ef

        * bin/dcps_tests.lst:
        * tests/security/security_tests.lst:

          ParticipantLocationTopic test: updated test lists

          tests that need security-enabled builds go in security_tests.lst

Sat Apr 25 04:29:01 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit f7b785025805e4876f2b74d488ad37de11aab650

        * dds/DCPS/DataReaderImpl.cpp:

          Tweak previous change to be more proper

Sat Apr 25 03:44:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d0238d88df42d1500581037aed20f9651356f808

        * dds/DCPS/DataReaderImpl.cpp:

          Replace Manual BIT Topic Check

          It looks like I missed this case back in
          https://github.com/objectcomputing/OpenDDS/pull/863. All checks
          for if a
          given topic is a BIT should be done using the `topicIsBIT`
          function I
          added in that PR.

Fri Apr 24 21:19:30 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit a11bc2ffeec30ac0149dc8de2a327b85679e9cd2

        * performance-tests/bench_2/control_opendds_config.ini:
        * performance-tests/bench_2/node_controller/main.cpp:

          fixing segv and performance issues in bench for ci tests

Fri Apr 24 21:18:29 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 70efb426e426c61a11181fa2e39c17a5992d0afa

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/TransportReassembly.cpp:
        * dds/DCPS/transport/framework/TransportReassembly.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:

          adding fixes for fragmentation issues

Fri Apr 24 21:17:34 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 82ae59af616cc67d97d0594ec33ef36f276bdf07

        * tests/DCPS/UnitTests/Fragmentation.cpp:

          adding fragmentation test scenarios

Fri Apr 24 16:58:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a1c791f521df6d41ac66537dca5b2199b95ef562

          Merge pull request #1639 from jrw972/ipv6-spdp-port

          Bug fixes related to IPV6 in RTPS

Fri Apr 24 13:43:48 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d5683f2a4821307372e35090c3b64da9edfaea2a

        * dds/DCPS/RTPS/Spdp.cpp:

          Add SPDP endpoint to IceAgent before use

Thu Apr 23 21:38:25 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cfa9f47726ab125eb77983c899e2ecaabc8f9faf

        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:

          Fix bugs when populating unicast locators for Rtps

          The code should assume that the port is set but the address may
          be
          ADDR_ANY.

          Also, handle IPV6 unicast addresses.

Thu Apr 23 16:34:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 461b4843d7ddbb0287469c75d9bf044c257114d2

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Retry IPV6 unicast open for SPDP

Thu Apr 23 15:26:45 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b0b89632f6edc0851f912c7da31a41d1fb9a02d8

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Don't reuse IPV4 port for IPV6 in SPDP

          This breaks certain versions of Linux.

Wed Apr 22 20:47:51 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e736eb681d2415a1dcf80ea0ca9556156a1299e4

          Merge pull request #1636 from jrw972/ice-race

          Fix race condition between SEDP STUN and SPDP

Wed Apr 22 20:47:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 286381092c5ff9921cf0bf1007374710677deb4d

          Merge pull request #1625 from jrw972/ipv6-changes

          IPV6 support RtpsRelay and ICE

Wed Apr 22 16:37:14 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 5b0f48a84e0d80e81e9592e4775106f39a4601ee

        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Failing to join a multicast group should not throw

Wed Apr 22 16:09:53 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c18272422b71d365150782896e72bd32369fa294

        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:
        * dds/DCPS/LinuxNetworkConfigMonitor.h:
        * dds/DCPS/ReactorInterceptor.h:

          Use ReactorInterceptor to avoid deadlock

Wed Apr 22 14:53:04 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7559553415bbb632f62e568df5008d1db30093e4

        * dds/DCPS/RTPS/ICE/AgentImpl.cpp:
        * dds/DCPS/RTPS/ICE/AgentImpl.h:

          WIP ICE AgentImpl locking with NetworkConfigMonitor

Tue Apr 21 19:56:59 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 425d88dc53ee9d39b63faa2227eba4251d1aaa8b

        * dds/DCPS/RTPS/Spdp.cpp:

          Don't use REUSE_ADDR on SPDP unicast sockets

Tue Apr 21 13:52:26 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4773840fe78f19129b37e979a9374ab1b2e2c774

        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:

          Fix race condition between SEDP STUN and SPDP

          SEDP can determine a server reflexive address before SPDP has
          registered its endpoint with the ICE Agent. For secure updates,
          SEDP
          will incorporate the local agent info for the SPDP endpoint.
          These
          leads to an assert since SPDP has not registered its endpoint.

          Solution: Check that the endpoint has registered with the ICE
          Agent.

Mon Apr 20 14:58:05 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3ae9285b31094fa0f9e9243383c8c988f2931951

          Merge pull request #1634 from jonesc-oci/android-changes

          Android workarounds for C++ std library issues

Fri Apr 17 22:21:50 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 0daa913a7cea5faf48bcf669a40821d3aad116c1

        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          fixed ACE_HANDLE usage

Fri Apr 17 20:18:59 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit f620c02853ad9fe7d3cbeb9980ddd8226b42b990

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          rtps_udp: corrected registration of multicast input handler

Fri Apr 17 19:35:46 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a92aa2028826402909e3d7cdaf39e8917e6df90b

        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:

          Not all compilers support preprocessor conditionals within macro
          expansion

Fri Apr 17 18:01:50 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 56906e33b3aced5698b1f52fe509b70fcb5e81d9

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * dds/DCPS/security/SSL/Certificate.cpp:
        * dds/DCPS/security/SSL/SignedDocument.cpp:

          Add Android ifdefs, read into 1k buffer.

Fri Apr 17 17:25:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 7e127690322b15cdc8345f7003ecbc8b408de55f

        * dds/DCPS/RTPS/Spdp.cpp:

          more wchar

Fri Apr 17 16:38:55 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3f7b11c91e1972a44d94e5cf60f696b80d7f6e7c

        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:

          wchar fix

Fri Apr 17 15:09:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit aacc6b94c93a53bb16f5309a15eaef48b8f14629

        * java/dds/OpenDDS/DCPS/.gitignore:
        * java/tests/participant_location/ParticipantLocationListener.java:

          Java updates for ParticipantLocationBuiltinTopic

Fri Apr 17 01:06:14 UTC 2020  Chip Jones  <jonesc@objectcomputing.com>
        commit 8cf51daf493287a6dcaf80358f407d32eec7d073

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * dds/DCPS/security/SSL/Certificate.cpp:
        * dds/DCPS/security/SSL/SignedDocument.cpp:

          Android certificate changes.

Thu Apr 16 23:23:08 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c53431bd58ddd971abf8cb16ffb9fd44243b3c6c

        * dds/DCPS/NetworkConfigModifier.cpp:

          Updated an ACE #include

Thu Apr 16 22:20:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a8ba352807473aa9a8c283bd7eced4daecaa6064

        * dds/DCPS/RTPS/Spdp.cpp:

          Update log message to specify IPv6

Thu Apr 16 14:30:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a5515b09b6daec9da1c163c322d1921fccdab3a9

          Merge pull request #1631 from mitza-oci/dockerfile-ldconfig

          Dockerfile: use ldconfig for installed libraries in
          /usr/local/lib

Thu Apr 16 14:30:39 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ee2094b99bc80b61e7848f6207cdefcec07dc4b9

          Merge pull request #1629 from jwillemsen/master

          Make use of https download.dre

Wed Apr 15 19:22:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3da4e64e54e2e3152046fa5ca221bb00bb17933b

        * Dockerfile:

          Dockerfile: use ldconfig for installed libraries in
          /usr/local/lib

Tue Apr 14 06:37:12 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 575092bad7c015da0007756b17035b7a703a2e96

        * README.md:

          Make use of https download.dre

          * README.md:

Mon Apr 13 22:55:37 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6b97cc1534c81a414280db355fbaa9ea86e5d0a9

          Merge pull request #1628 from
          jrw972/uninitialized-transaction-ids

          Fix uninitialized transaction ids in STUN

Mon Apr 13 14:17:10 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3dbb4f3cddae883b041688efe28c5b498d76441f

        * dds/DCPS/RTPS/ICE/Stun.h:

          Add missing header

Fri Apr 10 16:58:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 79d3a4624de507d639df7ac3f42ee136748cc0aa

          Merge pull request #1626 from
          ClaytonCalabrese/android_clang_visibility

          Adding Missing Exports for Getting InfoRepo Disc. Working on
          Android

Thu Apr 09 18:48:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 649b48d00d97a53e4e102ce55c47f0b584f7a036

        * dds/DCPS/RTPS/ICE/Stun.h:

          Fix uninitialized transaction ids in STUN

Thu Apr 09 13:38:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c6cefc3be7944a0b4de06ca99272b69efb67809d

        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ParameterListConverter.cpp:

          Use IPV6_V6ONLY

Thu Apr 09 13:28:50 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b7689175974e929a8063895fc44c8a9391580b8b

        * bin/dcps_tests.lst:

          Add tests to battery

Wed Apr 08 22:39:20 UTC 2020  Clayton Calabrese  <calabreseclayton@gmail.com>
        commit c0f46b8af97aeba67f17657ef696f175a06bfc0e

        * dds/DCPS/DataReaderCallbacks.h:
        * dds/DCPS/DataWriterCallbacks.h:

          exports added

Mon Mar 30 20:48:44 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f625269309301158a26579790b8c3d00549598d5

        * dds/DCPS/DiscoveryBase.h:
        * dds/DCPS/LinuxNetworkConfigMonitor.cpp:
        * dds/DCPS/NetworkConfigModifier.cpp:
        * dds/DCPS/NetworkConfigMonitor.cpp:
        * dds/DCPS/NetworkConfigMonitor.h:
        * dds/DCPS/RTPS/ICE/AgentImpl.cpp:
        * dds/DCPS/RTPS/ICE/Checklist.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.h:
        * dds/DCPS/RTPS/ICE/Ice.cpp:
        * dds/DCPS/RTPS/ICE/Ice.h:
        * dds/DCPS/RTPS/ICE/Stun.cpp:
        * dds/DCPS/RTPS/ICE/Stun.h:
        * dds/DCPS/RTPS/ParameterListConverter.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Sedp.cpp:
        * dds/DCPS/RTPS/Sedp.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.inl:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/DdsDcpsCore.idl:
        * tests/DCPS/ParticipantLocationTopic/ParticipantLocationListenerImpl.cpp:
        * tests/DCPS/ParticipantLocationTopic/ParticipantLocationListenerImpl.h:
        * tests/DCPS/ParticipantLocationTopic/publisher.cpp:
        * tests/DCPS/ParticipantLocationTopic/relay_ipv6.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_ipv6.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice.ini:
        * tests/DCPS/ParticipantLocationTopic/rtps_no_ice_ipv6.ini:
        * tests/DCPS/ParticipantLocationTopic/run_test.pl:
        * tests/DCPS/ParticipantLocationTopic/subscriber.cpp:
        * tests/DCPS/RtpsRelay/STUN/StunClient.cpp:
        * tests/DCPS/RtpsRelay/STUN/relay_ipv6.ini:
        * tests/DCPS/RtpsRelay/STUN/run_test.pl:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/lib/Relay.idl:

          IPV6 support RtpsRelay and ICE

Wed Apr 08 16:58:38 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit a81a5b8a1d294bb92d66290189d8f86a4275c709

          Merge pull request #1622 from mitza-oci/thrasher-rtps

          Updates from testing the PR #1616 changes with Thrasher

Tue Apr 07 18:18:56 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 84d87f1d68b475725cbbab3f52b06b6d26f302a8

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          code review changes; continued refinements to get tests passing
          again

Tue Apr 07 13:11:29 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 67f1926cfe284404b6305c244464454abe1ca9e2

          Merge pull request #1620 from mitza-oci/bench2-leak-fixes

          fixed leaks in bench_2

Tue Apr 07 13:11:12 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1e7fce9c4f9871695fe6edf2d046bfa0e69782b5

          Merge pull request #1623 from mitza-oci/ci-configs

          CI configuration script updates

Tue Apr 07 01:21:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c40ea536648db2817e997fc371614410b45f5c16

        * .travis.yml:

          .travis.yml: removed fuzz script, it's now in GitHub Actions

          fixes #1568

Tue Apr 07 01:19:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d107805834cd30769ce14e0cb4a647ac3bf033f2

        * azure-pipelines.yml:

          azure-pipelines.yml: removed VS2019

          Microsoft's hosted Azure Pipelines VS2019 image now uses the
          buggy compiler that crashes when attempting to compile ACE
          See https://github.com/DOCGroup/ACE_TAO/issues/1059 and
          https://developercommunity.visualstudio.com/content/problem/954522/internal-compiler-error-1925286104.html

          This commit can be reverted once a working compiler is restored
          in a future update.

Mon Apr 06 21:35:34 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 78f07dee08418201a991aef35a31124f6e6de7e0

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          Updates from testing the PR #1616 changes with Thrasher

Mon Apr 06 16:40:18 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit da8cf019aea50a6b34d7dc86e74e282e370d195b

        * performance-tests/bench_2/node_controller/main.cpp:

          fixed whitespace

Mon Apr 06 15:28:57 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 13b069911c6e41893ab0cccc939d724646719584

        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/node_controller/main.cpp:

          fixed leaks in bench_2

Sat Apr 04 20:32:27 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 1846ef9fa1adadb50e13888304198c4385b73e45

          Merge pull request #1619 from iguessthislldo/igtd/wireshark

          configure: Fix Issue with Implied --glib

Sat Apr 04 20:32:10 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d8331d74c5fc30cba2616b7f1940cc6007e71a9d

          Merge pull request #1618 from mitza-oci/ice-testing

          fixes from ICE testing

Sat Apr 04 20:31:58 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit c6954e7c35dee08ffeb29591cc2903bd4c60409d

          Merge pull request #1617 from jrw972/fix-participant-statistics

          Participant statistics in RtpsRelay not computed before write

Fri Apr 03 22:10:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 8c7d44ceb73f9e0cb8660ecd0dc5c180df1447d0

        * configure:

          configure: Fix Issue with Implied --glib

          If --wireshark[-cmake] is passed without --glib, then --glib
          should be
          implied, however that wasn't occurring early enough in the script
          for
          that to work.

          Also changed some usages of $! to $? in Qt stuff because it's
          slightly
          more correct.

Fri Apr 03 20:01:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit caab990c57cfb8b4701b522b288933ff3ad63eec

        * dds/DCPS/RTPS/ICE/Checklist.cpp:
        * dds/DCPS/RTPS/Spdp.cpp:

          fixes from ICE testing

Fri Apr 03 16:05:15 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 9bf6be73f2acf918f454ebdfc6c80ce6b5caf384

        * tools/rtpsrelay/RelayHandler.cpp:

          Participant statistics in RtpsRelay not computed before write

          The participant statistics were computed after the sample was
          written.

          Solution: Compute the participant statistics before writing the
          handler statistics.

Fri Apr 03 13:30:35 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 79ba9bacad435eab4b1c57013186988053c27b2c

          Merge pull request #1616 from jrw972/fix-reliability

          Fix reliability in rtps_udp

Thu Apr 02 21:37:10 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit beebaf273064de451240066cb51025e2f28d85ff

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:

          InfoDestinationSubmessage missing and/or not reset

          This was observed in add_gap_submsg_i where it needs to be reset
          for
          subsequent submessages and send_bundled_submessages where any
          change
          in destination should trigger the insertion of an
          InfoDestinationSubmessage.

Thu Apr 02 16:30:57 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit eebabb886050b9f8e1d86e24b32ac7f17cda9fb8

        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:

          Fix reliability in rtps_udp

          The association design requires that a writer receive an acknack
          from
          a reader and reader receives data or a heartbeat from writer.
          There
          were two issues with this design.

          If writer has no data, it will not respond to the acknack with a
          heartbeat so the writer will be associated but the reader will
          not.

          There was no reliability in the design as the reader would not
          retry
          to send the acknack.

          Solution: Add retry logic to the reader so it will resend
          acknacks and
          add logic to the writer so that it will respond with a heartbeat.

Tue Mar 31 22:12:00 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3db736b0104a33a3c94955a3cc0d9466c6047b57

          Merge pull request #1613 from jrw972/participant-statistics-redux

          Report participant statistics as detail of handler statistics

Tue Mar 31 17:47:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 6a841ab5fae9060f21c30011bda59e66c581833c

        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.h:
        * tools/rtpsrelay/lib/Relay.idl:

          From review

Mon Mar 30 23:58:36 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit cef7afe124117af01dba142f74a82f7edd5f29e9

          Merge pull request #1610 from jrw972/ice-reference-counting

          Use reference counting for ICE

Mon Mar 30 23:58:24 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 6b194469cc9b22a4e55a39a70e6fec1f55b512f5

          Merge pull request #1607 from iguessthislldo/igtd/android

          android.md: Fix Indent on List

Mon Mar 30 20:50:19 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 45f706116a23713221216054f0b304d5382ff2be

        * dds/DCPS/RTPS/ICE/AgentImpl.h:
        * dds/DCPS/RTPS/ICE/Checklist.h:
        * dds/DCPS/RTPS/ICE/EndpointManager.h:
        * dds/DCPS/RTPS/ICE/Task.h:

          From review

Mon Mar 30 19:48:18 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit e222617057e51ca3ab0524c8300fdf795b18368a

        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.h:
        * tools/rtpsrelay/ParticipantStatisticsListener.cpp:
        * tools/rtpsrelay/ParticipantStatisticsListener.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/lib/Relay.idl:

          Report participant statistics as detail of handler statistics

Fri Mar 27 21:04:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit d452cc3ac8bd69793ea68ea75b7613ac1db38b1d

        * dds/DCPS/RTPS/ICE/AgentImpl.cpp:
        * dds/DCPS/RTPS/ICE/AgentImpl.h:
        * dds/DCPS/RTPS/ICE/Checklist.cpp:
        * dds/DCPS/RTPS/ICE/Checklist.h:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.h:
        * dds/DCPS/RTPS/ICE/Task.cpp:
        * dds/DCPS/RTPS/ICE/Task.h:

          Use reference counting for ICE

          The time-based behavior of Checklists, ServerReflexiveTasks, and
          ChangePasswordTasks is governed by the AgentImpl. There was no
          way to
          remove a Task from the queue of Tasks waiting on a timer.
          Consequently, manual memory management was used to 1) prevent a
          Task
          from entering the queue twice and 2) to destroy the Task as a
          scheduled event.  The problem is the ServerReflexiveTask and
          ChangePasswordTask have the same lifetime as their parent
          object (EndpointManager) but the destruction was solely under the
          control of the ServerReflexiveTask.  Thus, a destroyed
          ChangePasswordTask may be in the queue of Tasks waiting on a
          timer.

          Solution: Change the queue of Tasks to hold weak references.

Sat Mar 28 18:51:11 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit a6026375b2e33c9c189a7f4dd76fad5413d5f7c2

          Merge pull request #1608 from
          simpsont-oci/rapidjson_windows_test_fixes

          Change RapidJSON Generator Test To Use Unicode Literals

Fri Mar 27 19:59:01 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit c29b6a6bd86a0d1668cf3697fee05e0760c4a4a4

        * tests/DCPS/Compiler/rapidjson_generator/RapidJsonTest.cpp:
        * tests/DCPS/Compiler/rapidjson_generator/RapidJsonTest.mpc:

          limit rapidjson test to c++11 systems, fix windows tests to use
          unicode literal support from c++11

Fri Mar 27 16:49:03 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 7c2225e2dee31da520a519f96a7e1a1b388b517b

        * docs/android.md:

          android.md: Fix Indent on List

Thu Mar 26 01:41:45 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 68586e6b7de9c9330de79153748d1de823917876

          Merge pull request #1606 from jrw972/big-rtps-relay-lib

          Use bigobj for RtpsRelay library

Wed Mar 25 21:03:05 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 229fb9b749f9b4fd35ee2375339acb008885b86d

        * tools/rtpsrelay/lib/lib.mpc:

          Use bigobj for RtpsRelay library

Tue Mar 24 17:12:26 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 62843c367bdce889c2baf9bf219e96dcf1b7f712

          Merge pull request #1603 from jrw972/spdp-governor

          RtpsRelay: bug fixes, rate limiting, performance statistics

Tue Mar 24 14:01:47 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 38411a0bea289a3abac7775d9081141cd6468590

        * dds/DCPS/Definitions.h:
        * docs/guidelines.md:
        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:
        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/WriterListener.cpp:
        * tools/rtpsrelay/lib/QosIndex.h:
        * tools/rtpsrelay/lib/Relay.idl:
        * tools/rtpsrelay/utility.h:

          Fix deadlock and invalid iterator in RtpsRelay

          Deadlock was a classic case for ReactorInterceptor.

          The invalid iterator occurred when expiring clients.

Mon Mar 23 15:45:17 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit a05e596a8fa52649f53b77cd9084813da7863dd1

        * tools/rtpsrelay/DomainStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/ParticipantStatisticsListener.cpp:
        * tools/rtpsrelay/RtpsRelay.cpp:

          Fix build errors

Fri Mar 20 22:27:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 83fa6f4a091eefc9a9bf9dc0981884158d66929b

          Merge pull request #1605 from jrw972/robust-ice

          ICE fixes related to invalid or stale network addresses

Fri Mar 20 21:07:36 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4ff994b4690376095b8d60e953cb2cb8a6898423

        * dds/DCPS/Definitions.h:
        * docs/guidelines.md:
        * tools/rtpsrelay/DomainStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/ParticipantStatisticsListener.cpp:

          Add constant for timestamp buffer size

Fri Mar 20 14:20:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit c0cd44ebf5a257dc4aed390a54314c2e549a9f22

        * tools/rtpsrelay/DomainStatisticsListener.cpp:
        * tools/rtpsrelay/DomainStatisticsWriter.h:
        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/ParticipantListener.h:
        * tools/rtpsrelay/ParticipantStatisticsListener.cpp:
        * tools/rtpsrelay/RtpsRelay.cpp:

          From review

Thu Mar 19 19:47:47 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit b785ed28c94255375c978d9506ebbc2a0128f773

        * dds/DCPS/RTPS/ICE/Checklist.cpp:

          Ignore stale deferred checks in ICE

Thu Mar 19 19:47:06 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit bb93498a18fc503bc3a4dc06a58c30477836e3e2

        * dds/DCPS/RTPS/ICE/AgentImpl.cpp:

          Add log message for broken platforms concerning ICE

Fri Mar 20 01:40:23 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 37d669272614880e2d29333660bab7c3e8753c89

          Merge pull request #1602 from
          simpsont-oci/bench_wchar_compile_issue

          Fixing WCHAR compile issue in Bench Common lib

Thu Mar 19 22:26:28 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 0d3277359e496e680e64ddd74c9c15e55e4bdc95

        * azure-pipelines.yml:

          adding VS2017 wchar debug build

Thu Mar 19 18:32:55 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 4492a2c0e783c84d990fb08995f7026dbdf0862f

        * tools/rtpsrelay/DomainStatisticsWriter.h:

          Fix whitespace

Thu Mar 19 18:09:03 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 3b4780c4d216dfaf13860fae247448cefd71258f

        * tools/rtpsrelay/Governor.h:

          Update RtpsRelay governor logic to have short memory

          The governor will reset when it is not active and when it has not
          been
          reset for a second.

Thu Mar 19 17:19:41 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 0fed69f32b38c0345a64054501c7b2b72e811035

        * performance-tests/bench_2/common/util.cpp:

          ifdef for non-tchar dirent in bench common lib

Thu Mar 19 03:51:21 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit cf22146f2f38a0d2bbe91289a1d9c8b7ccc818ce

        * tests/DCPS/RtpsRelay/Smoke/reporter.ini:
        * tests/DCPS/RtpsRelay/Smoke/run_test.pl:
        * tools/rtpsrelay/AssociationTable.cpp:
        * tools/rtpsrelay/AssociationTable.h:
        * tools/rtpsrelay/DomainStatisticsListener.cpp:
        * tools/rtpsrelay/DomainStatisticsListener.h:
        * tools/rtpsrelay/DomainStatisticsWriter.h:
        * tools/rtpsrelay/HandlerStatisticsListener.cpp:
        * tools/rtpsrelay/HandlerStatisticsListener.h:
        * tools/rtpsrelay/ParticipantListener.cpp:
        * tools/rtpsrelay/ParticipantListener.h:
        * tools/rtpsrelay/ParticipantStatisticsListener.cpp:
        * tools/rtpsrelay/ParticipantStatisticsListener.h:
        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/PublicationListener.h:
        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/ReaderListener.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/StatisticsHandler.cpp:
        * tools/rtpsrelay/StatisticsHandler.h:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/SubscriptionListener.h:
        * tools/rtpsrelay/WriterListener.cpp:
        * tools/rtpsrelay/WriterListener.h:
        * tools/rtpsrelay/lib/Relay.idl:

          Add statistics topics to RtpsRelay

Thu Mar 19 15:52:33 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 531805d71e87ad88318f2b02a81ed4240f69bb74

        * performance-tests/bench_2/common/util.cpp:

          Fixing WCHAR compile issue in bench common lib

Thu Mar 19 01:51:09 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit d1cc1dbfc77117bc17565092d4d3f2b9e2c1f238

          Merge pull request #1601 from mitza-oci/qt-vcpkg

          configure: updated Qt-from-vcpkg paths

Thu Mar 19 01:50:58 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 4aa5a2bbe12739a6bbe34e7e22f6745a5adfcaf9

          Merge pull request #1600 from
          simpsont-oci/add_rapidjson_config_to_bench_tests

          Add RapidJSON config to bench tests

Thu Mar 19 01:50:43 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 46a3fe0fbc7dca6dc68899312abdf356e5af378b

          Merge pull request #1598 from
          simpsont-oci/prevent_infinite_reactor_interceptor_processing

          Prevent Potential Infinite Processing Loop in ReactorInterceptor

Thu Mar 19 01:50:32 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 27bb6334fa6251b99f2ac7c318957561aaf95902

          Merge pull request #1597 from
          simpsont-oci/multi_task_improvements

          Add Filtering and Improved Unit Test for MultiTask

Thu Mar 19 01:50:16 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 24cf2e132535705a3300a5a61950a89834a4856c

          Merge pull request #1596 from
          iguessthislldo/igtd/filter_instance_register

          Fix Filtering Instance Registration by Non-Key Fields

Thu Mar 19 01:49:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 03cd2f81de423df88061c19162939ae64976d7b8

        * azure-pipelines.yml:

          azure-pipelines.yml: removed VS2015

Wed Mar 18 22:24:07 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 37ecd47f7b0bfc384c446fe3d774f1187143fbe6

        * configure:

          configure: updated Qt-from-vcpkg paths

Wed Mar 18 21:42:55 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit b57319cd7063e4a0f13cfe87451d9402843bfda3

        * tools/scripts/lint.pl:

          lint.pl: Fix Printing Issues in Github Action

Wed Mar 18 21:35:55 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e1d6e2990dbf53d4e7edc676c6dbc1e340c38964

        * tools/scripts/lint.pl:

          lint.pl: Remove Merge Mistake

Wed Mar 18 21:23:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2bc6b6b753c45a98401694f4464cd05525230677

        * .github/workflows/fuzz.yml  .github/workflows/lint.yml:
        * .travis.yml:
        * docs/guidelines.md:
        * tools/scripts/dds_fuzz.pl  tools/scripts/lint.pl:

          Rename dds_fuzz.pl to lint.pl

Wed Mar 18 21:12:44 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 358cbdbc9fa7a303493d2ecc22625c7749e902e3

          Merge remote-tracking branch 'upstream/master' into igtd/linter

Wed Mar 18 20:58:11 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit ea2f782f74340472b3c4023b8d604c0ea6fff69f

          Merge remote-tracking branch 'upstream/master' into
          igtd/filter_instance_register

Wed Mar 18 20:41:48 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit f7345d9d197ce3c5bc777e1a49d9fe0adca402a3

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:

          Tweak DataSampleHeader::valid_data()

Wed Mar 18 20:25:58 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 1f01e0b5857bd42be01ce503c32e5b7b1eadeb31

        * dds/DCPS/DataReaderImpl_T.h:
        * dds/DCPS/DataSampleHeader.h:
        * tests/DCPS/UnitTests/.gitignore:
        * tests/DCPS/UnitTests/DataSampleHeader.cpp:
        * tests/DCPS/UnitTests/UnitTests.mpc:

          Add Tests for Instance Registration Filter Bug

          - Added unit test for DataSampleHeader::valid_data().
          - Added error message to dds_demarshal().

Wed Mar 18 19:36:56 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 7431bf5424433fa1fddea636e4709318d93c4841

        * bin/dcps_tests.lst:

          add rapidjson config to bench tests

Wed Mar 18 17:45:02 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d101d1bb6bf9293ea618ddfd0730b415e3a57a8a

        * configure:

          configure: Minor Google Test Fixes

          Allow --gtest with no argument so it we can use the submodule
          without
          passing --tests.

          Set CMAKE_POSITION_INDEPENDENT_CODE to fix build error.

Wed Mar 18 15:04:14 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 621320b10d9cd79bf5883055c80d5b0f169b2f77

        * tools/rtpsrelay/RelayHandler.cpp:

          Handle STUN indications in RtpsRelay

Wed Mar 18 14:30:01 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 690de1815ca9c27917c2877fae17feb0288e52a8

          Merge pull request #1599 from jwillemsen/jwi-githubactionfuzz2

          Add fuzz github action

Wed Mar 18 14:29:47 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3a9ffcc86cf8a7091fcf0029f0cec824fce84e2d

          Merge pull request #1592 from simpsont-oci/bench_ci_tests

          Adding Small(ish) Bench Tests to Auto Test List

Wed Mar 18 07:34:56 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 589bcf567c3791011ce77aa9bdf851ae07daf564

          Merge branch 'master' into jwi-githubactionfuzz2

Wed Mar 18 07:33:46 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 8e4c47d654e84186929213fdf4d7369469754214

        * .travis.yml:

          Put back fuzz for the moment

          * .travis.yml:

Tue Mar 17 22:05:43 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 603025031e0d1643e04ca9f064b373a197de33d0

        * performance-tests/bench_2/set_bench_env.cmd:

          fixing cmd path separator

Tue Mar 17 21:54:05 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit d947f6802baef692dd04caceacb023d9d78dfccc

        * bin/dcps_tests.lst:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/set_bench_env.cmd:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          resolving review comments, fixing unmatched reader / writer
          output in test_controller

Tue Mar 17 19:36:51 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 8e4b6afb8231e81887791ecf6398240aeec60b87

        * dds/DCPS/ReactorInterceptor.cpp:

          prevent infinite processing loop in reactor interceptor and allow
          other reactor handlers to run

Tue Mar 17 19:34:19 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 017ff92325df87d745b26588c0609ec31bacfc63

        * dds/DCPS/MultiTask.h:
        * tests/DCPS/UnitTests/ut_MultiTask.cpp:

          adding pre-reactor command filtering and improved unit test for
          MultiTask

Tue Mar 17 16:15:21 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit be17ff783a3189f1bf889dc9c3ad7557ec682101

        * performance-tests/bench_2/test_controller/main.cpp:

          fixing whitespace

Tue Mar 17 14:33:30 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit 3387c9655bd9306d6e747e5302e219f880dc49cb

          Merge pull request #1595 from jrw972/ice-deadlock

          Fix ICE deadlock from multiple participants in the same process

Tue Mar 17 14:28:59 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit bd1d59c4e399fed7c51c5c2e9dcb0a5c8f186f9d

        * dds/DCPS/RTPS/ICE/Checklist.cpp:

          Update dds/DCPS/RTPS/ICE/Checklist.cpp

          Co-Authored-By: Adam Mitz <mitza@objectcomputing.com>

Tue Mar 17 14:26:13 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit f5559a86c9a9334b56fb5237bec8b65a3b642492

        * performance-tests/bench_2/run_test.pl:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/main.cpp:

          fixing bench worker relative times on windows (early wakeups
          causing extra-long waits) and increasing error conditions in test
          controller, adding start times to various run_test scenarios

Tue Mar 17 00:18:10 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2699af4b1e24a17a383443cbc70f5c4f30713cb2

        * dds/DCPS/DataSampleHeader.inl:

          No Filtering Instance Registration Non-Key Fields

          Fix for RT 22111 where instance registration samples are treated
          as full
          data samples for filtering. Bug introduced in
          https://github.com/objectcomputing/OpenDDS/pull/900

Mon Mar 16 23:30:39 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 2d43070ab3292f1d247360af3005d6996218d8b3

        * tests/DCPS/ContentFilteredTopic/Messenger.idl:
        * tests/DCPS/QueryCondition/Messenger.idl:

          Use Annotations in QueryCondition and ContentFilteredTopic Tests

Mon Mar 16 20:54:57 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit a595fe8d89b4352e0f9c484b5e43930a852b1032

        * performance-tests/bench_2/builder/ListenerFactory.cpp:
        * performance-tests/bench_2/common/PropertyStatBlock.cpp:
        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/test_controller/ScenarioManager.cpp:
        * performance-tests/bench_2/test_controller/StatusListener.cpp:
        * performance-tests/bench_2/worker/ForwardAction.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WriteAction.cpp:

          cleaning up VS2015 compile warnings / superfluous export macros

Mon Mar 16 18:48:20 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 314d803239efa77631c7a3bc4c8f40db171e1ca6

        * performance-tests/bench_2/node_controller/main.cpp:
        * performance-tests/bench_2/set_bench_env.cmd:

          avoiding copy of Process_Options and swapping dynamic_cast for
          reinterpret_cast to get node_controller working correctly in
          VS2015 / others

Mon Mar 16 18:04:52 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 8184084c2173b08b01f8eb1a67541f45ae3e0c3b

        * dds/DCPS/RTPS/ICE/Checklist.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.cpp:
        * dds/DCPS/RTPS/ICE/EndpointManager.h:

          Fix ICE deadlock from multiple participants in the same process

Mon Mar 16 02:27:06 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit e5f7c74454264d743174c0e8d02a5e341193949f

          Merge pull request #1593 from jrw972/multi-secure-deadlock

          Fix race conditions and deadlock from multiple secure
          participants

Mon Mar 16 02:26:53 UTC 2020  Adam Mitz  <mitza@objectcomputing.com>
        commit ed854cce2eaa7e9e74bed301dcaba87b0904d587

          Merge pull request #1590 from iguessthislldo/igtd/release_script

          gitrelease.pl: Fixes from 3.14 release

Sat Mar 14 12:20:39 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 740902f21a18396f49ff5644ae8aec7c7c9b4627

        * performance-tests/bench_2/run_test.pl:

          add bench_2 lib path to run_test.pl

Sat Mar 14 00:13:30 UTC 2020  Justin Wilson  <wilsonj@objectcomputing.com>
        commit 438351921c6673948b5b0b77e97cd5f979b18c5a

        * dds/DCPS/security/AuthenticationBuiltInImpl.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.cpp:
        * dds/DCPS/security/framework/SecurityRegistry.h:

          Fix race conditions and deadlock from multiple secure
          participants

Fri Mar 13 21:43:35 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit be625937170a51b5a68708f8cb9364771a377a0f

        * performance-tests/bench_2/example/config/scenario/ci_disco.json:

          fixing ci_disco scenario description

Fri Mar 13 21:36:38 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 18e069a8f3fb8026a6cb8de8a1bddc0501e4e10c

        * bin/dcps_tests.lst:
        * performance-tests/bench_2/test_controller/main.cpp:

          fixing review comments

Fri Mar 13 21:17:19 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 64800c09923245bad8ee5224121ac0fe696c6d46

        * bin/dcps_tests.lst:
        * performance-tests/bench_2/builder/DataWriter.cpp:
        * performance-tests/bench_2/builder/DataWriter.h:
        * performance-tests/bench_2/builder/Participant.cpp:
        * performance-tests/bench_2/builder/Participant.h:
        * performance-tests/bench_2/builder/Publisher.cpp:
        * performance-tests/bench_2/builder/Publisher.h:
        * performance-tests/bench_2/builder/Subscriber.cpp:
        * performance-tests/bench_2/builder/Subscriber.h:
        * performance-tests/bench_2/builder/Topic.cpp:
        * performance-tests/bench_2/builder/Topic.h:
        * performance-tests/bench_2/builder_idl/Builder.idl:
        * performance-tests/bench_2/example/config/scenario/ci_disco.json:
        * performance-tests/bench_2/example/config/scenario/ci_echo.json:
        * performance-tests/bench_2/example/config/scenario/ci_echo_frag.json:
        * performance-tests/bench_2/example/config/scenario/ci_fan.json:
        * performance-tests/bench_2/example/config/scenario/ci_fan_frag.json:
        * performance-tests/bench_2/example/config/scenario/scalability_6.json:
        * performance-tests/bench_2/example/config/scenario/scalability_7.json:
        * performance-tests/bench_2/example/config/scenario/scalability_8.json:
        * performance-tests/bench_2/example/config/worker/ci_disco.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_client.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_client_frag.json:
        * performance-tests/bench_2/example/config/worker/ci_echo_server.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_client.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_client_frag.json:
        * performance-tests/bench_2/example/config/worker/ci_fan_server.json:
        * performance-tests/bench_2/run_test.pl:
        * performance-tests/bench_2/test_controller/main.cpp:
        * performance-tests/bench_2/worker/WorkerDataReaderListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.cpp:
        * performance-tests/bench_2/worker/WorkerDataWriterListener.h:
        * performance-tests/bench_2/worker/WorkerParticipantListener.cpp:
        * performance-tests/bench_2/worker/WorkerParticipantListener.h:
        * performance-tests/bench_2/worker/WorkerPublisherListener.cpp:
        * performance-tests/bench_2/worker/WorkerPublisherListener.h:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.cpp:
        * performance-tests/bench_2/worker/WorkerSubscriberListener.h:
        * performance-tests/bench_2/worker/WorkerTopicListener.cpp:
        * performance-tests/bench_2/worker/WorkerTopicListener.h:
        * performance-tests/bench_2/worker/configs/simple_max_write_config.json:
        * performance-tests/bench_2/worker/main.cpp:
        * tests/DCPS/Prst_delayed_subscriber/.gitignore:
        * tests/transport/rtps_directed_write/.gitignore:

          adding small-ish bench tests to auto test list to catch issues
          early

Fri Mar 13 12:12:10 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 010f0ba87d3055105856b2efd33d39aed08a6fc9

          Merge pull request #1591 from
          simpsont-oci/fix_windows_bench_worker_listener_factories

          Fixing bench worker listener registration for windows

Fri Mar 13 12:11:31 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 2bc0740ac553c8b292472683b61ca84004146d8a

          Merge pull request #1525 from
          simpsont-oci/multi_task_for_adjustable_timers

          Add / Use MultiTask for an adjustable timer for local SPDP
          announcements and RTPS Heartbeats

Fri Mar 13 01:05:56 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 58dd682faa72900768cf656ed65746f5f2cef092

        * performance-tests/bench_2/builder/ListenerFactory.cpp:
        * performance-tests/bench_2/builder/ListenerFactory.h:
        * performance-tests/bench_2/worker/main.cpp:

          switching case for registration functions

Thu Mar 12 21:17:11 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f342bef60be9b451dfdf570802463f9423b04607

        * tools/rtpsrelay/AssociationTable.cpp:
        * tools/rtpsrelay/lib/QosIndex.h:

          Improve lookup of destination guids in RtpsRelay

          - Use hash
          - Avoid getting list of matched readers/writers

Thu Mar 12 21:31:12 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit 155a61f5b228796ece6aa1c658e18d758f4cf2f7

        * tools/rtpsrelay/PublicationListener.cpp:
        * tools/rtpsrelay/ReaderListener.cpp:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RtpsRelay.cpp:
        * tools/rtpsrelay/SubscriptionListener.cpp:
        * tools/rtpsrelay/WriterListener.cpp:
        * tools/rtpsrelay/rtps.ini:
        * tools/rtpsrelay/utility.h:

          Improve logging in the RtpsRelay

Thu Mar 12 21:27:00 UTC 2020  Justin R. Wilson  <wilsonj@objectcomputing.com>
        commit f4d8fcbf5322ff9151692173bf25b87a817e50f6

        * tools/rtpsrelay/Governor.h:
        * tools/rtpsrelay/RelayHandler.cpp:
        * tools/rtpsrelay/RelayHandler.h:
        * tools/rtpsrelay/RtpsRelay.cpp:

          Add Governor to RtpsRelay

          A message resulting in high fan-out, like an SPDP broadcast from
          the
          Application Participant, has the potential to flood the network
          with
          datagrams, many of which would be dropped.

          This change adds a Governor for incoming messages that generate
          more
          than one send.  A measured throughput is compared to a maximum
          throughput to determine if the send needs to be delayed. After
          the
          delay, the message is sent (regardless of the throughput) to
          avoid
          starvation.

Thu Mar 12 02:10:24 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit b2820f2f7555937a1a6c93243ada7288c8292aad

        * performance-tests/bench_2/builder/ListenerFactory.cpp:
        * performance-tests/bench_2/builder/ListenerFactory.h:
        * performance-tests/bench_2/worker/main.cpp:

          fixing worker listener registration for windows

Wed Mar 11 04:12:50 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 6e2d05c1b23cbc39b9b4e615fadfc63cd52ace4f

        * dds/DCPS/ConfigUtils.h:

          fixing configutils compile error for safety profile

Tue Mar 10 19:05:51 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 49dcd9cc6979bb4fc9361a94cb3f94fa07c4caae

          Merge branch 'master' into multi_task_for_adjustable_timers

Tue Mar 10 19:02:35 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit dcb17bce07dea68ba63eaf29cd52ffb0cd196fa8

        * dds/DCPS/ConfigUtils.h:
        * dds/DCPS/MultiTask.h:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * tests/DCPS/UnitTests/ut_MultiTask.cpp:

          addressing compile errors and review comments... renaming a few
          things and pushing 'magic' numbers into configurable locations

Thu Mar 05 23:40:01 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 8f59055beaffa9d27828cc08aa6b516c15b3f13b

        * tools/scripts/gitrelease.pl:

          gitrelease.pl: Fixes from 3.14 release

          - Fix:
          - Verifying and inserting release status message into `NEWS.md`
          - Creating release flag file
          - Interpreting command exit statuses for extracting ACE/TAO and
          generating Doxygen files.
          - Use passive FTP connection by default with option for an active
          one.
          - Add different commit message for post release changes.
          - Die immediately when `VERSION` argument is invalid.

Thu Mar 05 21:03:41 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit d3c00ab1193e148ea4c4ca67c06b5602a46d6ecf

        * NEWS.md:
        * PROBLEM-REPORT-FORM:
        * VERSION.txt:
        * dds/Version.h:

          OpenDDS Post Release 3.14

Thu Mar 05 18:49:29 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 24b89d814a6b0b8ca0f002835596a0497b9adc29

        * tools/scripts/gitrelease.pl:

          OpenDDS Release 3.14

Thu Feb 27 13:27:33 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 083b38960f1f9ef0a180822ed4699407d91056a2

        * .github/workflows/fuzz.yml:

          dds_fuzz needs ACE/TAO

          * .github/workflows/fuzz.yml:

Thu Feb 27 13:25:10 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 2e64a8244ea03b7eaf807b25477e6ad2e84e6ea3

        * .github/workflows/fuzz.yml:

          Changed shell

          * .github/workflows/fuzz.yml:

Thu Feb 27 13:16:18 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0b1bac0d2490f04a30dff8dbedb13a59978a152f

        * .github/workflows/fuzz.yml:

          Fixed error

          * .github/workflows/fuzz.yml:

Thu Feb 27 13:15:32 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 0988f70c999066c18f3adf68b1e3c87e98e14fd6

        * .github/workflows/fuzz.yml:

          Use different way to remove dirs

          * .github/workflows/fuzz.yml:

Thu Feb 27 13:12:43 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit f1789dbd56ce8e1c750d52b1d975ad48650d20e5

        * .github/workflows/fuzz.yml:

          Removed semi colon

          * .github/workflows/fuzz.yml:

Thu Feb 27 13:11:09 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit 1be6dc18fb76d6105abeb0b7af835aee0c9cfe4b

        * .travis.yml:

          Removed fuzz from travis-ci, now running with github actions

Thu Feb 27 13:10:16 UTC 2020  Johnny Willemsen  <jwillemsen@remedy.nl>
        commit dc80f79ab5ce49437e756ffe9f89f639118b98e8

        * .github/workflows/fuzz.yml:

          Add fuzz github action

Sat Feb 15 06:30:51 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 4b7ae965aac955961884c3056874da2621deed02

        * docs/conf.py:
        * docs/logo.svg:
        * docs/logo_276_186.png:

          png logo for pdf ouput

Sat Feb 15 05:16:43 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit a6f36734e1b397ea3ea8723c67fd84f99336f11b

        * docs/api.rst  docs/apiref/cpp_api.rst:
        * docs/conf.py:
        * docs/custom.css:
        * docs/devguide/images/dcps.png:
        * docs/devguide/introduction.rst:
        * docs/devguide/preface.rst:
        * docs/index.rst:

          Add Part of DevGuide to docs

          - Remove reference to existing md files except guidelines for
          now.
          - Fix Logo Size
          - Add Comments as attenion directives
          - Add logo to LaTeX/PDF output
          - Add links to opendds.org and Github repo

Fri Feb 14 20:00:33 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 66f690d7c991fb0dab6d87c27269764340a7aa07

        * docs/api.rst:
        * docs/conf.py:
        * docs/index.rst:

          Add API Reference

Thu Feb 13 04:17:13 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e8dc09134453d88260068ddb944d0716f6765dac

        * docs/conf.py:

          Set master doc

Thu Feb 13 04:03:06 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit e2271c7cb9197daa5709546ded74cb8f37a98b5c

        * docs/index.rst:

          Add Docker

Thu Feb 13 03:46:37 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 921df312453c0ad7b5e42cabd949960e0b42e7ce

        * docs/.gitignore:
        * docs/Makefile:
        * docs/conf.py:
        * docs/index.rst:
        * docs/make.bat:

          Add Sphinx

Thu Feb 13 02:22:26 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 9af97dc79957b95611475222fff03e0138aa6967

        * docs/logo.svg:

          Remove exc perms on logo.svg

Thu Feb 06 01:22:31 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 49ac737989ea59761dfbbfc1fe86b0f00eed2cfa

        * tests/DCPS/UnitTests/ut_MultiTask.cpp:

          More Coverity Changes

Thu Feb 06 00:08:09 UTC 2020  Timothy Simpson  <32278075+simpsont-oci@users.noreply.github.com>
        commit 9c757cc60e8af136927917f1a862d150fa927dbf

        * tests/DCPS/UnitTests/ut_MultiTask.cpp:

          Codacy Issue Resolution

Wed Feb 05 21:30:03 UTC 2020  Timothy Simpson  <simpsont@objectcomputing.com>
        commit 91568c84ae1f96587eb5d87bc3165514f4300525

        * dds/DCPS/MultiTask.h:
        * dds/DCPS/RTPS/Spdp.cpp:
        * dds/DCPS/RTPS/Spdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * tests/DCPS/UnitTests/.gitignore:
        * tests/DCPS/UnitTests/UnitTests.mpc:
        * tests/DCPS/UnitTests/ut_MultiTask.cpp:

          add MultiTask for an adjustable timer in the vein of
          Sporadic/PeriodicTask, update SPDP's send_listener_ and RTPS's
          heartbeat_ to use it

Mon Jan 13 17:55:38 UTC 2020  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit ae76fd2a54ca48ba2f7967a4c13ea91b666af84c

        * tools/scripts/dds_fuzz.pl:

          Add Check For Non-Prefixed Public Macros

          Added check for public macros not beginning with OPENDDS or ACE.

          Added because of
          https://github.com/objectcomputing/OpenDDS/issues/1433.

Sat Nov 09 00:31:32 UTC 2019  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 6487f83ce9a3fc6f3c26426af803077fcec1318e

        * tools/scripts/dds_fuzz.pl:

          dds_fuzz.pl: Fix Syntax Error

Fri Nov 08 22:43:25 UTC 2019  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 98f150e8048078d9721e28c384ad41cdd49f3cba

        * tools/scripts/dds_fuzz.pl:

          Expand dds_fuzz.pl to do Basic Text File Checks

          - Pick off where I'm leaving it in
          https://github.com/objectcomputing/OpenDDS/pull/1347.
          - Rewrote to have a more declaritive and generic structure.
          - Take over generic text file checks from ace fuzz.pl. Instead of
          just
          checking a file based on its file name/extention, if perl
          considers it
          to be a text file, do the basic text file checks unless a file
          name
          patern is blacklisted.
          - Do other checks like empty files, redundent newlines, and
          binary files

Thu Oct 31 03:52:02 UTC 2019  Fred Hornsey  <hornseyf@objectcomputing.com>
        commit 9b0dd736a3a3f61d6035a7c28dde4ee14c8bdf96

        * tools/scripts/dds_fuzz.pl:

          dds_fuzz.pl: tabs in cmake files

Wed Oct 30 22:03:13 UTC 2019  Fred Hornsey  <hornseyf@objectcomputing.com>

        * tools/scripts/dds_fuzz.pl:

          dds_fuzz.pl: trailing whitespace in cmake files

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
