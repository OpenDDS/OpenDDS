Fri May 18 19:26:02 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS version 0_12 released.

Fri May 18 18:05:41 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/reliable_mcast.conf:

          Fixed config file.

Fri May 18 16:14:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DDS/Messenger/reliable_mcast.conf:
        * DevGuideExamples/DDS/Messenger/sub_reliable_mcast.ini:

          Added configuration files for reliable multicast.

Fri May 18 15:08:29 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added DevGuideExamples/DDS/Messenger using reliable multicast.

Fri May 18 14:51:25 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Extended the DevGuideExample to work with reliable multicast.  Thanks
          to Ciju for actually doing this work.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:

          Read the configuration from the transport section of the ini file.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
          Just like UDP, always report the transport as "acked" because the
          acknowledgement for connection establishment doesn't actually happen
          in reliable multicast.

Thu May 17 19:16:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Added a note on a work-around needed to properly build the tests with
          TAO 1.5a patch level "0".

Thu May 17 18:40:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Minor clarifications and removed contact info (email addrs) since
          it's now in README.

Thu May 17 18:17:51 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * ChangeLog:

          Fixed a reference to the previous ChangeLog.

        * DDS_info.txt:

          Added an example of using -DCPSInfoRepo.

        * DDS_release_notes.txt:
        * README:

          Corrected spelling errors.

Thu May 17 18:16:18 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:

          Add note regards reliable multicast default configuration
          status.

Thu May 17 15:28:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Documented the current state of the tests.

Thu May 17 14:15:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/vc8_warnings.mpb:

          Moved vc8_warnings.mpb here instead of having it in config-legacy.

        * MPC/config-legacy:
        * MPC/config-legacy/README.txt:
        * MPC/config-legacy/vc8_warnings.mpb:

          Removed these files.

        * docs/INSTALL:

          Documented this change.

Thu May 17 13:55:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Add entry about InfoRepo persistence mechanism.

Wed May 16 21:39:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp(unregister_all):

          Added a check for a NULL DataSampleListElement in sending_data_.  The
          sub_init_loop stress test has shown a segfault here.

Wed May 16 20:05:37 UTC 2007  Byron Harris  <harris_b@ociweb.com>

        * README:

          Removed spell checker content brought over from the release notes.

Wed May 16 19:27:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:

          When -Config STATIC is used, don't use -ORBSvcConf tcp.conf since it
          uses dynamic loading.

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Linked with SimpleTCP so that static builds can work too.

Wed May 16 19:24:12 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Removed obsolete notes and made other improvements.

Wed May 16 18:09:17 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Increased timeout to be more tolerant of slow machines, fixed logic
          errors in the perl script (using an uninitialized variable).

Wed May 16 17:46:01 UTC 2007  Byron Harris  <harris_b@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Moved content in the release notes not related to changes
          between releases to the README.

Wed May 16 17:42:27 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/debug.cpp:

          Added newline at end of file to avoid warning from gcc.

Wed May 16 16:01:30 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
          Layout changes. Remove comments.

Wed May 16 15:09:05 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/debug.cpp:
        * dds/DCPS/debug.h:
        * dds/DCPS/Service_Participant.cpp:

          Create a function to set the DCPS_debug_level.

Tue May 15 19:39:55 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Rename variables to descriptive names.

        * dds/InfoRepo/PersistenceUpdater.cpp:
          removed couple of debug messages.

Tue May 15 15:47:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Removed redirection of STDOUT and STDERR streams in Perl.  This turns
          out to be incompatible with a Perl process in Windows that itself has
          its output or error streams redirected to files.  Instead we now use
          -ORBLogFile to redirect test error/log messages to a file.

Tue May 15 04:01:27 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger_ZeroCopy/DataReaderListener.cpp:

          Update per updates to the Dev. Guide.

Mon May 14 18:55:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/unit/Main.cpp:

          Use ACE_Time_Value to compare times in order to hide platform
          differences in signed/unsigned time values.

Mon May 14 17:57:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Reinstated a corrected version of the change that was reverted in...
          Sun May 13 21:53:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/INSTALL:

          Updated installation instructions.

Sun May 13 21:53:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Partially reverted the change from...
          Fri May 11 14:01:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          ...since even though it worked for static builds, it broke many of
          the shared-library builds.

Sun May 13 21:10:38 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          Fixed the Doxygen config to pick up all library source files.

Fri May 11 16:25:43 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc:
        * etc/dds.doxygen:

          Added a Doxygen configuration file for DDS.

Fri May 11 14:41:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Re-enabled the Reconnect test.

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Reverted some of my changes from...
          Thu May 10 14:50:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          ...it turns out that the redirected STDERR or STDOUT needs to be
          closed before STDERR or STDOUT is re-opened.  The part of yesterday's
          change that remains is that the "saved" streams are not closed.

Fri May 11 14:01:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        Changes to allow BIT functionality in static builds (for now anyway,
        BIT always uses SimpleTCP as its transport implementation).

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Initialize the Loader object in the ACE Service Configurator.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepo_bits.mpb:

          Link the SimpleTCP library and initialize it as long as the MPC
          feature built_in_topics = 1.

        * tests/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Modified to work in static builds.

Thu May 10 14:50:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Test scripts that redirect stdout or stderr need to not close the
          file handles after the redirection is done.  This prevents the
          remainder of the script from producing output.

Wed May 09 22:46:51 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * DDS_release_notes.txt:

          Cleanup of zero-copy implementation per review.

        * DDS_info.txt:

          Add note on what it looks like when the TCP transport library is unavailable.

        * tests/DCPS/Messenger_ZeroCopy:
        * bin/dcps_tests.lst:

          Moved tets/DCPS/Messenger_ZeroCopy to
              DevGuideExamples/DDS/Messenger_ZeroCopy.
          And removed it from the nightly build tests because it
          is an example and the ZeroCopyRead test is a true test.

        * DDS_zero-copy.mwc:

          Removed DDS_zero-copy.mwc becuase it was temporary.

Wed May  9 15:52:21 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Continued documenting changes since 0.11 was released.

Wed May  9 15:23:33 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Pass -NOBITS on the DCPSInfoRepo command line since this test doesn't
          use BITS.  This makes the test compatible with static builds.

Wed May  9 14:02:02 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Use unsigned ints to eliminated signed/unsigned mismatch warnings.

Wed May  9 13:48:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/INSTALL:

          Added some information on supported platforms and building DDS.

Tue May 08 23:41:25 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/TCPProfilingTest/common.h:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:

          Added option to use Zero copy read.

        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:

          Changed to disable Built In Topic usage.

Tue May  8 19:12:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/WriteDataContainer.cpp:

          Removed ACE_THROW_SPEC(()) clauses from functions that aren't
          overrides of skeleton functions.  ACE_THROW_SPEC is not necessary and
          causes problems on platforms that check exceptions against the
          throw() clause.  In this case, we saw test failures because
          servant_to_reference didn't declare CORBA::UserException even though,
          as the comments indicated, it can throw POA::ObjectNotActive and
          other user exceptions.  The common C++ point of view these days is
          that throw() clauses are more trouble than they're worth.

Tue May  8 16:09:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * rules.dds.GNU:

          Added the default value (1) for built_in_topics.

Mon May  7 22:18:31 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Updated release notes to summarize some of the work that's been done
          since the 0.11 release.  This isn't complete yet.

Fri May 04 21:39:50 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/README:

          Added information about new tests.

        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/main.cpp:

          Fixed unreferenced variable warning.

        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/raw_tcp_latency_publisher.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/raw_tcp_latency_subscriber.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/raw_tcp_publisher.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/raw_tcp_subscriber.mpc:

          Replaced deprecated command

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.h:

          Fixed warnings and removed commented out code.

        * performance-tests/DCPS/TCPProfilingTest/repo.conf:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:

          Removed unnecessary config file.

        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:

          Removed old vc6 code.

Fri May  4 16:07:37 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/unit/Main.cpp:
          explicit cast to clear scoreboard warnings.

Fri May  4 15:38:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.cpp:

        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:

          Renamed methods that were overriding inherited virtual methods.
          This fixes warnings from Borland and SunCC.

Thu May 03 23:50:40 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/raw_tcp/common/TestData.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/common/TestException.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/raw_tcp_latency_publisher.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/split_pub.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/raw_tcp_latency_subscriber.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestStats.h:

         Added a raw tcp latency test to allow for comparison.

        * performance-tests/DCPS/TCPProfilingTest/common.h:
        * performance-tests/DCPS/TCPProfilingTest/conf.ini:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPProfilingTest/domain_ids:
        * performance-tests/DCPS/TCPProfilingTest/publisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common/TestData.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common/TestException.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/raw_tcp_publisher.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TcpPublisher.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1xn.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nx1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nxn.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/raw_tcp_subscriber.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestStats.h:
        * performance-tests/DCPS/TCPProfilingTest/README:
        * performance-tests/DCPS/TCPProfilingTest/repo.conf:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TCPProfilingTest/testMessage.idl:
        * performance-tests/DCPS/TCPProfilingTest/TestStats.h:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/Writer.h:

          Adding a throughput test that uses SimpleTcp transport.
          The best comparison is to change the idl to a bounded sequence.

Wed May  2 22:03:56 UTC 2007  Scott Harris <harris_s@ociweb.com>

      Merged https://svn.dre.vanderbilt.edu/DOC/DDS/branches/20070501_zero_copy_take
      branch (from 644 to 654) with changes indented below.

        Wed May  2 19:43:20 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/SubscriberImpl.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:

                        Add no existing loans precondition check to delete_datawriter.
                        And test for it.

                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopyAllocator_T.h:
                        * dds/DCPS/ZeroCopyAllocator_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeqBase.h:

                        Code cleanup.

        Tue May  1 23:32:14 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Avoid build warnings.

        Tue May  1 23:22:14 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * DDS_zero-copy.mwc:
                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:

                        Cleanup/simplify this zero-copy example.

                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Add test of providing an allocator.


        Tue May  1 22:08:44 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:

                        Support zero-copy take.

                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:

                        Update test to cover zero-copy take.

                        * tests/DCPS/ZeroCopyRead/run_test.pl:

                        Remove unneeded code.

Wed May  2 14:32:44 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
          Removed unused parameters to cleanup scoreboard warnings.

        * tests/DCPS/FooTest5/run_test.pl:
          minor cleanup.

        * tests/DCPS/ZeroCopyRead/main.cpp:
          Remove unused variables to cleanup scoreboard warnings.

Mon Apr 30 16:00:52 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/DCPS/CPPTemplate.pm:
          Modify ULong to Long to get rid of scoreboard warnings.

Sat Apr 28 19:04:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:

          Added a 'requires' for the built_in_topics MPC feature.

Fri Apr 27 15:07:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:

          Fixed the case of "monitor.cpp" in the mpc file.

Thu Apr 26 23:18:51 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Enabled the builtintopic unit test and added the new
          builtintopic test.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Uncommented some debugging message.

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.h:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/Messenger.idl:
        * tests/DCPS/BuiltInTopicTest/README:
        * tests/DCPS/BuiltInTopicTest/Writer.h:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/domain_ids:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/pub.ini:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/sub.ini:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopicTest/tcp.conf:

          Added the built-in-topic test to verify if a new
          participant or old participant receive the same
          built-in-topic data.

        * tests/DCPS/TransientLocalTest/pub.ini:
        * tests/DCPS/TransientLocalTest/sub.ini:

          Added missing files.

        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:

          Removed these files since it's idl and template generated
          code.

Thu Apr 26 19:14:04 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:

          Removed process_id and hostname from ParticipantBuiltinTopicData
          struct. These fields are accidently added during previous commit.

Thu Apr 26 16:01:23 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * bin/dcps_tests.lst:

          Added zero-copy functional test, tests/DCPS/ZeroCopyRead/run_test.pl

Thu Apr 26 14:44:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/HTemplate.pm:

          Method declarations within the class definition should not have the
          class's scope resolution prepended.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:

          Added an export macro on this class.  Thanks to Wallace Zhang for
          reporting this one.

Thu Apr 26 14:25:09 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.cpp:

          Fixed bug in transport and DCPS layer that remove_association()
          removes all assoications related to the remote id provided by
          the DCPSInfoRepo. It should just remove the association of
          the remote id and local id and the link only used by them.

        * bin/dcps_tests.lst:

          Added TransientLocalTest test.

        * tests/DCPS/TransientLocalTest/DataReaderListener.h:
        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:
        * tests/DCPS/TransientLocalTest/Messenger.idl:
        * tests/DCPS/TransientLocalTest/README:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/TransientLocalTest/Writer.h:
        * tests/DCPS/TransientLocalTest/Writer.cpp:
        * tests/DCPS/TransientLocalTest/domain_ids:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/tcp.conf:

          Added new test to test DataWriter with TRANSIENT_LOCAL durability
          will resend samples in sent list and sending list to the new
          associated datareaders.

Wed Apr 25 23:31:31 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * tests/DCPS/ZeroCopyRead/run_test.pl:

          Turn off BIT on the client side (since it is off on the InfoRepo).

Wed Apr 25 23:11:43 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

          Tell Subversion that these are resolved -- svn novice.

Wed Apr 25 22:38:56 UTC 2007  Scott Harris <harris_s@ociweb.com>

          Merge RT10633_zero_copy_read_branch from start, 564, to revision 625.
          "start is defined by tags/RT10633_zero_copy_read.

        * bin/dcps_tests.lst:

          Make performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl run
          both with zero-copy read (the default) and single-copy read.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          The following unit test projects: DcpsFooType, DdsDcps_UnitTest,
          and dcpsinfo_test_subscriber do not allow the DataReaderImpl
          to have pure virtual methods like auto_return_loan.


        * dds/DCPS/DataReaderImpl.h:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

          Resolved conflicts in the above files.

        Wed Apr 25 16:23:49 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeqBase.h:

                        Get it to build with gcc v 3.4.4.

        Wed Apr 25 15:45:49 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopyAllocator_T.h:
                        * dds/DCPS/ZeroCopyAllocator_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DdsDcps.mpc:

                        Gave each class its own set of files (.h, .inl, .cpp)
                        to avoid a circular include problem.

        Tue Apr 24 23:42:46 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DCPS/ZeroCopySeqBase.cpp:
                        * dds/DCPS/ZeroCopySeqBase.h:
                        * dds/DCPS/ZeroCopySeqBase.inl:
                        * dds/DdsDcps.mpc:

                        Properly inline zero-copy read support classes.

        Tue Apr 24 20:10:51 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Implement automatic return_loan.

                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/Simple.idl:

                        Add automatic return_loan test.
                        Test to be sure sample and Info destructors are called.

        Mon Apr 23 23:35:36 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:

                        Fix a delete while zero-copy sequence has reference bug.

                        * dds/DCPS/DataReaderImpl.cpp:

                        Minor comment change.

                        * tests/DCPS/ZeroCopyRead:
                        * tests/DCPS/ZeroCopyRead/domain_ids:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:
                        * tests/DCPS/ZeroCopyRead/run_test.pl:
                        * tests/DCPS/ZeroCopyRead/Simple.idl:
                        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:

                        Create a functional test for zero-copy read.


        Mon Apr 23 18:52:20 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * dds/DCPS/ReceivedDataElementList.h:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Implement zero-copy read FoodDataReaderImpl::return_loan "template".
                        Add reference counting of sample data to avoid deleting
                        samples out from under a zero-copy read sequence.
                        Make zero-copy read code support single-copy and zero-copy reads.
                        Make additional check defined by the DDS specification.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

                        Do "zero-copy" read using the basic sample sequence.

                        * DDS_release_notes.txt:

                        Show how to build without BIT support.

        Fri Apr 20 15:31:52 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Allow the zero-copy read sequence type to be used with single-copy
                        reads.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

                        Modify the test to allow testing of the zero-copy read capable
                        sequence type with zero or single copy reading.

        Thu Apr 19 17:48:29 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Resolve gcc build errors and warnings.

        Wed Apr 18 18:50:41 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DdsDcps.mpc:

                        First round of zero-copy read support.

                        * performance-tests/DCPS/TCPListenerTest/common.h:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

                        Make zero-copy read the default for this performance test.
                        Changed from 1200 to 700 microseconds per 8KB sample for 1-1 on WinXP.

                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:


Wed Apr 25 13:11:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added a configuration NO_BUILT_IN_TOPICS that will identify builds
          that have BIT support disabled.  Once these tests are uncommented,
          they will be not be run on builds that have NO_BUILT_IN_TOPICS set as
          a configuration.

Wed Apr 25 17:49:12 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          If DDS is compiled with built_in_topics=0 then default 'bit_enabled'
          to false.

Wed Apr 25 13:11:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added a configuration NO_BUILT_IN_TOPICS that will identify builds
          that have BIT support disabled.  Once these tests are uncommented,
          they will be not be run on builds that have NO_BUILT_IN_TOPICS set as
          a configuration.

Wed Apr 25 00:38:56 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Fixed bug of creation of incorrect queues when clear() was
          called.  The elems_ and queue_ were being given the wrong sized
          queues.

Tue Apr 25 00:15:33 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a bug in built-in-topic datawriter that should resend
          data in sending and sent list instead of sending unsent list.

        * dds/DCPS/DomainParticipantImpl.cpp:

          Rolled back the work around.

Tue Apr 24 18:41:35 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Added 2 seconds delay after participant creates the built-in-topic
          datareaders. This is a work around for the problem of the
          built-in-topic data lost during fully association period. We need
          find a better solution to synchronize the bit data publishing and
          subscribering.

Thu Apr 19 20:22:30 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:

          Rolled back part of changes in last commit - moved
          the send() call inside the lock since it could cause
          deadlock situation when there are multiple datawriters with
          multiple writing threads in a process. The deadlock situation
          happens when first writing thread calls send_start(), second
          writing thread calls send_start(), first writing thread calls
          send_stop() which hold the lock in DataLinkSet and calls second
          datawriter data_delivered(), the second datawriter holds its
          writer's lock and stuck on acquiring the lock in DataLinkSet.

Wed Apr 18 23:58:56 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:

          Moved the send() call outside the lock since the
          TransportInterface::send() is thread safe and
          added another parameter to data_available() to avoid
          duplicate code of resend_data_available() from
          data_available().

Wed Apr 18 18:28:20 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/DataWriterImpl.cpp:

          Removed unused parameter from reenqueue_all().

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed "no newline at end of file" warning.

Wed Apr 18 18:28:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Removed tests/DCPS/Messenger_Imr from the list.

        * examples:
        * examples/DCPS:

          Created new directories.

        * examples/DCPS/Messenger_IOGR_Imr:
        * examples/DCPS/Messenger_Imr:

          Moved existing tests from the corresponding directories in
          tests/DCPS.

        * tests/DCPS/Messenger_IOGR_Imr:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.h:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger.idl:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * tests/DCPS/Messenger_IOGR_Imr/README:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.h:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/domain_ids:
        * tests/DCPS/Messenger_IOGR_Imr/pub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * tests/DCPS/Messenger_IOGR_Imr/sub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * tests/DCPS/Messenger_Imr:
        * tests/DCPS/Messenger_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_Imr/Messenger.idl:
        * tests/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * tests/DCPS/Messenger_Imr/README:
        * tests/DCPS/Messenger_Imr/Writer.h:
        * tests/DCPS/Messenger_Imr/Writer.cpp:
        * tests/DCPS/Messenger_Imr/domain_ids:
        * tests/DCPS/Messenger_Imr/pub.ini:
        * tests/DCPS/Messenger_Imr/publisher.cpp:
        * tests/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/Messenger_Imr/sub.ini:
        * tests/DCPS/Messenger_Imr/subscriber.cpp:

          Removed these files.  (They have been moved to examples/DCPS.)

Wed Apr 18 17:00:11 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/DdsDcpsInfrastructure.idl:
          Use Long (instead of int) in IDL files.

Wed Apr 18 16:25:09 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These main changes are fixing the built-in-topics bugs and
        supporting TRANSIENT_LOCAL_DURABILITY_QOS.

        *  bin/DCPS/CPPTemplate.pm:

           Made dispose ignore the case of bit sample not registered
           since it could hanppen.

        *  dds/InfoRepo/DCPSInfoRepo.cpp:

          Made poa_manager activate() called before initialize bit.
          Otherwise a TRANSIENT exception will be caught.

        *  dds/InfoRepo/DCPS_IR_Domain.cpp:

          Made the built-in-topic datawriter use the
          TRANSIENT_LOCAL_DURABILITY_QOS instead of using the
          TransientKludge. However, the TransientKludge is still
          be used for other purpose such as using that so the
          domainparticipant in DCPSInfoRepo will not create the
          bit datareader. We may need rename it.

        *  dds/DCPS/DataSampleList.cpp:
        *  dds/DCPS/DataSampleList.inl:
        *  dds/DCPS/DataSampleList.h:

          Made the next_send_sample_/previous_send_sample link isolated
          from the next_sample_/previous_sample link. When
          inserting/deleting DataSampleElement to one of the links will
          not change the other link.
          Added sub list to the DataSampleElement to support the
          transient local qos. The DataSampleElement defaults to have
          0 subs which means it will be sent to all datalinks
          otherwise it will be sent to the specified subscribers.

        *  dds/DCPS/DataReaderImpl.h:
        *  dds/DCPS/DataReaderImpl.cpp:

          - Added bit flag.
          - Added RepoId->InstanceHandler map to cache the info retrieved
            upon add_association any operation after will look the cache
            to get the instance handler such as for listener callback. This
            will solve the problem that remove_association will fail look
            up the bit information.
          - Fixed a bug that does not synchronize the reference counting
            on datareader servant. This causes access violation on TCPListener
            test sometimes.

        *  dds/DCPS/WriteDataContainer.cpp:
        *  dds/DCPS/WriteDataContainer.h:

          - Made all internal list(unsent, sending, released, sent) using
            next_send_sample/previous_send_sample link, instance sample list
            and waiting instance sample list using next_instance_sample link
            and added the sample_holder which uses next_sample/previous sample
            link to hold all samples by the order of write.
          - Supported reenqueue_all to specified subscribers.

        *  dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:

           Corrected the class name in a debug message.

        *  dds/DCPS/transport/framework/DataLink.h:
        *  dds/DCPS/transport/framework/DataLinkSetMap.h:
        *  dds/DCPS/transport/framework/DataLink.cpp:
        *  dds/DCPS/transport/framework/RepoIdSetMap.h:
        *  dds/DCPS/transport/framework/DataLink.inl:
        *  dds/DCPS/transport/framework/RepoIdSet.cpp:
        *  dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        *  dds/DCPS/transport/framework/RepoIdSet.h:
        *  dds/DCPS/transport/framework/DataLinkSet.h:
        *  dds/DCPS/transport/framework/TransportInterface.inl:
        *  dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        *  dds/DCPS/transport/framework/DataLinkSet.cpp:
        *  dds/DCPS/transport/framework/TransportImpl.cpp:

           - Supported the samples to send to specific datareaders
           - Fixed a problem that the publisher fully association expect the
             same repo set received as in pending association set. This will
             fail when the subscriber creates multiple datareaders to the
             same topic. The pending association set should be a subset of the
             fully association info from subscriber instead of exact same.

        *  dds/DCPS/transport/framework/TransportFactory.h:
        *  dds/DCPS/transport/framework/TransportFactory.cpp:

          Made the TransportFactory create a new reactor for different
          transport instance. With a single reactor thread, the input of
          one transport will be blocked while another transport is handling
          input. This would solve the problem that lookup instance handle
          by repo id fail via built-in-topic datareader during
          fully_association.

        *  dds/DCPS/DataWriterImpl.cpp:
        *  dds/DCPS/DataWriterImpl.h:

          - Supported TRANSIENT_LOCAL_QOS on datawriter. The datawriter
            will resend all current sending and sent samples to the new
            associated datareaders.
          - Added RepoId->InstanceHandler map to cache the info retrieved
            upon add_association any operation after will look the cache
            to get the instance handler such as for listener callback. This
            will solve the problem that remove_association will fail look
            up the bit information.

        *  dds/DCPS/BuiltInTopicUtils.h:

           Changed the fail return to RETCODE_ERROR.

        *  dds/DCPS/Service_Participant.cpp:
        *  dds/DCPS/Service_Participant.h:

           Made the built-in-topic defaults be on and removed the set_BIT().
           Supported -DCPSBit option in command line and also in DCPS config.
           The commandline option will overwrite the DCPS configuration.

        *  dds/DCPS/Qos_Helper.inl:
        *  dds/DCPS/PublisherImpl.h:
        *  dds/DCPS/PublisherImpl.cpp:

           Supported TRANSIENT_LOCAL_QOS.

        *  dds/DCPS/SubscriberImpl.cpp:

          Fixed a deadlock situation that the reactor thread and the
          thread calling delete_participant acquire locks in reverse
          order. The two involved locks are the si_lock_ in SubscriberImpl
          and the token_ in ACE_Select_Reactor_T. The thread calling
          delete_participant holds the lock in SubscriberImpl and tries
          to acquire lock in select reactor to remove handler while the
          reactor thread is handling an event which holds the lock in reactor.
          The reactor thread delieved the sample to datareader and insert
          the datareader to the subscriber internal cotainer which acquire
          the lock in SubscriberImpl. Since the lock in SubscriberImpl protects
          the internal data structure, to fix this problem, the lock scope
          in SubscriberImpl was adjusted so that the datareader will not hold
          the lock while calling remove_all_associations().


        *  dds/DdsDcpsInfrastructure.idl:

          Updated the DCPS_DATA_KEY definition for built-in-topic so it can
          generate appropriate KeyLessThan method.

        *  DevGuideExamples/DDS/Messenger/sub_udp.ini:
        *  DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        *  DevGuideExamples/DDS/Messenger/pub_mcast.ini:
        *  DevGuideExamples/DDS/Messenger/sub_mcast.ini:
        *  DevGuideExamples/DDS/Messenger/pub_udp.ini:
        *  DevGuideExamples/DDS/Messenger/run_test.pl:
        *  DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        *  performance-tests/DCPS/SimpleLatency/run_test.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        *  performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        *  tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        *  tests/DCPS/unit/run_test.pl:
        *  tests/DCPS/Reconnect/run_test.pl:
        *  tests/DCPS/MultiTopicTest/run_test1.pl:
        *  tests/DCPS/MultiTopicTest/run_test2.pl:
        *  tests/DCPS/MultiTopicTest/run_test3.pl:
        *  tests/DCPS/MultiTopicTest/run_test.pl:
        *  tests/DCPS/DcpsIntegration/run_test-topic.pl:
        *  tests/DCPS/DcpsIntegration/run_test-integration.pl:
        *  tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        *  tests/DCPS/sub_init_loop/run_test.pl:
        *  tests/DCPS/Messenger_ZeroCopy/run_test.pl:
        *  tests/DCPS/FooTest3_0/run_test.pl:
        *  tests/DCPS/FooTest3_1/run_test_nokey.pl:
        *  tests/DCPS/FooTest3_1/run_test.pl:
        *  tests/DCPS/FooTest4_0/run_test.pl:
        *  tests/DCPS/FooTest3_2/run_test.pl:
        *  tests/DCPS/FooTest5_0/run_test.pl:
        *  tests/DCPS/DCPSInfoRepo/run_test.pl:
        *  tests/DCPS/FooTest4/run_test.pl:
        *  tests/DCPS/FooTest5/run_test.pl:
        *  tests/DCPS/LivelinessTest/run_test.pl:
        *  tests/DCPS/MultiDPTest/run_test.pl:

          Configured the tests either run with the bit on or
          off.
          - All performance tests defaults to run with non-bit.
            The TCPListenerTest has option to run with bit.
            e.g. run "run_test-1p4s.pl bit"
          - Some tests that the bit is not applicable.
            e.g. FooTest3_0, FooTest3_1 and FooTest3_2
          - The new tests are run with non-bit.
            e.g. tests/Messenger_Imr/run_test.pl
                 tests/DCPS/Messenger_ZeroCopy/run_test.pl
                 tests/DCPS/Prst_delayed_subscriber/run_test.pl
          - The UDP and Mcast test case does not run with bit.
          - other tests run with bit on.

        *  performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        *  performance-tests/DCPS/SimpleE2ETest/publisher.cpp:

           Made _var in globle space be destroyed before exit.

        *  performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        *  performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

           Made the TheParticipantFactoryWithArgs called before user
           application parse command line.

        *  tests/DCPS/unit/Main.cpp:
        *  tests/DCPS/DcpsIntegration/topic.cpp:
        *  tests/DCPS/DcpsIntegration/infrastructure.cpp:

           Added transport factory shutdown call before service
           participant shutdown.

        *  tests/DCPS/Messenger_Imr/pub.ini:
        *  tests/DCPS/Messenger_Imr/sub.ini:

           Added DCPSBit configuration to turn off bit and
           uncommented domainparticipant bit data checking
           since it does not know itself.

        *  tests/DCPS/BuiltInTopic/main.cpp:
        *  tests/DCPS/FooTest5_0/main.cpp:

           Removed the TheServiceParticipant->set_BIT(true) call.

        *  tests/DCPS/FooTest5/common.cpp:

           Made some test cases not generate the unnecessary transports
           e.g. mcast test will not create SimpleTcp transport.

        *  bin/dcps_tests.lst:

          Disabled the reenqueue_all test since it is not applicable.
          The condition of reenqueue_all() call is changed from based
          on TransientKludge to based on TRANSIENT_LOCAL qos and
          resend the samples in queue to the new associated datareader
          instead of all subscribered datareaders.

Tue Apr 17 18:42:27 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
          Persistant participant (and dependencies) removal is now done by
          the DCPS_IR_Participant object. This object bypasses the
          InfoRepo servant in removing dependencies (topics, actors) and
          therefore needs to directly update the UpdateManager.

Tue Apr 17 15:42:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * dds/InfoRepo/Updater.h:
          Modified remove entity API to indicate entity type to be
          removed. Entities of different types (Topic, Participant, Actor)
          can have the same Id.

Mon Apr 16 20:51:19 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
          Modify timeouts to account for slower machines.

Mon Apr 16 16:05:44 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * docs:
        * docs/README_InfoRepo_Persistence:
          Document the DCPS InfoRepo persistence API & mechanism.

Fri Apr 13 20:54:05 UTC 2007  Ciju John  <johnc at ociweb dot com>

        Cumulative modifications to add persistence in the DCPS InfoRepo.

        * dds/InfoRepo/ArrDelAdapter.h:
          Custom auto_ptr for dealing with arrays.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Add command line option '-reincarnate' to control restart
          state. Delay POA manager activation, so that requests cannot be
          processed unless InfoRepo is fully initialized.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
          Add API for underlying persistence layers to modify InfoRepo
          state.

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:
          New API to set a base Id. Required if persisted sate is being
          restored.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Modify the persisted data structures to be compatible with ACE
          allocators. Add new svc config option '-reset' to control
          persistance file cleanup upon restart. Finish up the API
          implementations.

        * dds/InfoRepo/UpdateDataTypes.h:
          Core persistence data structures.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/UpdateManager.cpp:
          Data types for bridging the upstream and downstream
          layers. Finish up remaining API implemenations.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.cpp:
          Update to reflect modification UpdateManager types.

        * tests/DCPS/Prst_delayed_subscriber:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.h:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.cpp:
        * tests/DCPS/Prst_delayed_subscriber/Messenger.idl:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Writer.h:
        * tests/DCPS/Prst_delayed_subscriber/Writer.cpp:
        * tests/DCPS/Prst_delayed_subscriber/domain_ids:
        * tests/DCPS/Prst_delayed_subscriber/mySvc.conf:
        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/sub.ini:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/tcp.conf:
        * tests/DCPS/Prst_delayed_subscriber/README:
          Simple test to test InfoRepo persistance mechanism.

        * bin/dcps_tests.lst:
          Turn on Prst_delayed_subscriber in nightly builds.

Thu Apr 12 14:30:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Applied Chad's change to $ACE_ROOT/bin/auto_run_tests.pl from:
          Thu Apr 12 12:18:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

Tue Apr 10 22:50:05 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp
        * tests/DCPS/FooTest4/main.cpp
          Resolved access violation on Windows platforms because
          the transport threads were not shutdown before
          ServiceParticipant/ORB was shutdown.

        * tests/DCPS/FooTest3_0/PubDriver.cpp
        * tests/DCPS/FooTest3_1/PubDriver.cpp
        * tests/DCPS/FooTest3_2/PubDriver.cpp
          Changed the order of shutdown so transports were shutdown
          before the ServiceParticipant/ORB.

Thu Apr  5 14:37:57 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Elimiate warnings from unused variables on some platforms (QNX) that
          result in certain "#if defined" paths being taken through the code.

Fri Mar 30 13:55:52 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr/run_test.pl:
          Inform ImR of initial InfoRepo shutdown. This is a work around
          for a bug in the 1.5a/DOC ImR. The ImR interprets an failure
          to ping the InfoRepo as a timeout and throws a location_forward
          to the publisher, leading to a publisher error.

Thu Mar 29 15:26:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config-legacy:
        * MPC/config-legacy/README.txt:
        * MPC/config-legacy/vc8_warnings.mpb:

          Added a new directory that will hold MPC config files needed to build
          DDS with older versions of ACE+TAO.  See the README.txt for details.

Wed Mar 28 15:28:05 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/UpdateManager.h:
          Fix minor class inheritance issues.

        * dds/InfoRepo/Updater.cpp:
          Add missing pch header file.

Wed Mar 28 14:38:10 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/PersistenceUpdater.h:
          Add missing header files. Caused problems on DOC builds.

Wed Mar 28 14:11:05 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
          Pass data downstream to persistence layer.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Connect up the PersistenceUpdater with the upper layer
          UpdateManager.

        * dds/InfoRepo/UpdateDataTypes.h:
          Templatize the data structures. Allows for reusability.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          Added interfaces for upstream communication.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.cpp:
          Add cpp file. This got rid of a circular include dependency.

        * dds/InfoRepo/Updater.inl:
          Removed this file.

Tue Mar 27 19:13:03 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Changed some long double assignments, passed as an array
          of chars, for platforms where the size of the long
          double is less than 16 bytes, to use signed chars
          (7 bits) for all array values, where in each case
          half the previous values were using all 8 bits. This
          change eliminates warnings on platforms/compilers
          where char is a signed type, for example Windows/vc8.

        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:

          Added explicit casts to eliminate truncation warnings
          in assignments of time_t to signed 32-bit integer types.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:

          Added vc8_warnings.mpb as a base project to eliminate
          a vc8 warning about the parameters passed to std::copy.

Tue Mar 27 14:25:40 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Move variable initialization into the constructor.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
          The InfoRepo holds a reference to the UpdateManager. The
          UpdateManager is the gateway for all persistence and federation
          services.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.inl:
          Interfaces for the persistence/federation services.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Concrete persistence implementation.

        * dds/InfoRepo/UpdateDataTypes.h:
          Data types common to all updates.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          This is a service object that acts as the gateway coordinating
          the InfoRepo, persistence & federation services.

Mon Mar 26 21:52:05 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a compliation error introduced earlier today.

Mon Mar 26 21:25:07 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * DDS_release_notes.txt:

          Add some known problems to the release notes.

Mon Mar 26 16:05:36 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a bug on registration sample marbling when data type has
          unbounded size and registers with variable size data. The problem is
          the serialization buffer does not allocate enough memory for the
          registered sample.

        * DDS_release_notes.txt:

          Added the bug fix to release note.

Fri Mar 23 15:13:43 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          Made the UpdateManager a local service.

        * dds/InfoRepo/Update_export.h:
          Removed this file.

Thu Mar 22 14:18:12 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/UpdateManager.cpp:
          Include pre compiled headers.

        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
          Use the portable variant of the structure used for quering file
          stat().

Thu Mar 22 13:46:57 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Qos_Helper.inl: untabified

Wed Mar 21 22:13:32 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
          Register with the UpdateManager.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * dds/InfoRepo/Update_export.h:
          Framework for dealing with Persistence and federation menagers.

Wed Mar 21 18:06:01 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Changed return value of an ACE_ERROR_RETURN macro
          to eliminate an int-to-bool warning on VC8.

        * dds/DCPS/Qos_Helper.inl:

          Changes to eliminate time_t-to-CORBA::Long conversion
          warnings on VC8.

Wed Mar 21 15:06:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Additional flags for restricting tests for certain build types.

Tue Mar 20 21:16:06 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          cosmetic changes

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Create InfoRepo class and reorganize existing code.

Tue Mar 20 19:38:17 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_IOGR_Imr:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.h:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger.idl:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * tests/DCPS/Messenger_IOGR_Imr/README:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.h:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/domain_ids:
        * tests/DCPS/Messenger_IOGR_Imr/pub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * tests/DCPS/Messenger_IOGR_Imr/sub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
          New test to demonstrate multiple InfoRepo objects being
          presented as a single IOGR. This test is currently incomplete.

Tue Mar 20 16:47:32 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          Add debug messages.

        * tests/DCPS/BuiltInTopic/main.cpp:
          Remove empty line.

        * tests/DCPS/Messenger_Imr/run_test.pl:
          No need for a timed kill. A timed kill produces an error message
          which threw havoc on the nightly test run.

Tue Mar 20 13:51:51 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Fixed bugs in yesterday's check-in of this file.

Mon Mar 19 19:14:34 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          When running an executable directly (no run_test.pl), we need to take
          into account the -ExeSubDir setting.

Mon Mar 19 14:48:21 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr/pub.ini:
          The repo.ior file path was mistakenly absolute. Fixed that.

Thu Mar 15 19:34:39 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr:
        * tests/DCPS/Messenger_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_Imr/Messenger.idl:
        * tests/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * tests/DCPS/Messenger_Imr/README:
        * tests/DCPS/Messenger_Imr/Writer.h:
        * tests/DCPS/Messenger_Imr/Writer.cpp:
        * tests/DCPS/Messenger_Imr/domain_ids:
        * tests/DCPS/Messenger_Imr/pub.ini:
        * tests/DCPS/Messenger_Imr/publisher.cpp:
        * tests/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/Messenger_Imr/sub.ini:
        * tests/DCPS/Messenger_Imr/subscriber.cpp:
          New test for InfoRepo - TAO ImR compatibility.

        * bin/dcps_tests.lst:
          Add new test to automated test list.

Thu Mar 15 14:29:19 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:

          The nsadd binary needs to be found in $ACE_ROOT/bin.  The fact that
          it's also in $TAO_ROOT/utils/nslist is just a side-effect of the GNU
          make build system.

        * tests/DCPS/Messenger_ZeroCopy/run_corbaloc_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_ns_test.pl:

          Removed these files.  These alternate forms of run_test.pl are not
          used for this test.

Tue Mar 13 13:56:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/Messenger_ZeroCopy/Messenger.mpc:
        * tests/DCPS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:

          Renamed this file from Messenger.mpc to Messenger_ZeroCopy.mpc since
          MPC project names must be unique in the workspace and project names
          are derived from the name of the .mpc file.

Mon Mar 12 21:12:47 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          cosmetic fixes - indent lines.

        * tests/DCPS/Messenger_ZeroCopy:
        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.h:
        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
        * tests/DCPS/Messenger_ZeroCopy/Messenger.idl:
        * tests/DCPS/Messenger_ZeroCopy/Messenger.mpc:
        * tests/DCPS/Messenger_ZeroCopy/README:
        * tests/DCPS/Messenger_ZeroCopy/Writer.h:
        * tests/DCPS/Messenger_ZeroCopy/Writer.cpp:
        * tests/DCPS/Messenger_ZeroCopy/domain_ids:
        * tests/DCPS/Messenger_ZeroCopy/mcast.conf:
        * tests/DCPS/Messenger_ZeroCopy/pub.ini:
        * tests/DCPS/Messenger_ZeroCopy/pub_mcast.ini:
        * tests/DCPS/Messenger_ZeroCopy/pub_udp.ini:
        * tests/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * tests/DCPS/Messenger_ZeroCopy/run_corbaloc_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_ns_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/sub.ini:
        * tests/DCPS/Messenger_ZeroCopy/sub_mcast.ini:
        * tests/DCPS/Messenger_ZeroCopy/sub_udp.ini:
        * tests/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * tests/DCPS/Messenger_ZeroCopy/tcp.conf:
        * tests/DCPS/Messenger_ZeroCopy/udp.conf:
          Add new test to demonstrate zero copy semantics.

        * bin/dcps_tests.lst:
          Add Messenger_ZeroCopy to nightly test framework.

Wed Mar  7 23:32:35 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
          Configured to dynamically load the SimpleTCP library.

        * bin/dcps_tests.lst:
          Add Messenger tests run_corbaloc_test.pl run_ns_test.pl to
          nightly tests list.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Set log level for debug messages.

Wed Mar  7 16:57:40 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * MPC/config/dcps.mpb:
        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.h:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * dds/DCPS/Publication:
        * dds/DCPS/Publication/DataWriterImpl.h:
        * dds/DCPS/Publication/DataWriterImpl.cpp:
        * dds/DCPS/Publication/Publication_pch.h:
        * dds/DCPS/Publication/Publication_pch.cpp:
        * dds/DCPS/Publication/PublisherImpl.h:
        * dds/DCPS/Publication/PublisherImpl.cpp:
        * dds/DCPS/Publication/publication_export.h:
        * dds/DCPS/Subscription:
        * dds/DCPS/Subscription/DataReaderImpl.h:
        * dds/DCPS/Subscription/DataReaderImpl.inl:
        * dds/DCPS/Subscription/DataReaderImpl.cpp:
        * dds/DCPS/Subscription/SubscriberImpl.h:
        * dds/DCPS/Subscription/SubscriberImpl.cpp:
        * dds/DCPS/Subscription/Subscription_pch.h:
        * dds/DCPS/Subscription/Subscription_pch.cpp:
        * dds/DCPS/Subscription/subscription_export.h:
        * dds/Publication.mpc:
        * dds/Subscription.mpc:

          Reverting the previous checkin. This work is moving to a branch and
          will be merged here once all intradependencies in DdsDcps are
          resolved.

Wed Mar  7 15:41:13 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * MPC/config/dcps.mpb:
        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/Publication:
        * dds/DCPS/Publication/DataWriterImpl.h:
        * dds/DCPS/Publication/DataWriterImpl.cpp:
        * dds/DCPS/Publication/Publication_pch.h:
        * dds/DCPS/Publication/Publication_pch.cpp:
        * dds/DCPS/Publication/PublisherImpl.h:
        * dds/DCPS/Publication/PublisherImpl.cpp:
        * dds/DCPS/Publication/publication_export.h:
        * dds/DCPS/Subscription:
        * dds/DCPS/Subscription/DataReaderImpl.h:
        * dds/DCPS/Subscription/DataReaderImpl.inl:
        * dds/DCPS/Subscription/DataReaderImpl.cpp:
        * dds/DCPS/Subscription/SubscriberImpl.h:
        * dds/DCPS/Subscription/SubscriberImpl.cpp:
        * dds/DCPS/Subscription/Subscription_pch.h:
        * dds/DCPS/Subscription/Subscription_pch.cpp:
        * dds/DCPS/Subscription/subscription_export.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/Publication.mpc:
        * dds/Subscription.mpc:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.h:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:

          Began the process of moving publisher and subscriber behavior into
          new libraries to reduce footprint. These libraries are Publication
          and Subscription.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed these files.

Wed Feb 28 16:46:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Added the -l command-line option, used to specify an alternate file
          containing the test list.
          When using the -s option (sandbox), don't assume that the target test
          is a Perl script, it may be an executable.  Files ending in .pl are
          assumed to be Perl scripts, otherwise they will be treated as
          executables.
          Also, removed code specific to ACE tests.

Tue Feb 27 18:46:29 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/auto_run_tests.pl:

          Fixed to run .exe files specified in the .lst for perl to run.

Fri Feb 23 18:30:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * DCPS/transport/framework/TransportReceiveStrategy.h:
        * DCPS/transport/framework/DataLink.h:
        * DCPS/transport/framework/ThreadSynch.h:
        * DCPS/transport/framework/TransportImpl.h:
        * DCPS/transport/framework/TransportFactory.h:
        * DCPS/transport/framework/TransportInterface.h:
        * DCPS/transport/framework/TransportSendStrategy.h:

          Added comments to describer the ownership of transport components.

Thu Feb 22 14:10:25 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * MPC/config/dcpsexe_with_reliable_multicast.mpb:
        * bin/dcps_tests.lst:
        * dds/DCPS/transport/ReliableMulticast:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastRcHandles.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_Export.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_pch.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_pch.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.h:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.h:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketReceiverCallback.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.h:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.h:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/reliable_multicast.conf:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/transport/reliable_multicast:
        * tests/transport/reliable_multicast/reliable_multicast.mpc:
        * tests/transport/reliable_multicast/unittest.cpp:

          Added a reliable multicast transport from the ReliableMulticast
          branch, merging revisions 450 through 528 from that branch into
          the trunk.  This transport has the same basic configuration
          parameters as the unreliable multicast transport, but adds the
          following:

            sender_history_size - How many packets to buffer for potential
              retransmission
            receiver_buffer_size - How large a buffer to keep on the receiving
              side to handle reordering, late delivery, etc.

          This transport introduces fragmentation and re-assembly logic so
          from the perspective of the transport framework it appears that
          a receiver is joining a UDP stream already in progress.

          When an unrecoverable fault is detected, the transport currently
          sets the disconnected flag.  This should eventually be configurable
          through QoS parameters.

            svn merge -r450:528 https://svn.dre.vanderbilt.edu/DOC/DDS/branches/ReliableMulticast

Thu Feb 15 14:50:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          In the change logged at
          Wed Feb  7 16:38:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          I forgot to change the "after +=" lines of the MPC file to match the
          new project name.

Wed Feb 14 17:27:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/built_in_topic_support.mpb:

          Fixed whitespace.

        * MPC/config/dcps.mpb:
        * MPC/config/dds_suppress_any_support.mpb:
        * dds/dcps_bits.mpb:

          Earlier versions of TAO (such as 1.4a) don't work properly with the
          tao_idl -Sa -St options.  This check-in provides an MPC feature that
          will be used to turn on or off the -Sa -St options.

Wed Feb 14 16:41:22 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Eliminate "unused parameter" warnings.

Tue Feb 13 23:00:56 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps.mpb:
        * dds/dcps_bits.mpb:

          Default to call tao_idl with -Sa and -St arguments to suppress
          generation of CORBA Any and Typecode operations.

        * dds/DdsDcpsInfrastructure.idl:
        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Place Built-in Topic specific code within #ifndef DDS_MINIMUM_BIT so
          that even more is excluded from the build when the MPC feature
          built_in_topics is zero.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          As a consequence of the above IDL changes, the
          get_matched_{publication,subscription}_data() operations are not
          available in a built_in_topics=0 build.  Before this change the
          operations were present but returned an "unsupported" error code.

Tue Feb 13 17:45:11 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Added a way for main() to inform common.cpp that the transports need
          to be unloaded.  Without this the transports would attempt to unload
          after main() completes (due to static destructors).  The transports
          can't unload after main() completes because the dynamic libraries
          that implement that transports have already been unloaded.

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Since SimpleTCP is now a separate library, need to enable the
          -ORBSvcConf argument to load it.

Mon Feb 12 19:57:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/built_in_topic_support.mpb:
        * MPC/config/dcps.mpb:
        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/config/dcpsexe_with_tcp.mpb:
        * MPC/config/dcpsexe_with_unreliable_dgram.mpb:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.mpc:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.mpc:
        * dds/DdsDcps.mpc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/dcps_bits.mpb:

          Added the ability to build without built-in topic support as an MPC
          feature.  To use, run mwc.pl like so (from $DDS_ROOT):
                  mwc.pl -type gnuace -features built_in_topics=0 DDS.mwc
          Alternatively, add "built_in_topics=0" to default.features within
          $ACE_ROOT/bin/MakeProjectCreator/config (the former method is
          preferred so that we don't have DDS-specific modifications within the
          ACE source tree).

          Also, cleaned up the various mpb and mpc files to simplify things.

        * dds/DCPS/TypeSupportImpl.h:
        * dds/DCPS/TypeSupportImpl.cpp:

          Removed these files.  They were not used by the project.

        * dds/DCPS/*.{h,cpp,inl}:
        * dds/DCPS/transport/framework/*.{h,cpp,inl}
        * dds/DCPS/transport/simpleUnreliableDgram/*.{h,cpp,inl}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.

        * dds/DCPS/transport/simpleTCP/*.{h,cpp,inl}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.  Also, enabled PCH for SimpleTCP since it
          was still referencing dds/DCPS from one it used to be part of that
          library.

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          Made the project names consistent (DDS_Messenger_idl instead of
          Messenger_idl).

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Load the SimpleTCP library via svc.conf.

        * tests/DCPS/FooType/Foo_Singleton_Transport.cpp:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/common.h:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/transport/dds_comparative/*.{h,cpp}:
        * tests/transport/mcast_simple/*.{h,cpp}:
        * tests/transport/mcast_simple_n/*.{h,cpp}:
        * tests/transport/simple/*.{h,cpp}:
        * tests/transport/simple_bp/*.{h,cpp}:
        * tests/transport/simple_bp_rm/*.{h,cpp}:
        * tests/transport/simple_n/*.{h,cpp}:
        * tests/transport/udp_simple/*.{h,cpp}:
        * tests/transport/udp_simple_n/*.{h,cpp}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.

Mon Feb 12 20:23:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Transient_Kludge.cpp:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Work-around to force a single instance of the singleton
          object. Previously, building against the DOC TAO created
          singleton instances local to a shared library.

Mon Feb 12 19:20:29 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS version 0_11 released.

Mon Feb 12 19:02:14 UTC 2007  Ciju John  <johcn@ociweb.com>

        * DDS_release_notes.txt:
        * dds/Version.h:
          Update release version number.

Sun Feb 11 19:57:32 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:
          Fixed a typo, one line was missing the ':' before !STATIC.

Fri Feb  9 22:00:08 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS version 0_10 released.

Fri Feb  9 03:43:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * NEWS:

          Removed this file and moved its contents to the corresponding
          ChangeLog entry.
          (see Wed Jul 26 23:50:35 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>)

Thu Feb  8 19:17:16 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          The DCPSInfoRepo executable is now moved to $DDS_ROOT/bin.  It was
          previously located in $DDS_ROOT/dds/InfoRepo.

        * DDS_release_notes.txt:

          Documented this change.

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Updated all tests that use the DCPSInfoRepo so that the test looks in
          $DDS_ROOT/bin for the executable.

Wed Feb  7 23:20:35 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DDS_release_notes.txt:
          Minor modifications.

Wed Feb  7 16:38:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          Added "after" clauses to ensure that the client and server are not
          built until the IDL-generated files are in place.  This .mpc file
          should be the "gold standard" of how to use MPC with DDS.  It factors
          out the common IDL tasks so that the client and server projects can
          be run in parallel (VC8 and GNU make -j) without errors.

Wed Feb  7 16:01:49 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DDS_release_notes.txt:
          Add release notes for the 0.10 release.

Mon Feb  5 18:04:11 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/run_test.pl:

          Added SimpleTcp service config to mixed_trans test to load the
          SimpleTcp library. This would fix the mixed transport test failure.

        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:

          Added transport type checking and print error if an incorrent type
          provided by service config file.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.cpp:

          Updated incorrect type error message to have ERROR keyword to be easy for
          debugging.

Mon Feb  5 16:24:06 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added missing ":" that makes the build configuration be the
          parameter of test script.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Fixed warnings due unused or not initialized local variables.

Fri Feb  2 23:49:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for SimpleMcast support and refactor of SimpleUdp and
          SimpleMcast.

Fri Feb  2 22:36:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/sub_udp.ini:
        * DevGuideExamples/DDS/Messenger/pub_udp.ini:

          Removed transport configuration attributes that are for SimpleTcp
          and not for SimpleUdp to avoid confusion.

Fri Feb  2 20:37:16 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps.mpb:
        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:

          Moved "requires += exceptions" to the base project since all DDS apps
          now require exceptions.

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Eliminated "unused local variable"-type warnings that were left over
          from the scripted removal of exception macros.

Fri Feb  2 15:03:56 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
          Factor our common build segments to avoid conflicts in parallel
          build systems (-j > 1).

Fri Feb  2 14:46:39 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Unknowingly introduced character created a wrong file
          patch. Fixed it.

Thu Feb  1 23:30:48 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Most tests now need to dynamically load the SimpleTCP
          library. Don't run those on static builds.

Thu Feb  1 22:47:13 UTC 2007  Ciju John  <johnc@ociweb.com>

        * MPC/config/dcpsexe_with_tcp.mpb:
          MPC configuration for linking application against SimpleTCP.

        * dds/DCPS/transport/framework/TransportDefs.h:
          cosmetic changes.

        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
          Remove code to auto-config SimpleTCP. The assumption that
          SimpleTCP is part of the DDS core is no longer valid.

        * dds/DCPS/transport/simpleTCP/SimpleTcp.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.mpc:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcp_export.h:
        * dds/DdsDcps.mpc:
          Modificat/Addit ions to break up SimpleTCP from the DDS core.

        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/tcp.conf:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/tcp.conf:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/tcp.conf:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp/sub_main.cpp:
        * tests/transport/simple_bp_rm/pub_main.cpp:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_bp_rm/sub_main.cpp:
        * tests/transport/simple_n/pub_main.cpp:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/simple_n/sub_main.cpp:
          Additions to dynamically load/init SimpleTCP.

        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple/README:
        * tests/transport/simple/pub_main.cpp:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple/sub_main.cpp:
        * tests/transport/simple/tcp.conf:
          Configure test to statically link/configure against SimpleTCP library.

        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
          Factor our common build segments to avoid conflicts in parallel
          build systems (-j > 1)

Thu Feb  1 21:02:13 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Fixed a bug that the FULLY_ASSOCIATION message serialize
          stream contains size_t data. Since size_t is platform
          dependent, this makes the FULLY_ASSOCIATION message
          deserialized incorrectly in the inter-host test. Replacing
          size_t with CORBA::ULong fixed the problem.

Thu Feb  1 16:40:24 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicDescriptionImpl.h:
        * dds/DCPS/TopicDescriptionImpl.cpp:
        * dds/DCPS/TopicImpl.h:
        * dds/DCPS/TopicImpl.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DomainParticipantListener_i.h:
        * dds/InfoRepo/DomainParticipantListener_i.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/DcpsIntegration/TopicListener.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PublisherListener.h:
        * tests/DCPS/FooTest3_0/PublisherListener.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataReaderImpl.cpp:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.cpp:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.cpp:
        * tests/DCPS/FooType2/FooTypeSupportImpl.h:
        * tests/DCPS/FooType2/FooTypeSupportImpl.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Removed TAO exception emulation macros using the script
          $ACE_ROOT/bin/rm_exception_macros.pl from the DOC group repository.

Tue Jan 30 22:58:55 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
          Pass the instance_data as const-reference since it may be very large.

        * dds/DCPS/transport/framework/BasicQueueLinkChunk_T.h:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
          Added #includes needed for an inline=0 build.

Tue Jan 30 20:43:24 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP:

          Removed the empty directory.

Tue Jan 30 19:10:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DDS/Messenger/sub_mcast.ini:

          Added missing files.

Tue Jan 30 18:27:53 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These changes refactored SimpleUdp and SimpleMcast (unreliable multicast)
        and supported default transport ids for SimpleMcast. A new library
        - SimpleUnreliableDgram replaced the SimpleUdp and SimpleMcast.(See 9775)

        * DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_pch.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpGenerator.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSynchResource.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.vcproj:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastGenerator.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.mpc:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_pch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_export.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpGenerator.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastGenerator.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSynchResource.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.inl:

          Merged SimpleUdp and SimpleMcast transport together in SimpleUnreliableDgram library.
          The -type parameter in service configuration specifies which transport will register
          with the transport factory. A process can register both "SimpleUdp" and "SimpleMcast"
          or one of the two transports via service configuration.

        * DCPS/transport/framework/TransportDefs.h:

          Added two default id for SimpleMcast, one for subscriber (DEFAULT_SIMPLE_MCAST_SUB_ID)
          and one for publisher (DEFAULT_SIMPLE_MCAST_PUB_ID).

        * DCPS/transport/framework/TransportGenerator.h:
        * DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:

          Added default_transport_ids() function to support multiple default transport
          ids configuration registration and added transport id parameter to new_configuration()
          to provide different default configurations for the transport.

        * DCPS/transport/framework/TransportFactory.h:
        * DCPS/transport/framework/TransportFactory.cpp:

          Removed the default transport id parameter from the register_generator (). The default
          ids will be provided by generator via default_transport_ids(). Upon the transport library
          loading, the default transport configurations will be created and registered with the
          transport factory.

        * MPC/config/dcpsexe_with_unreliable_dgram.mpb:

          Added the project base depend on SimpleUnreliableDgram lib.

        * MPC/config/dcpsexe_with_mcast.mpb:
        * MPC/config/dcpsexe_with_udp.mpb:

          Removed these files since we removed SimpleUdp and SimpleMcast lib.

        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_export.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.mpc:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_export.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:

          Removed SimpleUdp and SimpleMcast directories.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/mcast.conf:
        * DevGuideExamples/DDS/Messenger/udp.conf:

          Added mcast and default mcast test cases.

        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/McastListenerTest/mcast.conf:
        * performance-tests/DCPS/McastListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/udp.conf:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/udp.conf:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooTest5_0/udp.conf:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/udp.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/LivelinessTest/udp.conf:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/mcast_simple_n/DDS_transport_mcast_simple_n.mpc:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/mcast_simple_n/mcast.conf:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:
        * tests/transport/udp_simple_n/udp.conf:

          Updated tests that use the SimpleMcast and SimpleUdp libraries to
          use SimpleUnreliableDgram library.

        * bin/dcps_tests.lst:

          Added mcast and default mcast Messenger examples to nightly builds.

Mon Jan 29 19:19:53 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS.mwc:
          Changed relative path to the .mpb files.  They have now moved to
          $DDS_ROOT/MPC/config.  This is required to build with older versions
          of the DOC group or OCI ACE+TAO.

Mon Jan 29 18:36:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
          The .h file uses throw() instead of ACE_THROW_SPEC(()) therefore so
          should the .cpp file.  This eliminates a compile error when the macro
          ACE_HAS_NO_THROW_SPEC is on.

Fri Jan 26 20:03:11 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/Version.h:
        * rules.dds.GNU:
          Add version file and rules specific to DDS.

Thu Jan 25 23:07:30 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimplUdp.mpc:
          Removed this file.

        * dds/DCPS/transport/simpleUDP/SimpleUdp.mpc:
          Added this file.

Thu Jan 25 15:35:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/Service_Participant.h:

          Disabled warning "C4231: nonstandard extension used : 'extern'
          before template explicit instantiation" for VC6 builds.

Thu Jan 25 17:26:52 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/SubDriver.cpp:
          reenqueue_all test failing on oslo.phx due to pub-sub
          synchronization issues. Since we can't delay reenqueue messages
          the fix is to delay the Publisher invocation by 5 secs.

Wed Jan 24 16:02:58 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.inl:

          Fixed a compilation error on vc6 build due to returning a value
          in a void return function.

Tue Jan 23 22:56:33 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
          Reorder the last write such that the publisher and subscriber
          shutdown in a deterministic manner.

        * tests/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          Only count the publisher written messages, not the liveliness
          msgs.

Tue Jan 23 22:01:54 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/DataLink.inl:

          Supported notifications upon backpressure timed out.
          The "max_output_pause_period" configuration is added to
          SimpleMcast and SimpleUdp as in SimpleTcp. This is the
          maximum period (in milliseconds) of not being able to send
          queued messages. If there are samples queued and no output
          for longer than this period then the socket will be closed
          and on_*_lost() callbacks will be called. If the value is
          zero, the default, then this check will not be made.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Removed a not needed include header.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Renamed a parameter in constructor.

Tue Jan 23 20:29:44 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/README:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
          The test now statically links and configures the MCast transport.

        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/mcast.conf:
          The test now dynamically links and configures the MCast library.

        * bin/dcps_tests.lst:
          MCast FooTest5 has been turned on and mcast_simple turned off
          for static builds.

Tue Jan 23 18:04:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fix memory leak. The delayed_delivered_notification_queue_ &
          delayed_notification_mode_ weren't being freed up properly. Also
          add check for array overrun.

Tue Jan 23 17:17:37 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:

          Corrected the timeout passed to handle_write_ready(). The
          default timeout (ACE_Time_Value*) should be nil (wait forever)
          instead of a zero time value(not wait). This should
          fix the SimpleTcp performance test on handle_write_ready
          timed out.

Mon Jan 22 23:50:46 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:

          Added missing headers to fix the compilation error on linux.

Mon Jan 22 23:35:31 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimplUdp.mpc:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:

          Added backpressure detection even it's unlinkly happen.

        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:

          Refactored the backpressure detection and handling code.

Mon Jan 22 21:02:49 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Allow configurations to specify a transport that is not in a loaded
          library.  This will print a warning to ACE_ERROR but will not fail
          until the user attempts to attach the transport to a reader/writer.
          This is useful for tests, we can now unify sub.ini and sub_udp.ini,
          for example.

Mon Jan 22 20:55:55 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:

          Fixed reading configuration value "receiver" from .ini file.

Mon Jan 22 16:25:19 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          Replaced sleep commands with more concrete synchronization
          strategies to add determinism to the test.

Fri Jan 20 00:25:30 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/McastListenerTest/common.h:

          Fixed a compilation error on linux due to the incorrect
          include directory.

Fri Jan 19 23:54:10 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:

          New files added to handle backpressure case.

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:

          Added backpressure detection and handling. The backpressure is
          observed with a "resource temporary unavailable" error. The same
          mechanism as in SimpleTcp is used to detect the backpressure.
          Upon backpressure, the samples will be queued to the send strategy
          internal queue and wait for resource available and then send.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Corrected comment.

        * performance-tests/DCPS/McastListenerTest/common.h:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/McastListenerTest/domain_ids:
        * performance-tests/DCPS/McastListenerTest/mcast.conf:
        * performance-tests/DCPS/McastListenerTest/McastListener.mpc:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/TestStats.h:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.h:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:

          Added multicast performance tests.

Fri Jan 19 23:29:49 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          This test was randomly failing on some platforms because it
          depended upon hard-cast time-outs. The changes make the test
          more flexible and deterministic.

Fri Jan 19 18:10:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:

          Fixed a warning from a not used variable.

Fri Jan 19 18:00:56 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TheTransportFactory.h:

          Fixed the compilation warning on VC6 because the __GNUC__
          is used without checking if it's defined.

Thu Jan 18 23:52:01 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
          Removed tabs.

Thu Jan 18 22:24:58 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/EntryExit.h:
        * dds/DCPS/transport/framework/TransportHeader.cpp:
          Modify usage of Debug macros.

Thu Jan 18 21:46:17 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cosmetic changes.

        * dds/DCPS/transport/framework/EntryExit.h:
          Some private members were logically constants. Made them
          explicit.

Wed Jan 17 23:31:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/EntryExit.h:

          Changed broken #include from "ace/OS_NS_unistd.h" to
          "ace/OS_NS_string.h" since that's where ACE_OS::strncpy() lives.

Wed Jan 17 19:44:54 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
          Changed default passive_connect_duration to 10000 millisecs.

        * tests/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:
          Commented out some printouts which were outputting a lot of
          nightly builds logs.

Wed Jan 17 19:36:34 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:

          Fixed the test failures on windows. It appears that we should not
          specify the local_address for the publisher, it should use the
          default value, otherwise the subscriber will not receive the
          samples.

Wed Jan 17 17:39:49 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:

          Fixed the mcast test failure on windows. The receiver should
          call join() to the mcast group instead of just open with the
          mcast socket with the mcast group address.

Tue Jan 16 20:54:22 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/common.cpp:

          Fixed a mcast test problem that should not create a SimpleUdp
          transport after created the SimpleMcast transport. However, this
          is not the problem that mcast does not work on windows build.

Fri Jan 12 18:59:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        Re-worked the servant_to_reference function template in two ways:
        A. Simplified template parameters so that they can always be deduced
        from the argument passed in (pointer-to-servant).
        B. Used explicit activation on the POA instead of implicit activation
        this makes the DDS implementation compatible with CORBA/e-compact.
        Please from now on, only use explicit activation of servants.  If you
        are going to activate on the root POA of DDS's ORB (the normal case),
        then just call TAO::DCPS::servant_to_reference() -- it will return the
        typed _ptr.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        Updated uses of the old TAO::DCPS::servant_to_reference() (explicitly
        listing three template parameters) to the new way (which deduces all
        parameters automatically).  Also, changed cases where
        poa->servant_to_reference() was used directly to instead use the new
        TAO::DCPS::servant_to_reference().

Fri Jan 12 20:41:16 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        This fixed the problem describered in RT9711.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Added the logging of the address provided to the peer in
          SimpleTcpTransport::connection_info_i().

        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Applied the same mechanism as in SimpleTcp to discover the unique
          port to use as the default SimpleUdp local_address configuration.
          This is a kludge to fix the default SimpleUdp transport configuration
          problem. Use DISCOVER_UNIQUE_PORT_KLUDGE macro to guard the kludge
          related code in case we find a better way to discover a unique port.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Added default SimpleTcp and SimpleUdp transport id test cases.

        * bin/dcps_tests.lst:

          Added DevGuideExamples/DDS/Messenger tests.

Fri Jan 12 16:20:48 UTC 2007  Ciju John  <johcn@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:
          In situations of repeated connection restablishment
          from the subscriber, we seem to get some orphan messages
          left behind in the system. When the system shuts down
          due to the cleanup mechanism now in place we enter a
          for-ever loop.
          The problem is most probably due to missing error handling
          somewhere in the element delivery path and fixing that is the
          real solution as otherwise over time the internal buffers will
          just fill up (currently only observed upon connection disruption).
          For now I am putting this code which will trap and cleanup these
          orphan messages at shutdown time.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
          More granular locking to prevent deadlocks. Add locks to protect
          the sub/pub maps.

        * dds/DCPS/transport/framework/EntryExit.h:
          Modify to print out the class ID (this).

        * dds/DCPS/transport/framework/TransportDebug.h:
          Simplify the top-level macro usage.

        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
          If no more subscribers registered for a sub_id, remove the
          ReceiveListeners.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cosmetic changes/Add debug messages.

        * dds/DCPS/transport/framework/TransportInterface.inl:
          If unable to remove an element count it as a failure (return
          -1).

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
          Modify API to make relinking an optional behaviour in trying to
          send elements. In some circumstances (such as sending graceful
          disconnect messages), we really don't care about relinking.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          Use the modified API to turn off relinking in certain
          circumstances.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Hard-code the 'RW' wait strategy directive. Deadlocks have been
          observed to occur otherwise under stress conditions.

Thu Jan 11 16:13:22 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/mcast_simple_n:
        * tests/transport/mcast_simple_n/DDS_transport_mcast_simple_n.mpc:
        * tests/transport/mcast_simple_n/PubDriver.h:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/README:
        * tests/transport/mcast_simple_n/SimpleDataReader.h:
        * tests/transport/mcast_simple_n/SimpleDataReader.cpp:
        * tests/transport/mcast_simple_n/SimpleDataWriter.h:
        * tests/transport/mcast_simple_n/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple_n/SimplePublisher.h:
        * tests/transport/mcast_simple_n/SimplePublisher.cpp:
        * tests/transport/mcast_simple_n/SimpleSubscriber.h:
        * tests/transport/mcast_simple_n/SimpleSubscriber.cpp:
        * tests/transport/mcast_simple_n/SubDriver.h:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/mcast_simple_n/TestException.h:
        * tests/transport/mcast_simple_n/mcast.conf:
        * tests/transport/mcast_simple_n/pub_main.cpp:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/mcast_simple_n/sub_main.cpp:

          Added mcast_simple_n test.

Thu Jan 11 15:50:48 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/mcast_simple:
        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple/PubDriver.h:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/README:
        * tests/transport/mcast_simple/SimpleDataReader.h:
        * tests/transport/mcast_simple/SimpleDataReader.cpp:
        * tests/transport/mcast_simple/SimpleDataWriter.h:
        * tests/transport/mcast_simple/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple/SimplePublisher.h:
        * tests/transport/mcast_simple/SimplePublisher.cpp:
        * tests/transport/mcast_simple/SimpleSubscriber.h:
        * tests/transport/mcast_simple/SimpleSubscriber.cpp:
        * tests/transport/mcast_simple/SubDriver.h:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/TestException.h:
        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/mcast_simple/pub_main.cpp:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/mcast_simple/sub_main.cpp:

          Added the mcast_simple test.

Thu Jan 11 15:07:21 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:

          Added NOMCAST flag.

Thu Jan 11 14:57:42 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * tests/DCPS/FooTest5/run_test.pl:

          Corrected use_mcast=1 to be 0 by default.

Wed Jan 10 21:00:07 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * MPC/config/dcpsexe_with_mcast.mpb:
        * bin/dcps_tests.lst:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/simpleMCAST:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_export.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Added a multicast transport to DDS.  This is an unreliable
          transport and has 3 configuration parameters of interest,
          local_address_, multicast_group_address_, and receiver_.

          See the FooTest5 changes for information about how to configure
          publishers and subscribers to use multicast.

Tue Jan  9 21:45:48 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:

          Removed file based sychnorization code and fixed indentation.

Tue Jan  9 20:40:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Fixed a problem that the *TypeSupportImpl::get_type_name ()
          always returns the default type name (interface repository id).
          It should returns the name actually registered either from
          the user (via register_type) or the default type name
          (interface repository id).

Tue Jan  9 15:29:59 UTC 2007  Ciju John  <johnc@ociweb.com>

        * PROBLEM-REPORT-FORM:
          Adding a DDS specific PROBLEM-REPORT-FORM.

Mon Jan  8 21:09:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Fixed the recursively acquiring non-recursive lock problem
          in remove_all_control_msgs (). To fix it, move the lock
          from remove_sample_i() to the caller functions.

Mon Jan  8 18:37:48 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made the terminate_send() called before send graceful
          disconnect message in
          SimpleTcpDataLink::send_graceful_disconnect_message() and
          made TransportSendStrategy::suspend_send() not reset the
          suspend state when it's already in terminate state. This
          should fix some race condition when terminate_send() is
          called before sending disconnect message.

Mon Jan  8 17:46:53 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added most changes made after 0.9 to release notes.

Fri Jan  5 22:06:24 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        This fixed the problem that default transport id does not work.
        [See RT8497].

        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Added default transport id (TransportIdType) parameter to
          register_generator() so the transport configuation with
          the default transport ID (DEFAULT_SIMPLE_TCP_ID or
          DEFAULT_SIMPLE_UDP_ID) will be registered.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Added default transport id test. The "run_test.pl default"
          tests this bug fix.

Thu Jan  4 18:54:17 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/BasicQueueLinkAllocator_T.h:

          Added missing header to fix the compilation errors on DOC
          latest BETA build.

Wed Jan  3 17:20:08 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed the iterator redefinition compilation error on vc6 build.

Tue Jan  2 22:55:40 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Excluded builtin topic tests from nightly builds since they
          are not well implemented.

Tue Jan  2 22:43:33 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest4_0/main.cpp:

          Removed the reference of the reader_transport_impl and
          writer_transport_impl before shutdown the transport.
          This would fix access violation on windows.

Wed Dec 20 16:29:36 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest4_0/main.cpp:
          Fixed gcc warnings. Uninitialized variables.

Wed Dec 20 16:16:03 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:
          Extra set of paranthesis needed to remove gcc warning.

Tue Dec 19 22:09:09 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportQueueElement.inl:

          Fixed compilation errors that return a value to a void return
          function.

Tue Dec 19 17:59:01 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:

          Fixed an include file dependency problem on vc71 DOC build.

Tue Dec 19 16:53:06 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Reconnect/subscriber.cpp:

          Made subscriber wait for 5 seconds (>passive_reconnect_duration)
          to give transport time to detect the connection lost due to
          backpressure timeout before shutdown the datareader. This should fix
          the bp_timeout test failure on not receiving the subscription lost
          callback.

Tue Dec 19 15:58:47 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:
          Include a TAO IDL to bypass a vc71/vc8/intel c++ issue with base
          template export.

Mon Dec 18 18:10:11 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest5_0/main.cpp:
          Add missing header file.

Fri Dec 15 22:24:07 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Made the topic object reference removed from map after deactivated
          from poa.  This would fix access violation in FooTest5 (during
          DomainParticipantImpl::delete_contained_entities()).

Fri Dec 15 18:11:14 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/DCPS/Service_Participant.cpp:

          Replaced localhost with ACE_LOCALHOST to support platforms that do
          not support name resolutions.

Tue Dec 12 16:55:39 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/config/dcps.mpb:
        * MPC/config/dcpsexe.mpb:
        * MPC/config/dcpsexe_with_udp.mpb:

          Moved these file from the top-level DDS directory,
          into the new path, to make them consistent with
          the location of similar files in TAO and CIAO.

Mon Dec 11 23:18:37 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
          The TransportControlElement is now responsible for its own life
          cycle management. TransportQueueElements cleanup needs to be
          thread-aware.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Was missing one of the variable length parameters.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/PublisherImpl.cpp:
          cosmetic changes

Fri Dec  8 23:21:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DDS_TAO.mwc:

          New file, which will pull in all ACE+TAO dependencies
          needed to build the TAO_DDS middleware and put them
          in a single build.

Fri Dec  8 22:31:28 UTC 2006  Ciju John  <johnc@ociweb.com>

        The DataWriter & DataReader Listener now have an additional
          callback API 'on_connection_deleted'. This gets invoked when the
          assiciated connection gets closed. This patch was contributed by
          Yan Dai.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:
          Add new Listner callback 'on_connection_deleted'.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
          The concrete Listeners needs to implement the new
          'on_connection_deleted' method. The reconnect test 'restart_pub'
          tests the the new connection closure callback.


        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cleaning up debugging messages.

Fri Dec  8 19:38:39 UTC 2006  Ciju John  <johnc@ociweb.com>

          Rework thread-per-connection (TPC) to be able to remove
          transitions elements in the tpc queue. This was contributed by
          Yan Dai (dai_y@ociweb.com) to fix potential memory leaks in TPC
          logic.

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.h:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.inl:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DdsDcps.mpc:
          TPC rework changes.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Timeout logic was misbehaving in a multi-pub environment. Fixed.

        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
          cosmetic changes.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
          Fixed memory leak. Acknowledged RepoIdSet weren't being cleaned
          up correctly.

Thu Dec  7 15:18:32 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
          New API release_resources (called by concrete transport
          object upon DataLink disconnection). This just forwards the
          message to the TransportImpl object.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
          A dedicated task belonging to the TransportImpl object. The
          TransportImpl adds safe (ref counted) DataLinks to the task. The
          task then cleans up any resources associated with the
          DataLink. This mechanism (top level dedicated thread) was
          preffered as we were able to reuse most of the
          remove_association logic even though the triger is comming up
          from the transport-specific ReConnection logic.

        * dds/DCPS/transport/framework/TransportControlElement.cpp:
          Initialize the TransportControlElement with loan count of 1
          (instead of 0 as before). This is because the Control Element is
          to be sent to only one DataLink.

        * dds/DCPS/transport/framework/TransportDebug.h:
          Change Default debug level to 1.

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
          Change find_publication/find_subscription API to optionally
          return a safe copy (ref incremented) of the target
          DataWriter/DataReader. This prevents the DataWriter getting
          wipped out during a send.
          New API release_link_resources (called by shutdown
          DataLink). This bumps up the DataLink ref count and adds it to
          the DataLinkCleanup task (which in turn cleans up DataLink
          resources).

        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
          Change variable names to better reflect usage. Also take out the
          loan count assert in production code.

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fix race condition in 'send_delayed_notifications'. The delayed
          notification count was being read outside the guard. This could
          change before guard acquisition. Now the read is done after
          guard acquisition.
          Change clear API to accept an optional next SendMode. The
          default is still MODE_DIRECT.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
          New configuration option 'passive_connect_duration' to set
          timeout on initial passive connection establishment. Setting
          this prevents deadlock when the InfoRepo directs us to connect
          with a bogus/dead publisher.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
          The reconnect task gets cleaned up in the Connection object
          destructor, no need for shutdown() to cleanup. The shutdown
          cleanup was a temporary fix (for cleaning threads) to deal with
          subscriber crashes. Now we have a dedicated top-level thread to
          cleanup any associated DataLink resources upon subscriber
          crash. This will cleanup the Connection object as well as the
          associated Reconnect task.
          Added new API (called by the reconnect task) to inform the
          DataLink regards loss of its connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          Fix race-condition in sending graceful disconnect message. If
          mode is 'queue', the heap element will get queued and a race
          begins as to which thread (worker thread/ORB thread) will delete
          the element. Now DataLink gets terminated right after sending
          the graceful disconnect message. Once the DataLink is
          terminated the worker thread bows out of the race and the
          element can be safely deleted by the original creator (ORB
          thread).

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
          Add entry-exit debug macro

        * dds/DCPS/RcObject_T.h:
          Comment out a debugging accessor function.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
          cosmetic changes

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Add passive connection timeout logic

        * dds/DdsDcps.mpc:
          Add DataLinkCleanupTask.* files.

Wed Nov 29 17:09:30 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
          Changed header file case. Fixed case-insensitive builds.

Fri Nov 17 18:04:25 UTC 2006  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_udp.ini:
        * DevGuideExamples/DDS/Messenger/sub_udp.ini:
          Add udp specific pub/sub configuration files.

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          Modifications to pass transport specific options to pub/sub.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
          Add transport selection option.

        * DevGuideExamples/DDS/Messenger/sub.ini:
        * DevGuideExamples/DDS/Messenger/pub.ini:
          Remove dangling spaces.

Thu Nov 16 15:36:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:

          Switched from using std::string to const char*.  A simple const
          char* was all that was needed for the ACE_ERROR_RETURN message.

Wed Nov 15 14:07:44 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:

          Added missing includes to fix compilation errors on windows.

Wed Nov 15 15:47:31 UTC 2006  Rich Seibel<seibel_r@ociweb.com>

        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
          Changed the reinterpret cast required by
          Green Hills compiler to C-style, since the
          Visual Studio compiler didn't like it.

Tue Nov 14 15:36:59 UTC 2006  Rich Seibel<seibel_r@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
          Rearranged includes to correct a dependency which tripped
          up the Green Hills compiler.

        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
          Added a cast of thr_self to CORBA::Long to satisfy
          Green Hills compiler.

Mon Nov 13 16:55:56 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
          Add new log messages.

        * dds/DCPS/transport/framework/EntryExit.h:
        * dds/DCPS/transport/framework/TransportDebug.h:
          Modifications to set all old-style debug statements to low
          priority.

        * dds/DCPS/transport/framework/TransportInterface.inl:
          Changed log level.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
          Decoment behavior.

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
          The allocators were of the wrong types. Fixed them.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fixed an array initialization problem for non-GNU compilers.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
          If ReConnect task fails to reconnect, it needed to inform the
          Connection object.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Fixed build problems from missing header files.

Mon Nov 13 12:32:18 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          An array can not be allocated with a non-static constant (except
          with gcc).  We use a vector instead of an array.

Fri Nov 10 18:59:48 UTC 2006  Ciju John  <johnc@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
          Fixed missing system header includes.

Tue Nov  7 22:08:50 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/BuildChainVisitor.inl:
        * dds/DCPS/transport/framework/BuildChainVisitor.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
          cosmetic fixes (spaces / new lines)

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
          Added code comments.

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Add locks to protect shared data.
          Better usage of locks and reference counting, rather than hold
          locks for extended invocations.
          In TransportSendStrategy set DELAY_NOTIFICATION to be default
          for direct_send(). This could delay things a bit in the normal
          case but doing an immediate notification has been observed to
          deadlock in the DCPS layer in stress conditions. This occurs
          when the data_deliverd () call winds its way from the transport
          to DCPS layer while another thread is winding its way up.

        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
          Renamed lock_ to map_lock_ to make it self-documenting.

        * dds/DCPS/transport/framework/EntryExit.h:
          The EntryExit class does a run-time check before initializing
          any data members.
          Use a set size array, rather than ACE_CString data members.
          Defined a set of macros for logging levels. This allows logs
          above a sepecified level to be compiled out. This coupled with
          the run-time check should speed up things. The new design tries
          to minimize the performnace hit of logging.

        * dds/DCPS/transport/framework/TransportDebug.h:
          Defined a set of macros for logging levels. This allows logs
          above a sepecified level to be compiled out.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/NullSynch.inl:
        * dds/DCPS/transport/framework/NullSynch.cpp:
        * dds/DCPS/transport/framework/NullSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.inl:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.inl:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PoolSynch.inl:
        * dds/DCPS/transport/framework/PoolSynch.cpp:
        * dds/DCPS/transport/framework/PoolSynchStrategy.inl:
        * dds/DCPS/transport/framework/PoolSynchStrategy.cpp:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceivedDataSample.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.cpp:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.inl:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.cpp:
        * dds/DCPS/transport/framework/ThreadSynchWorker.inl:
        * dds/DCPS/transport/framework/ThreadSynchWorker.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportHeader.inl:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
          Logging macro usage modified.

        * dds/DdsDcpsDomain.idl:
          cosmetic fixes

Tue Nov  7 16:35:53 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/sub_init_loop:
        * tests/DCPS/sub_init_loop/Messenger.idl:
        * tests/DCPS/sub_init_loop/README:
        * tests/DCPS/sub_init_loop/Writer.h:
        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/sub_init_loop/domain_ids:
        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/repo.conf:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/sub_init_loop/sub.ini:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
          New stress test. This test iterates repeatedly in the subscriber
          initialization loop. This is a stress test that emerged in
          scenarios seen in rt 9123.

        * bin/dcps_tests.lst:
          Add new test to nightly tests list.

Fri Oct  6 22:25:25 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
          The Reconnection Task belongs to the Connection object and hence
          should be cleaned up by it before exiting. This fixes a race
          condition which was causing application cores (rt 9123).

        * tests/DCPS/Reconnect/run_test.pl:
          Further fixes to the regression test added in:
          Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

Fri Oct  6 14:58:05 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:
          Additional fixes to the regression test added in:
          Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

Thu Oct  5 22:33:44 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:
          Restored earlier(correct) test wait time.

        * tests/DCPS/Reconnect/subscriber.cpp:
          Minor fix to display correct option character.

Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/README:
          Create a README for this test.

        * tests/DCPS/Reconnect/run_test.pl:
        * bin/dcps_tests.lst:
          Adding a new regression test to capture a failing scenario. The
          Subscriber is killed (simulating a crash) after
          initialization. The Publisher then crashes during its
          initialization.

Mon Sep 11 07:13:48 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/transport/framework/DataLink.cpp:

        Fixed a problem that send or send_stop could happen after the datalink
        call send strategy to clear samples when keep_link=1.

      * dds/DCPS/transport/framework/TransportInterface.cpp:

        Fixed a problem that the send_start could send on a nil datalink.
        The problem is the send() could find the local_id with an empty
        datalink set because a datalink insertion to local_map_ was completed
        by two calls in add_associations().
            this->local_map_.find_or_create_set()
            local_set->insert_link()
        To fix this problem, the two calls above was replaced by a single
        call this->local_map_.insert_link().

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
      * dds/DCPS/transport/framework/TransportSendStrategy.inl:
      * dds/DCPS/transport/framework/TransportSendStrategy.h:

        Added new methods to handle the send() calls after clear()
        is called when keep_link=1.

Thu Sep  8 06:19:22 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/transport/framework/DataLink.h:
      * dds/DCPS/transport/framework/DataLink.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Made remove_sample() and remove_all_control_msgs() not handled by
        the thread per connection task. This would avoid the access violation
        when the data_delivered is called after sample is moved to release_data
        list and before send strategy remove_sample() is called.

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

        Made data_delievered/data_dropped call delayed in a few places to handle
        the writer lock and send strategy lock acquired in reverse order when
        thread_per_connection is enabled.
        Fixed a bug in send_stop() that cause crash when the header_.length > 0
        but elems_ is empty.
        Fixed a bug in remove_sample() that should return when the sample is removed
        from queue.

Thu Sep  7 15:26:52 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/DomainParticipantImpl.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Fixed some compilation errors( due to <: and reinterpret_cast int to void*)
        on gcc compiler.

Wed Sep  7 06:59:35 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      The main changes are: (See RT8999)
        - Made the DCPS entity servants deleted upon delete_*()
          call instead of upon orb shutdown. This would make the create/delete
          DCPS entity multiple times in a single process without shutdown
          Service Participant.
        - Added keep_link configuration to indicate whether a datalink should
          be maintained when all associations are removed. This would allow
          the datareader/datawriter reconnect repeatedly using the same
          connection.

      * dds/DCPS/WriteDataContainer.cpp:
      * dds/DCPS/transport/framework/DataLinkSet.cpp:

        Added logging for cached allocator information.

      * dds/DCPS/DomainParticipantFactoryImpl.cpp:
      * dds/DCPS/transport/framework/TransportImpl.cpp:

        Added guard to protect unregistration of subscription.

      * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

        Made send_graceful_disconnect_message() call notify the
        send strategy terminate send except the graceful disconnect
        message.

      * dds/DCPS/transport/framework/DataLink.h:
      * dds/DCPS/transport/framework/DataLink.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:

        Made the release_reservations() not release datalink when
        all associations are removed if keep_link is configured to be on.
        Made the remove_sample() and remove_all_control_msgs_i() handled
        by ThreadPerConnectionSendTask when thread_per_connection is
        enabled. This makes the send() and remove_sample() be handled
        sequentially.

      * dds/DCPS/transport/framework/TransportConfiguration.h:
      * dds/DCPS/transport/framework/TransportConfiguration.cpp:
      * dds/DCPS/transport/framework/TransportConfiguration.inl:

        Added a new configuration - "keep_link", which indicates if the
        data link should be maintained when all associations are removed.
        The default value (0) means the link will be released as the
        last association is removed from the link.

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

        Added delayed_notification_mode_ status so the delayed notification
        will know if it's a data_delievered or data_dropped.
        Added clear() function to clean up the elements referenced by this
        datalink. This would let the datalink be reused when keep_link is
        on.

      * dds/DCPS/transport/framework/QueueTaskBase_T.h:

        Commented error log when the dequeue_head failed.
        I'm not sure why this thread got more signals than actual signals
        when using thread_per_connection and the user application thread
        send requests without interval.

      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Made this task handle the REMOVE_SAMPLE and REMOVE_ALL_CONTROL_SAMPLES
        requests.

      * dds/DCPS/transport/framework/TransportSendStrategy.h:
      * dds/DCPS/Cached_Allocator_With_Overflow_T.h:

        Corrected a logging message.

      * dds/DCPS/Service_Participant.h:

        Added deactivate_object template function so the delete_* can
        call it to deactivate the object from poa and cause the deletion
        of the servant.

      * dds/DCPS/PublisherImpl.cpp:
      * dds/DCPS/SubscriberImpl.cpp:
      * dds/DCPS/DomainParticipantImpl.cpp:

        Added deactivate_object() call in delete_*() functions.

      * DevGuideExamples/DDS/Messenger/pub.ini:

        Added keep_link configuration.

      * DevGuideExamples/DDS/Messenger/subscriber.cpp:
      * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

        Removed the get_matched_publications() call since datareader
        servant is destroyed when delete_datareader() is called.

Thu Aug 24 18:12:24 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Corrected number of chunks for message block allocator in a
          logging message.

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Corrected the DataReaderImpl/DataWriterImpl reference hold
          by TransportImpl. This fixed the memory leak of datawriter.

Sun Aug 13 19:17:53 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          These changes supported the default transport id.
          The range 0xFFFFFF00 to 0xFFFFFFFF is reserved for
          DEFAULT_<transport>_CONFIG values. Each specific transport
          has its default id in that range. The default transports can not
          be configured by the users. [See RT 8497]

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added definition for DEFAULT_SIMPLE_TCP_ID and
          DEFAULT_SIMPLE_UDP_ID.

        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:

          Increased the size of the section array in load() so it has
          enough space for a big transport id.

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Made the load_transport_configuration() check configuration load
          return value.

Fri Aug 11 18:13:54 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/Service_Participant.h:

                Worked around with the compilation problems on DDS gcc 4.x build with
                DOC version TAO. The problem is the ACE_EXPORT_SINGLETON_DECLARE
                new definition was added to config-g++-common.h in DOC version
                which causes the template instantiation inside namespace errors.
                To work around this problem the TAO_DDSDCPS_SINGLETON_DECLARE
                is commented for gcc 4.x builds.

Wed Jul 26 23:50:35 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * AUTHORS:
        * NEWS:
        * configure.ac:

          Added files that are needed to generate automake makefiles. The following
          command must be used to generate them from MPC:

            $MPC_ROOT/mwc.pl -include $ACE_ROOT/bin/MakeProjectCreator/config
             -type automake DDS.mwc

          You must not run mwc.pl from $ACE_ROOT/bin to do this.
          The ACE_ROOT, TAO_ROOT and DDS_ROOT environment variables must be set.
          Additionally, ACE_BUILDDIR should be set to $ACE_ROOT and TAO_BUILDDIR
          should be set to $TAO_ROOT.

          Please note that this is experimental and has not been fully tested.

Mon Jul 17 20:24:01 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          DDS 0.9 released.

        * VERSION:

          Updated for 0.9 release.

        * DDS_release_notes.txt:

          Added release notes for main changes since 0.8.

Mon Jul 17 20:03:32 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:

          Made demarshal not return error if the repo id is already in the
          map since the subscriber could send the ack for the same repo id
          multiple times.

Mon Jul 17 05:52:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Fixed a bug that the length of data message block is not
          written to the sample header. This would cause the publisher
          side not deliver the graceful disconnect messages even though
          it received the message from subscriber.

        * tests/transport/simple_bp/PubDriver.cpp:

          Removed a logging message.

Mon Jul 17 04:34:47 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub.ini:

          Updated comments for thread_per_connection.

        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:

          Added sleep after simulated publisher is initialized so it can wait
          for fully association establishment and then start sending samples.

Fri Jul 14 20:04:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Removed the SimpleTcpConnection.h include to fix the circular dependency
          problem on gcc 3.3.3 builds.

Fri Jul 14 12:43:04 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Modifications required to build DDS with Visual C++ 6.0.  Most of
          the changes involved adding include files and moving inline
          methods into the .cpp's.  The change to the perl module is to
          accommodate vc6's inability to handle calling a base class method
          with an explicit class name.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Removed these files.  Their contents was moved into the
          corresponding .cpp files.

Wed Jul 12 17:34:59 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed a circular include dependency problem. This problem shown on
          vc71 builds.

Tue Jul 12 05:28:56 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed a circular include dependency problem. This problem shown on
          gcc3.3.3 builds.

Mon Jul  3 09:23:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:

          Fixed build errors and warning on Linux.

Sun Jul  3 8:42:38 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes support thread-per-connection send feature. The
        new configuration "thread_per_connection" is added to determine if
        the transport needs create a new thread for a datalink/connection
        to send samples under normal traffic (no backpressure). If
        thread_per_connection is 1, the publisher always creates a seperate
        send thread for each datalink/connection to do the send instead of
        sending to each remote one by one by the same thread.

        * dds/DdsDcps.mpc:

          Added new classes to support thread-per-connection send feature.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:

          Added the new task - ThreadPerConnectionSendTask object to handle
          sending in a seperate thread.

        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          A simple template ACE task that manages a request queue. The subclass
          provides the function to handle the queued requests.

        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:

          New class to support the thread-per-connection send.

        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:

          Added thread_per_connection configuration.

        * dds/DCPS/transport/framework/TransportImpl.h:

          Added DataLink as friend of TransportImpl so DataLink can
          access the private data member configuration object of
          TransportImpl.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Updated to use the new interfaces of the SimpleReconnectTask
          and made the reconnect_task_ allocated on stack instead of
          on heap.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.h:

          The new class added to do the connection replacement when
          a new connection is accepted by the passive side.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Updated to call base class pre_stop_i () first.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Updated to use QueueTaskBase.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask_rch.h:

          Removed file not needed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Updated to use the SimpleTcpConnectionReplaceTask instead
          of SimpleTcpReconnectTask.

        * DevGuideExamples/DDS/Messenger/pub.ini:

          Added thread_per_connection configuration.

Mon Jun 26 2:25:26 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixed the test using simpleUDP. The commit
        "Thu Jun 22 16:06:21 UTC 2006  Yan Dai  <dai_y@ociweb.com>" appears
        broke the UDP tests during the full association period.

        * TAO/DDS/dds/DCPS/transport/framework/TransportImpl.cpp:
        * TAO/DDS/dds/DCPS/transport/framework/TransportImpl.h:
        * TAO/DDS/dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * TAO/DDS/dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:

          Added new virtual function acked() to check if the acks for
          pending associations are received so the simpleUDP can simply
          always return acked.

        * TAO/DDS/DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Added more sleep period before releasing transport factory. This
          would avoid the error on publisher during shutdown.

Thu Jun 23 6:45:12 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Fixed the transport deadlock upon fully association on Linux. The problem
          is the lock in TransportImpl is recursively aquired.

Thu Jun 22 00:03:16 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h
        * dds/DCPS/transport/framework/DataLinkSetMap.h
        * dds/DCPS/transport/framework/TransportFactory.h
        * dds/DCPS/transport/framework/TransportImpl.h
        * dds/DCPS/transport/framework/TransportImplFactory.h
        * dds/DCPS/transport/framework/SimpleTcpConnection.h
        * dds/DCPS/transport/framework/SimpleUdpTransport.h

          Temporary commented the fix for BCB6 build at
          "Fri Jun  9 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>"
          These changes broke the Linux build.

Thu Jun 22 16:06:21 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes mainly fix the problem
         "create_datawriter() does not wait for full association establishment
         so even if there are waiting subscribers,  a write shortly after
         creating the datawriter may be dropped on the publisher side because
         add_associations() has not completed on the publisher side.
         The sample may also be dropped on the subscriber side because the
         connection exists between the publisher and subscriber but the
         associations have not been mapped on the subscriber side."

         The solution is to make the subscriber send a FULLY_ASSOCIATED ack
         when the new association is received from repo and the connection is
         established. On the publisher side, the transport will notify the
         datawriter that the subscriber is fully associated when the ack is
         received. The application can use get_matched_subscriptions() to
         determine when it should start sending samples.
         (See RT8498 for details)

        * dds/DdsDcps.mpc:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.h:
        * dds/DCPS/transport/framework/TransportGDControlElement.cpp:
        * dds/DCPS/transport/framework/TransportGDControlElement.h:

          Renamed the TransportGDControlElement.* to TransportControlElement.*
          so it can be used for both GRACEFUL_DISCONNECT and FULLY_ASSOCIATED
          messages.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Seperated remote reader handler caching and the listener
          on_publication_matched callback from add_associations(). The new
          method fully_associated() does that part which is called when the
          transport received the FYULLY_ASSOCIATED message from subscriber.

        * dds/DCPS/PublisherImpl.cpp:

          Made the publisher not delete the associations after add_publication()
          is done. The associations will be deleted when transport calls the
          full_associated().

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Provided marshal and demarshal method for the associated RepoIds.

        * dds/DCPS/DataSampleHeader.h:

          Added new message id FULLY_ASSOCIATED.

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added Association_Status definition.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Added local map to cache the pending association ids,pending
          association data and acked associations.

          Notify the datawriter fully association at an approriated time
          which depend on the timing when pending association is added,
          when ack is received and when the datawriter is registered with
          the TransportImpl. At either time, the pending and ack map will
          be checked to see if any assoications related to a pub id is
          fully associated.

        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportInterface.h:

          Made add_associations() call add_pending_associations() at
          very last.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Handled the FULKLY_ASSOCIATED message.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:

          Added method to send the FULKLY_ASSOCIATED messgage.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Added shutdown_ flag to stop the reconnecting during shutdown.
          The shutdown reconnect task call is removed from the connection
          destructor, the shutdown will be called when the connection related
          association is removed or when the transport shutdown. This would
          avoid the destruction order problem of the connection and
          reconnect task objects.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Made the reconnect task not accept new reuqests when it's already
          shutdown.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Changed the using of text file to coordinate between publisher
          and subscriber to use the get_matched_*() function call to determine
          when the publisher can start and finish and when the subscriber
          can finish.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:

          Used the get_matched_*() function call to determine
          when the publisher can start and finish and when the subscriber
          can finish.

        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:

          Made the subscriber sleep for a while before shuttting down the
          transport to avoid the errors due to lost connection during
          shutdown.

Mon Jun 19 18:58:43 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Fixed a deadlock situation on linux when the direct_send()
          detects a lost connection and calls the relink(). The problem is the
          direct_send() is called under the lock in send strategy and the
          suspend_send() called by relink() aquires the same lock.
          To fix it, an extra parameter do_suspend is added to relink()
          function to indicate if the relink() needs call suspend_send() on
          send strategy object. If the thread calling relink() already hold
          the lock it will call the operations in suspend_send() before calling
          relink (), otherwise the relink() will call suspend_send().

        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added shutdown () method to SimpleTcpConnection to shutdown the
          reconnect task. This is called during transport pre-shutdown phase
          after the datalink sends graceful disconnect message. This would
          avoid an access violation during transport shutdown.

        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Made the shutdown () do shutdown work just once if it's called multiple
          times.

        * TAO/DDS/dds/DCPS/DataWriterImpl.cpp:

          Corrected a debug message.

Fri Jun  9 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/DCPS/CPPTemplate.pm:
          Made changes to fix compile problems with BCB6

        * dds/DCPS/transport/framework/DataLink.h
        * dds/DCPS/transport/framework/DataLinkSetMap.h
        * dds/DCPS/transport/framework/ReceiveListenerSet_rch.h
        * dds/DCPS/transport/framework/TransportFactory.h
        * dds/DCPS/transport/framework/TransportImpl.h
        * dds/DCPS/transport/framework/TransportImplFactory.h
        * dds/DCPS/transport/framework/TransportSendStrategy_rch.h
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h
          Added needed includes to get things compiling with BCB6

Wed Jun  7 18:30:09 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added a limitation that transport can not receive single packet
          with single control message without data.

Wed Jun  7 09:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/Transient_Kludge.h:
          Fixed compile error with Borland

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
          Added missing include of post.h

Thu Jun  1 20:01:23 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.h:
        * tests/DCPS/FooTest4_0/Reader.h:

          Fixed the compilation errors with gcc4.1 due to the
          class scope prefixed to the method declaration.

Fri May 12 00:13:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added VC6 build support and a potential deadlock fix.

Fri May 12 00:00:27 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Renamed the second version of servant_to_reference() to
          servant_to_reference_2 to resolve the compilation errors
          on VC6. The VC6 can not recognize the template function
          with same name but difference template parameters.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Updated to use servant_to_reference_2().

        * tests/DCPS/MultiDPTest/README:

          Made a corresponding readme.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Added the thr_id_ data for checking if the shutdown()
          is called by the thread the task created. The thread
          should not wait for itself. This should fix a potential
          deadlock.

Mon May  8 20:16:50 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          DDS 0.8 released.

        * VERSION:

          Updated timestamp of the 0.8 release.

        * DDS_release_notes.txt:

          Updated one limitation note.

        * TAO_DDS_Configuration_Settings.html:

          Added reconnection configuration values.

Mon May  8 18:46:56 UTC 2006  Scott Harris <harris_s@ociweb.com>


        * DDS_release_notes.txt:
        * TAO_DDS_Configuration_Settings.html:

          Updated the release notes and added the config file html.

Mon May  8 18:36:24 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:
        * VERSION:

          Changes related to the 0.8 release.

Fri May  5 21:33:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          Moved the qos operator functions from TAO::DCPS namespace to global
          namespace. This would resolve the compilation errors on DDS builds
          against DOC's latest version that the VC71 compiler can not find
          the octet sequence operator==.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Made the qos operator== called implicitly instead of explicitly.
          Calling operator== explicitly was used as a workarround of the
          compilation problem metioned above.

        * tests/DCPS/Reconnect/run_test.pl:

          Added expected lost_subscription_callback=1 to the bp_timeout test.
          This fixed the test failure on windows.

Fri May  5 18:41:51 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * tests/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * tests/transport/simple_n/DDS_transport_simple_n.mpc:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added inheritance from portableserver base project.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Fri May  5 17:48:53 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/repo.conf:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Made the repo use the repo.conf to avoid multiple requests
          handled by single orb thread at the same time. This would
          fix the problem on sunos59 gcc3.3.2 builds that the DCPSInfo
          could not be terminated. It seems without using the service
          config file, the DCPSInfo deadlocked and the TerminateWaitKill()
          in perl script will return non-zero which causes the test failure.

Fri May  5 14:44:39 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Updated notes for re-establishment of lost connection.

Thu May  4 20:06:22 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Reversed the changes Scott made on
          "Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>"
          since the TAO1.4a latest version works without the change.

Wed May  3 11:30:09 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Changed from char* to const char* to avoid build warnings from
          SunCC.

        * tests/DCPS/MultiDPTest/common.h:

          Removed the trailing comma from an enum to avoid build warnings
          from SunCC.

Tue May  2 16:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.inl:

          Changed to call operator==(TAO::unbounded_value_sequence<CORBA::Octet>)
          explicitly. It is ugly but it resolves the compilation error on VC71
          against DOC's latest version. This seems be a compiler problem that
          does not recognize the global operator== when the global operator== is
          defined as inline and it's called by the code inside of a namespace.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/SubscriberImpl.cpp:

          Fix bugs on subscriber that does not increase the sequence length
          before adding new elements to the sequence. This problem was detected
          in FooTest4_0 with the DOC's latest version which has the new sequence
          implementation.

Tue May  2 13:38:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/transport/dds_comparative/dds_transport_comparative.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon May  1 13:16:56 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Replaced the close() in SimpleTcpReconnectTask with shutdown ()
          method. The difference is the shutdown() will wait for thread
          exit. This would resolve an access violation due to the race
          condition in the SimpleTcpReconnectTask object
          Some un-necessary variables num_threads_ and active_workers_
          are also removed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Made the Datalink not send the GRACEFUL_DISCONNECT message if
          it already received the GRACEFUL_DISCONNECT message from peer.
          This would fix the error
          "SimpleTcpSendStrategy::send_bytes: ERROR: sendv: Bad file
           descriptor iovec count: 3" upon shutdown.

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a warning with unused variable.

Fri Apr 28 12:59:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a problem on linux that transport does not
        identify peer disconnecting due to crash. This should fix
        the "run_test.pl restart_pub" test on linux.

        * dds/DdsDcps.mpc:

          Added TransportGDControlElement.cpp.

        * dds/DCPS/DataSampleHeader.h:

          Added GRACEFUL_DISCONNECT message id.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Added new hooks so the concrete datalink can send graceful
          disconnect message before transport shutdown or releasing
          datalink.

        * dds/DCPS/transport/framework/TransportGDControlElement.cpp:
        * dds/DCPS/transport/framework/TransportGDControlElement.h:

          New type control message that does not need data_delivered
          callback.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the transport also try to reconnect if it did not receive
          the graceful disconnect message when receive_bytes() returns 0.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          This is the correct version that Scott committed for fixing
          rae\rt8448\test failure.
          "Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>"

Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fix a problem were a second disconnect and reconenct did
          not call on_*_disconnected() or on_*_reconnected().
          Yan made the initial fix and I changed it a bit.

        * dds/DCPS/DataWriterImpl.cpp:

          Correct a typo in a log message.

Sun Apr 23 22:50:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to an effort to fix rae\rt8448\test failure.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:

          Fixed memory leaks and added more debugging messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Fixed multiple reconnected notification problem. The problem
          is the passive connection side seems not realize the lost
          connection before a new connection is reestablished.
          Changed to use the enum reconnect_state_ instead of a bool
          variable to mark various states during reconnecting and also
          seperate the active_reconnect_on_new_association() from
          active_reconnect_i() to make these function more obvious.

Sat Apr 22 21:54:02 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made the elems_ and queue_ to be allocated on heap. This would help
          resolve a deadlock situation after reconnect fails. The deadlock
          happens when a send thread holds datawriter's lock and try to acquire
          the SendStrategy's lock and the reconnect thread calls terminate_send
          which got the SendStrategy's lock and drop all queued samples and try
          to call data_dropped on DataWriter. The changes makes we can remove
          queued elements outside the SendStrategy's lock.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed to create per connection reconnect task to do the reconnecting instead
          of using single thread to do reconnecting for all datalinks in a TransportImpl.
          Hope this fix the rae\rt8448\test failure

Fri Apr 21 11:42:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added note for a transport limitation.

Fri Apr 21 10:17:51 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Corrected incorrect parameter order in a logging message.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Added the new on_*_disconnected and on_*_reconnected to the listener
          implementations.

Fri Apr 21 01:09:00 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are made to add the on_*_reconnected and on_*_disconnected
        new callbacks for RT8499.

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added the on_*_reconnected and on_*_disconnected callbacks
          Updated the *LostStatus to just contain the instance handles
          and typedef'd the *LostStatus as *DisconnectedStatus and
          *ReconnectedStatus.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Made the DataReader/DataWriter not cache the *LostStatus and
          added notify_*_diconnected and notify_*_reconnected to support
          the new callbacks.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:

          Updated the notify() function for DISCONNECTED, RECONNECTED and
          LOST connection notification.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          On active connection side, made the disconnected callback called
          before reconnect, the reconnceted callback called after reconnect
          succeeded and the lost connection callback called after reconnet
          failed.
          On passive connection side, made the disconnected callback called
          before reconnectschedule the timer, the reconnceted callback called
          when new connection is created and the lost connection callback
          called after the passive_reconnect_duration_ period if not reconnected.
          Updated some methods to correct the reconnect logic on the passive side.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Changed to use the "old" connection object to transfer its state to
          the "new" connection object instance of using "new" connection object
          copy state from "old" connection object. This was changed since we
          need synchronize the handle_timeout() and transfer state to "new"
          connection object on the "old" connection object.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:

          Added the new callback implementations.

Fri Apr 21 00:01:11 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Increased amount of time for the DCPSInfoRepo to shutdown.

Thu Apr 20 13:40:46 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Updated the data_dropped() method signature to be same as in the base
          class TransportSendListener. This would fix the errors
          "ERROR: Subclass should override if sending control samples. "
          when the transport drops the control messages due to a lost
          connection.

Wed Apr 19 19:13:01 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/Reconnect tests.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/run_test.pl:

          Added more options to publisher and subscriber to help automate the
          reconnect tests. Changed run_test.pl to redirect the output to a log
          file so that errors due to an abnormal shutdown and lost connection
          will not show on scoreboard. The final output "test PASSED" or
          "test FAILED" will show the test result.

Wed Apr 19 13:04:26 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/FooTest3_0.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon Apr 17 09:45:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added release notes for main changes after 0.7 release.

Sun Apr 16 22:32:55 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:

          Added the notify_lost bool parameter to the remove_association()
          method which overrides the virtual methods in
          TAO::DCPS::DataReaderImpl/DataWriterImpl. This should fix the
          test failure on remove_association.

Sun Apr 16 21:43:11 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendListener.cpp:

          Fixed a compilation warning due to an unused variable.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:

          Fixed a bug on wait_to_unclog that passes an ACE_Time_Value::zero
          to handle_write_ready instance of 0 as the timeout parameter.
          This would fix the TCPListener performance test.

Sun Apr 16 21:53:02 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Serializer/SerializerTest.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:

          More scoreboard directed cleanup.

        * tests/DCPS/FooTest4/main.cpp:

          This change from std::string to ACE_CString was not dictated by
          the nightly scoreboard, but my local PC failed to compile the
          test as provided with std::string. This is on my home x86-32
          running Linux 2.6.10-1.770_FC2 with gcc version 3.3.3 20040412
          (Red Hat Linux 3.3.3-7). I felt it was not a big deal to add the
          ACE_CString since the test code is already linking in ACE to do
          parameter parsing.

Sun Apr 16 07:30:45 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Removed extraneous comma from enumeration list. I noticed that
          the enumeration also contains "NOTIFY_IMMEADIATELY" which should
          be changed to "NOTIFY_IMMEDIATELY". I'm not going to change that
          because I don't know the implications of such a change.

Sat Apr 15 13:23:09 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are tested on linux and fixed the deadlock situation
        during reconnecting.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made the send strategy will not wait for the reconnecting finish
          since the thread might hold the lock in DataWriterImpl and the
          reconnect thread might need call data_dropped () on DataWriterImpl
          which will cause datalock.

Sat Apr 15 11:47:43 USMST 2006  Yan Dai  <dai_y@ociweb.com>

          These changes are made to expect to fix a deadlock situation during
          reconencting on linux and they also fixed unregister data sample
          errors during shutdown for RT8499.

        * dds/DCPS/WriteDataContainer.cpp:

          Updated the data_dropped() to do same thing as data delivered
          when the transport initiates the data dropping which happens when
          connection lost and reconnet fails.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Made send strategy queue the connection to reconnect task in relink()
          and wait on a condition variable until the reconnect task completes
          the reconnecting and signal the condition. This would resolve the
          deadlock problem on linux and avoid using a recursive lock in
          TransportSendStrategy as a work around in my last commit.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the relink() has no return value.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Added DO_RECONNECT_UPON_SEND case to handle re-establishing
          of a lost connection detected by send strategy.

Thu Apr 13 17:01:08 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Changed to use ACE_Recursive_Thread_Mutex to fix the deadlock
          situation during reconnecting on linux. This is a temporary
          workarround. I need find a better way to fix it.

Thu Apr 13 14:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

       * tests/DCPS/Reconnect/repo.conf:

          Added missing file.


Thu Apr 13 13:23:18 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fixed compilation errors on lunix build.

Thu Apr 13 12:54:39 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These are review fix for RT8499 and the compilation errors due to
        data_dropped () and remove_sample() signature changes are also fixed.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Changed to use while loop instead of for loop for code clarity.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added checking of the return value from dynamic_cast.

        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Publication.h:

          Added comments for the new parameter notify_lost.

        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.h:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.h:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.h:

          Fixed compilation errors due to the data_dropped ()
          and remove_sample() signature changes.

Thu Apr 13 10:30:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changs are made to drop messages after the reconnect
        failed for RT8499.

        * dds/DdsDcps.mpc:

          Added RemoveAllVisitor.cpp.

        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.h:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:

          New files are added to support the clear all elements in
          a BasicQueue.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.h:

          Added an extra parameter dropped_by_transport bool to the
          data_dropped(), remove_sample() and related methods. The
          dropped_by_transport true indicates the data dropping is initiated
          by transport which occurs when the transport send strategy is in
          a MODE_TERMINATED state. All messages are dropped in that state.
          The dropped_by_transport false which is the case before adding
          this extra parameter. The dropping is a result of remove_sample()
          call which is initiated by datawriter with KEEP_LAST history policy
          when the number of samples exceeds the depth of history queue.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added a few SendMode types(MODE_TERMINATED, MODE_SUSPEND and
          MODE_NOT_SET). These modes are used when reconnecting logic is
          used. When the connection is lost, the mode is set to
          MODE_SUSPEND until reconnect finishes. In the MODE_SUSPEND state,
          all messages are queued. If the reconnect succeeds, the mode is
          back to the state before suspend. If the reconnect fails after
          a "conn_retry_attempts" attempts, then the mode is set to
          MODE_TERMINATED and all messages in the backpressure queue and
          packet queue are removed and the data_dropped () is called for
          every element. During the state of MODE_TERMINATED, any sending
          or queuing are stopped and the messages are dropped.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added send_strategy_ data member for state change when reconnecting
          happens. The suspend_send is called before reconnecting. The
          resume_send is called when the reconnect succeeds. The terminate_send
          is called after the reconnect fails.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy_rch.h:

          Removed lost_link() hook. Now we can use the mode in the
          TransportSendStrategy to know the state of the connection.

        * tests/DCPS/Reconnect/run_test.pl:

          Fixed the restart_sub test since now we drop the messages
          after reconnect failed.

        * tests/DCPS/Reconnect/sub.ini:

          Change to default "conn_retry_attempts".

Wed Apr 12 17:19:27 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * DDS_release_notes.txt:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

          Typo fixes from review for RT 8499.

Tue Apr 11 11:44:32 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Fixed a compilation error on linux builds that need ace/Time_Value.h
          include.

Tue Apr 11 10:34:34 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Corrected lost_link() check in send_bytes().

        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:

          Changed the conn_retry_backoff_multiplier_ to be double instead of float
          to avoid warnings.

Tue Apr 11 10:10:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made for RT8499 to resolve the problem that publisher
        does not stop sending during reconnecting. There are two parts of the changes
        need be made and note the second part is not done yet.
          1)transport should queue the messages while reconnecting
          2)transport should discard the messages if the reconnect fails.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:

          Made handle_input () return -1 if the receive_bytes() return -1. This would
          close the connection anyway even it will try to reconnect.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:

          Added ready_send() virtual function to check if the connection is connected.
          This will be called whenever this->synch_->work_available is called or before
          sendv. This would stop the writing on a disconnected socket.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Made it has reference to the SimpleTcpTransport object and
          added get_transport_impl() accessor.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Made relink() to queue the connection object to the SimpleTcpReconnectTask
          to do the reconnect since we don't want the reactor thread block on reconnecting
          and not receiving other incoming messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Made this task handle both reconnecting and new connection checking.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Added reconnect task accessor so the SimpleTcpReceiveStrategy can access
          it and handle the connection to the reconnect task to do reconnect.


        These changes are made for RT8499 to add the support to declare connection
        lost upon backpressure timed out.

        * DDS_release_notes.txt:

          Updated comments for "max_output_pause_period" configuration.

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added GET_CONFIG_FLOAT_VALUE macro.

        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:

          Made the wait_on_clogged_resource() and wait_on_unclog() return status.
          The PerConnectionSynch thread terminates if it returns an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added max_output_pause_period_ and changed the
          conn_retry_backoff_multiplier_ to be float instead of int.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added new method notify_lost_on_backpressure_timeout() to support
          the disconnecting and notification when the transport stay in
          backpressure too long ( > max_output_pause_period).
          Removed unused parameter "notify" from reconnect_i().
          Accomodated with the changes of conn_retry_backoff_multiplier_
          type change.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.inl:

          Made the max_output_pause_period passed to the constructor and made
          wait_to_unclog() call notify_lost_on_backpressure_timeout() upon
          handle_write_ready() timeout.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Updated comments for the reconnect strategy configuration values and
          added new configuration "max_output_pause_period".

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:

          Added read/write delay for bp_timeout test.

        * tests/DCPS/Reconnect/run_test.pl:

          Added bp_timeout test case.

        * tests/DCPS/FooTest4/main.cpp:

          Made subscriber attach to transport to avoid the errors return
          from create_datareader() due to no transport.

Mon Apr 10 13:03:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Corrected the description for "conn_retry_backoff_multiplier" configuration.

Mon Apr 10 09:20:35 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Corrected the notify_*_lost() to avoid duplicate reader/writer id
          report lost.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Corrected reconnect() to notify connection lost just once and not
          try to reconnect in subsequence send/recv failure.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Added reconnect() call in find_or_create_datalink() method when the
          connection is previously lost and now the datalink is requested because
          of the new association.

Fri Apr  7 15:15:23 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for reconnect and lost connection callback support.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed the "#if 0" in create_*/delete_* that was used to avoid
          some test failure, but the tests are fixed, we just remove it.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Removed the "attempt_connection_reestablishment" configuration
          since it's duplicated with other configuration values and
          updated some spelling errors with the configuration values.

        * tests/DCPS/FooTest3_0/pub_main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/sub_main.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/sub_main.cpp:
        * tests/DCPS/FooTest3_2/pub_main.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:

          Made the test call attach_transport before create_datawriter()
          to fix the test failures.

Fri Apr  7 00:46:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These files are changed to support the connection reestablishment
        and lost connection notify. See RT8499.

        * dds/DdsDcps.mpc:

          Added new file SimpleTcpReconnectTask.h/.cpp.

        * dds/DdsDcpsDataReaderRemote.idl:
        * dds/DdsDcpsDataWriterRemote.idl:

          Added a paramter "notify_lost" to the remove_association
          in DataReaderRemote and DataWriterRemote interfaces.
          The flag true indicates the remove_association is invoked
          by the InfoRepo after it detected a lost writer/reader. The
          InfoRepo detect the lost writer/reader when the
          add_association/remove_association invocations on the writer/reader
          object reference fail. The datareader/datawriter needs notify the
          the DataReaderListener/DatawriterListener the publication/subscription
          lost.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Added methods to support the notification of the publication/subscription
          lost and updated the remove_associations() signature change.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Made the datareader/datawriter register with the TransportImpl upon
          creation and unregister upon deletion.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:

          Added notify_lost() method that is called by the SimpleTcpConnection
          upon reconnect failure. Changed the receive_strategy_ to be protected
          data so the SimpleTcpDataLink can access it.

        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:

          Added lock to protect the map. This would fix the problem when
          multiple add_association() are called at the same time. The
          find_or_create_set() failure causes the add_association() failure.

        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Added internal map accessor so we can iterate the map to notify
          listener about the lost subscriptions/publication.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Added methods to register/unregister/find the datareader
          and datawriter object.

        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:

          Added TransportImpl object reference accessor.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added relink() funcation and call it when the send_packet()
          and receive_packet() return an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added new configurations to support connection re-establishment.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          This is the main change made for the re-establish a connection.
          Added more states to have enough information for re-establish
          and reuse the connection object. If connector/acceptor role of
          the connection is not changed when the connection is re-established.
          As the connector side, we reuse the same connection object after
          reconnected. As the acceptor side, since the ACE_Acceptor creates
          a new connection each time when it accept a connection, we can not
          reuse the connection object. The states in the "old" connection
          object are copied to the "new" connection object.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Added reconnect() function to replace an "old" connection with the
          "new" connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Added method to restart the ReceiveStrategy.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          This is a new class that is dedicated to check if the incoming
          connections are re-established connection from the remote. This
          would resolve the deadlock problem between the reactor thread
          (calling SimpleTcpTransport::passive_connction()) and the orb
          thread (calling SimpleTcpTransport::make_passive_connction()).
          The reactor thread will enqueue the new connection  to this task
          and let this task dequeue and check the connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Called SimpleTcpReconnectTask open and close upon transport
          initialization and shutdown.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:

          Added configuration values for retry connect to the example.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/domain_ids:
        * tests/DCPS/Reconnect/Messenger.idl:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/Writer.h:

          Added new test to test connection re-establishment and the lost
          connection notification.

Fri Mar 31 09:02:01 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding a listener type for handling the notification of disconnects
        from the transport. RT 8499

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added TAO::DCPS::DataReaderListener and
          TAO::DCPS::DataWriterListener to provide the on_subscription_lost
          and on_publication_lost functionalities.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Changed the Listeners to inherit from the POA_TAO::DCPS
          version instead of the the POA_DDS


        * dds/DCPS/transport/framework/TransportInterface.h:

          Removed unnecessary friend class declaration.

Wed Mar 29 13:59:23 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Removed old comments and never reached code.

Wed Mar 29 10:46:36 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a warning "control reaches end of non-void function"
          on linux build.

        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Added the get_type_name() implementation to fix the compilation
          error "cannot instantiate abstract class".

        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Changed the sample_num_ from long to be CORBA::Long to fix
          a warning in fprintf().

Tue Mar 28 14:11:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        Added TypeSupport::get_type_name() support for RT8496.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Added *TypeSupportImpl::get_type_name() implementation that use
          the interface repository id as the default type name.
          Made *TypeSupportImpl::register_type() check nil type name. If a nil
          type name is given then the default type_name is used.

        * dds/DdsDcpsTopic.idl:

          Added get_type_name() to the TypeSupport interface.

        * dds/DCPS/Registered_Data_Types.cpp:

          Updated the register_type() to use the get_type_name() for
          TypeSupport comparison instead of using
          _interface_repository_id() directly.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Updated the example to test TypeSupport::get_type_name() support.
          The nil type name is passed for type registration and get_type_name()
          is called to get the type name for topic creation.

Tue Mar 28 14:19:22 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Added TCPListenerTests to the nightly build list of tests to run.
          UDP was not added due to the highly machine dependent performance
          of UDP.


Tue Mar 28 14:09:36 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding scripts for topology tests for RT 8490.

        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:

          Added scripts to run the different topology tests.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:

          Removed old test scripts.

        * performance-tests/DCPS/UDPListenerTest/common.h:

          Changed variable name for clarity in reading.

Tue Mar 28 10:20:20 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to remove the "using namespace" in the
        dds core code. See RT8495.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/InstanceState.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Serializer.cpp:
        * dds/DCPS/Serializer.inl:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Removed "using namespace" from the dds core code.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Fixed compilation after the "using namespace" removal change.

Mon Mar 27 16:14:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to fix the DDS test failures between machines
        with different endianess. The swap_bytes configuration value per
        TransportImpl instance is also appropriately used to allow different
        transports use different setting of swap_bytes. (See RT8381)

        * bin/DCPS/CPPTemplate.pm:

          Made the Serializer in *DataWriterImpl::marshal() constructed
          with the swap_bytes flag based on swap_byte configuration value
          and made the Serializer in *DataReaderImpl::demarshal() constructed
          with the swap_bytes flag based on the endianess of the host and
          the byte order flag from the publisher.

        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:

          Set the swap_bytes flag to the Serializer in the reading side based
          on the the endianess of the host and the byte order flag in the data
          sample from publisher.

        * dds/DCPS/DataWriterImpl.cpp:

          Made the sample and control message header correctly set byte_order.

        * dds/DCPS/transport/framework/TransportHeader.cpp:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportHeader.inl:

          Added one more octet to the TransportHeader to indicate the endianess
          of the publisher side and updated the marshal and demarshal methods
          with the new flag.

Mon Mar 27 12:06:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Fixed the compilation error on some platforms in servant_to_reference()
          that misses the "typename" keyword for the_obj variable.

Fri Mar 24 11:22:34 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Reduce the template parameters from 3 to 1 for servant_to_reference.
          Thanks to Don Busch for suggesting this.

        * DDS_info.txt:

          More notes from Don's questions.

Thu Mar 23 09:17:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * DDS_info.txt

          This file is a place to collect notes that may later
          become part of the DDS section of the TAO Dev. Guide.

Wed Mar 22 11:53:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Moved the TransportReplaceElement cached allocator from PacketRemoveVisitor
          to TransportSendStrategy to fix a bug in the transport. The problem is
          PacketRemoveVisitor is allocated on stack so the allocator is destroyed
          as the PacketRemoveVisitor goes out of scope, but late the
          TransportReplaceElement accesses the allocator and causes the access
          voilation.

Wed Mar 15 11:26:50 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/MultiDPTest test.

Wed Mar 15 11:17:25 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Change the hash map using void* as the key to fix the build problem
          on 64bits build.

Tue Mar 14 12:37:29 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:

          Changed the register_type() to use the_interface_repository_id
          comparison instead of  POA_TAO::DCPS::TypeSupport_ptr comparison.
          This would allow different TypeSupport instances of the same TypeSupport
          type register with the same type name in the same domain pariticipant.
          The second (and subsequent) registrations are ignored.

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a test case that registers different TypeSupport instances of
          the same TypeSupport type using the same type name in a domain
          participant.

Mon Mar 13 14:50:00 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a type to the declaration of 'i'.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a bug in Registered_Data_Types that causes
        multiple domain participants within the same domain in a process
        can not register same data types. See RT8440.

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Made the DomainHash hash map use DomainParticipant object reference
          as the key instead of domain id. This would allow the data type
          be unique within a DomainParticipant and not within a domain.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

        * tests/DCPS/MultiDPTest/common.cpp:
        * tests/DCPS/MultiDPTest/common.h:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/domain_ids:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/README:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/TestException.h:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.h:

          Created a new test for the bug fix. This is a test to show
          that multiple domain participants within a domain in a process
          can register the same data type.

        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

Mon Feb 20 09:26:00 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * tests/transport/simple/PubDriver.cpp:

          Changed config parameter from "DcpsInfo" to "DCPSInfoRepo".
          Changed config parameter from "DCPSBitLookupDurationSec" to
          "DCPSBitLookupDurationMsec" and changed its units to milliseconds.
          Change config parameter from "queue_links_per_pool" to
          "queue_messages_per_pool".
          Changed transport config ""DCPSBitTransportPort" default from
          2841 to 0 so the OS will pick a port and multiple Built-in Topic
          subscribers can run on one machine.
          Fixed a bug where the config parameter "swap_bytes" was being
          read as "swap_byte".

Sun Feb 19 17:24:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/README:
        * tests/DCPS/BuiltInTopic/README:
        * tests/DCPS/FooTest3/README:
        * tests/DCPS/FooTest3NoKey/README:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:
        * tests/DCPS/unit/README:

          Changed all -DCPSInfo options to -DCPSInfoRepo options
          because the -DCPSInfo is deprecated.

Sun Feb 19 17:05:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Set the data reader's liveliness.lease_duration QoS
          and log when it is not met.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Print the size of Built-in Topic structures.

Thu Feb 16 16:23:28 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TypeNoKeyBounded/PTTypeLib_Export.h:
        * tests/DCPS/Compiler/idl_test1_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test2_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test3_lib/foolib_export.h:
        * tests/DCPS/FooType/footype_export.h:
        * tests/DCPS/FooType2/footype_export.h:
        * tests/DCPS/FooType3/foolib_export.h:
        * tests/DCPS/FooType3NoKey/foolib_export.h:
        * tests/DCPS/FooType3Unbounded/foolib_export.h:
        * tests/DCPS/FooType4/foolib_export.h:
        * tests/DCPS/FooType5/foolib_export.h:
        * tests/DCPS/MultiTopicTypes/foolib_export.h:
        * tests/DCPS/common/common_export.h:

          Fixed export macros for windows static builds.

Wed Feb 15 17:35:11 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Changed delay between adding subscribers.  The test was
          adding the second subscriber before the subscriber was running.

Thu Feb  9 22:11:11 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/dcps_export.h:

          Fix export macros for windows static builds.

Fri Feb 03 17:22:10 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:

          Additional BIT macros.

        * tests/DCPS/FooTest5/subscriber.cpp:

          Fix virtual call on windows with DOC group.
          We were passing a listener impl from the stack to the
          poa which caused the virtual call at shutdown.

Mon Jan 30 07:31:28 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:

          Call a base class method through the 'this' pointer to avoid
          problems with VC6.

Fri Jan 27 14:04:05 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the name of the POA to "InfoRepo".

Fri Jan 27 13:54:43 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Add support for -DCPSInfoRepo.  This is identical in action to
          -DCPSInfo (which is essentially deprecated).  I think this is
          more consistent.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Make the Info Repo's object reference persistent.  This makes
          the object references consistent (as long as fixed endpoints are
          specified) and simplifies deployment.

        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Change this test to work with a static DDS build.

        * dds/DCPSInfo.idl:

          Removed this file.  It appears obsolete (virtually identical to
          DdsDcpsInfo.idl).

Thu Jan 26 09:36:24 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Modified the DCPSInfoRepo process so it registers the
          Info Repo object using a simple object key via the
          IOR Table.  This makes it easier to implement alternate
          schemes of distributing the object reference (besides
          storing it in a file).

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:

          Add some examples/tests of how to locate the InfoRepo
          using corbaloc and the naming service (using corbaname).

Wed Jan 25 11:15:55 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Added DDS_HAS_MINIMUM_BIT macro to build without
          Built In Topic support.
          Defining the macro will NOT build BIT support.


        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:

          Fixed name of template instantiation macro.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Turned off the tests with SimpleUdp dynamically loaded via service
          configurator on static builds.

Tue Jan 24 12:54:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Removed dependency on SimplUdp lib.

        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added dependency on SimplUdp lib.

Tue Jan 24 12:34:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fixed a deadlock situation that recursively acquires the ACE_Thread_Mutex.

        * dds/DCPS/transport/framework/TransportConfiguration.inl:

          Updated a debug message.

Tue Jan 24 11:44:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Fixed a warning with unused variable.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Fixed compilation erros on some builds that complains the T type is not
          defined when the RcHandle<T> template is instantiated.

Mon Jan 23 13:56:59 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:

          Removed the TAO and DCPS namespaces from the basclass call to
          load() to allow vc6 to figure out which method is being called.

Sun Jan 22 23:23:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Added ace/Configuration.h include to fix compilation errors on DOC's
          nightly builds and made the modifiers of the  "common" configuration values
          can overwrite the value from command line option and command line option can
          overwrite the values in configuration file.

        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Added includes or namespace to fix the compilation errors.

Fri Jan 20 14:02:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Added dependency on SimpleUdp library for this static loading SimpleUdp
          example.

Fri Jan 20 13:41:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdp.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_export.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.h:

          Added new files that should be checked in in last commit.

Fri Jan 20 13:21:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are adding DDS file configuration feature. The SimpleTcp
        is still a part of DDSDcps library and other concrete transport libraries
        such as SimpleUdp can be dynamically or statically loaded.
        See the projects\DDS\design\configuration_design.txt (from CVS) for
        various scenarios of using dds configurations:

        * dcpsexe_with_udp.mpb:

          Added base project for SimpleUdp transport applications.

        * dds/DdsDcps.mpc:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportExceptions.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportGenerator.cpp:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportGenerator_rch.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:

          These files are changed for the dds configuration feature.

        * dds/DCPS/DataBlockLockPool.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/NullSynch.h:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.h:
        * dds/DCPS/transport/framework/PoolSynch.h:
        * dds/DCPS/transport/framework/PoolSynchStrategy.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.h:
        * dds/DCPS/transport/framework/ThreadSynchWorker.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportReactorTask.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.h:

          These files are changed to add the export macro.

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/udp.conf:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/udp.conf:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/udp.conf:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/common.h:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/udp.conf:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/FooTest5_0/udp.conf:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTest/udp.conf:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimplePublisher.h:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleSubscriber.h:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.h:
        * tests/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * tests/transport/simple_bp_rm/SimpleSubscriber.h:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SimplePublisher.cpp:
        * tests/transport/simple_n/SimplePublisher.h:
        * tests/transport/simple_n/SimpleSubscriber.cpp:
        * tests/transport/simple_n/SimpleSubscriber.h:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/README:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimplePublisher.h:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.h:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/run_test.pl:
        * tests/transport/udp_simple_n/SimplePublisher.cpp:
        * tests/transport/udp_simple_n/SimplePublisher.h:
        * tests/transport/udp_simple_n/SimpleSubscriber.cpp:
        * tests/transport/udp_simple_n/SimpleSubscriber.h:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Applied the new TransportFactory interfaces for generating and cofiguring
          the TransportImpl object to all DDS tests and made changes on the udp tests
          to allow the SimpleUdp library statically or dynamically loaded.

Mon Jan 16 10:35:06 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fix missed ACE_INLINE in code that was un-inlined.

Sat Jan 14 15:22:43 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.cpp:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.inl:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:

          Uninlined some unnecessary inlines.  This was done to
          reduce the footprint of DDS.

Fri Jan 13 11:47:29 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fixed a few other compile errors related to casting ACE_hrtime_t
          to a double with VC++ 6.0.

        * tests/DCPS/FooTest4_0/main.cpp:

          Avoid a g++ warning about choosing the right pointer type.

Thu Jan 12 20:40:18 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fix compile error using VC++ v6.0.
          Thanks to Chad Elliott for the recommended fix.

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

          Remove double spacing (extra ^M) by using unix2dos.

Wed Jan 11 23:47:37 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed locks before calling TransportInterface::add_pub/sub
          methods to avoid deadlocking.
          Thanks to Don Busch for providing a the StockQuoter example
          that would deadlock if the subscriber started before the publisher.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:

          Renamed some locks to make it easier to tell which lock_
          is being used.

Fri Jan  6 13:14:23 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dcps_ts_defaults.mpb:

          Add an explicit "perl" to the build rule.  This helps
          things go a little more smoothly on Windows for some people.

Wed Jan 04 14:51:42 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Changed to properly initialize the array variables. The
          properly initialized variables compare correctly on 64 bit
          systems.

Tue Jan 03 16:15:07 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed issue when reregistering an instance.
          The instance only needs to be registered not inserted
          into the list.

Fri Dec 30 16:37:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:

          Fixed access violation from missing allocator.

Fri Dec 30 13:54:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Removed duplicate BuiltInTopic line.

Fri Dec 30 11:00:34 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Fixed scoping of variables added for transport allocators.

Thu Dec 29 16:31:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.h:

          Force the creation of a DataSampleListElement to give
          the allocator.

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Added missing transport allocators.


Tue Dec 27 12:26:47 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:

          Fix some GCC 3.4.2 warnings (ununsed vars and member
          initialization order).  Avoided commenting out random code.

Mon Dec 19 14:42:52 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Rolled back the changes that made on
          "Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>"
          that intended to cleanup memory when the write/register fail.
          The changes need more investigation.

Mon Dec 19 09:43:03 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed order of code to actually execute code that was
          after a return.

        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Changed tests to use an allocator.

Fri Dec 16 01:03:41 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the method back to cpp and removed the ACE_INLINE
          declaration.  The method needed a define in the cpp file.

Fri Dec 16 00:50:26 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the ACE_INLINE method to the inl file.  Not having it
          in the inl file results in an undefined reference when linking
          with the dll

Thu Dec 15 22:31:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:

          Corrected capitalization of header include.

Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:

          Corrected the number of chunks for map_entry_allocator_. It should be
          the number of datalinks. The map_ is also changed to be a pointer of
          hash map so we can appropiately delete the hash map with current
          implementation of ACE_Hash_Map_Manager_Ex and ACE_Hash_Map_With_Allocator.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made number of chunks in header data block to be 1 instead of 2 since the
          duplicate() increases the ref count of data block.

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Added free_to_pool_ count to help debugging.

        * dds/DCPS/DataWriterImpl.cpp:

          Replaced ACE_CHECK with ACE_CHECK_RETURN in some methods with a return
          type.

        * dds/DCPS/WriteDataContainer.cpp:

          Made obtain_buffer() and register_instance() release memory it allocates
          if the methods return error.
          Made the number of chunks for data allocator to be the
          max_samples of resource_limits in qos if that value is not
          LENGTH_UNLIMITED.

        * dds/DCPS/Service_Participant.cpp:

          Fixed a bug in parse_args() that causes crash when passing multiple
          -DCPS options.

        * bin/DCPS/CPPTemplate.pm:

          Made write_w_timestamp() release marshalled data sample if write fails.

        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

          Uncommented the read_samples() which might be accidently checked in previously.

Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Get the DdsDcps project to build against TAO v 1.4.7.
          Needed to explicitly include the ACE version header so that
          conditional complication that makes DDS build with both the DOC
          and OCI versions of TAO worked.
          Strangely, this is not needed for the latest DOC TAO from CVS
          or when building with gcc/GNUmakefile but is needed for VC71.

Fri Dec  9 16:57:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Replaced the TransportSendControlElement, TransportSendElement,
          TransportReplacedElement and TransportSendStrategy header message
          block allocation from heap with the cached allocator.

        * dds/DdsDcps.mpc:

          Listed the files in same directory in alphabet order.

Fri Dec 09 15:31:23 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Added a simple latency test.  This test is a modified
          version of the one created by Ming Xiong of the DOC group.

Fri Dec 09 15:22:38 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Changed Allocators to log an error message when more
          memory is freed to the heap than is allocated.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Expanded the amount of memory that is allocated for
          Message Blocks that are duplicated on a per-association
          basis.

Wed Nov 30 10:00:19 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Changed the allocation of the message block in
          create_control_message to properly use the allocator.

Tue Nov 29 13:30:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
          Changed the read_next_sample and take_next_sample that
          only take a single sample to handle the read and take,
          not allocate arrays and call the array version.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:

          Removed the unneeded PUBLISHER_TEST macro and code.

Sat Nov 26 17:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Constructor did not correctly use and save the rounded up size
           for allocating!  This resulted in invalid pointer locations
           used for small object sizes on the 64 bit OS.

Tue Nov 22 08:55:53 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.7 released.

        * DDS_release_notes.txt:
        * README:
        * VERSION:

          Changes related to the 0.7 release.

Tue Nov 22 08:54:53 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added #include "ace/os_include/netinet/os_tcp.h" for builds with
          inlining turned off.

Mon Nov 21 13:57:01 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:

          Renamed svc() function to be run_test() and removed the inheritance
          of ACE_Task_Base for class Writer. This was intended to fix build
          problem on Solaris platform.

Thu Nov 17 10:17:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          Make it build with TAO 1.3a (almost p6).

Thu Nov 17 06:23:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved some inlined functions to .cpp files to
          avoid a problem recursive include problem when
          building against DOC TAO and using gcc.

Tue Nov 16 18:39:52 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Make DDS build with the DOC group version of TAO.
          See RT8044.

Tue Nov 15 10:24:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          Added includes to the dcps_export header file for the exports.

Mon Nov 14 14:46:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          VC6 needs the classes exported.

Mon Nov 14 09:15:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/FooTest5/common.h:

          Fixed warnings on Solaris builds.

Sun Nov 13 23:51:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooType/Foo_Singleton_Transport.h:

          Fixed warnings because of passing _var as _ptr argument.

Sun Nov 13 15:57:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:

          Added using declaration to resolve the "hides virtual functions"
          compilation warnings on Solaris.

Sat Nov 12 13:24:25 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.h:

          Resolved a warnings.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 17:18:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Fixed warnings on string (char*) initialization.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 14:58:33 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:

          Restored previous version that uses the
          EXTERN_OR_INLINE_HELPER_METHOD  macro, but changed the
          macro to be defined as ACE_INLINE instead of nothing if
          __ACE_INLINE__ is defined.

Fri Nov 11 12:51:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Fixed warnings on string (char*) initialization.

        * dds/DCPS/Qos_Helper.h:

          Used ACE_NAMESPACE_INLINE_FUNCTION for inline functions
          declare to fix warnings on Solaris.

Fri Nov 11 11:06:19 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:

          Removed extra parenthesis in the "#if defined" statement.
          The should fix the compilation problem on Solaris builds.

Thu Nov 10 16:35:32 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
          Solaris compilers failed when the method declaration was
          extern and the definition was inline.  Added a macro
          to assign the extern when the code is not inlined.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Set the VC6 necessary extra unused parameters into
          a typedef'd function declaration.  Solaris compilers
          were choking on the extra parameter in the templated
          method.

        * dds/DCPS/transport/framework/DataLinkSetMap.inl:
        * dds/DCPS/transport/framework/NullSynchStrategy.inl:
          Removed unused files.

Mon Oct 31 16:43:52 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/Marked_Default_Qos.cpp:

          Replaced usage of ACE_static_cast<::DDS...> with
          static_cast< ::DDS...> as the <: was confusing the
          Sun CC 5.3 compiler.

Mon Oct 31 16:38:30 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.cpp:

          Avoid compiler error generated by Sun CC 5.3 because
          a namespace terminates with a "}".

        * dds/DCPS/DataSampleHeader.h:

          Avoid compiler warning generated by Sun CC 5.3.

Tue Oct 25 17:26:38 MST 2005   Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:

          Moved SimpleTcpTransport rch include and added SimpleTcpTransport
          to properly instantiate the templates on gcc on solaris.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.inl:

          Moved inline methods into cpp.

Tue Oct 25 15:22:28 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Removed using the pointer as the DataLink id.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Can not use LONG_MAX for CORBA::Long because on some
          architectures the long is 8 bytes while a CORBA::Long
          is always 4 bytes.

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Fixed issue with using a long double as a
          character array all the time.

Tue Oct 25 13:18:31 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/WriteDataContainer.h:

          Add a space to some templates.  Things of the form <::DDS::Ident
          won't work because <: is a C++ digraph.

        * dds/DCPS/DataReaderImpl.cpp:

          Fix an initialization order warning

Sun Oct 23 16:19:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublicationInstance.h:
        * dds/DCPS/SubscriptionInstance.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Removed using instance handles as pointers.  Maps of
          handle to pointer were added.

Thu Oct 20 16:09:20 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * LICENSE:

          Change "TAO-DDS" to "TAO DDS" in the LICENSE.

Thu Oct 13 15:13:22 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Clean up some gcc warnings, all of which are unused args,
          unused vars, or uninitialized vars.

Mon Oct 10 15:59:48 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:

          Fixed compilation error on vc71.

Mon Oct 10 15:35:45 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Fixed memory leaks.

Sun Oct  9 13:17:37 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:

          Fixed memory leaks and some string problems caused by VC6's inability
          to pick the correct overloaded function.

Wed Oct  5 14:28:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:

          Declared the instance handle collection in DataReaderImpl class
          as ACE_Unbounded_Set instead of std::set. This would fix some
          tests on vc6 build.

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Added unused arguments with the template parameter types.
          This is a work arround to fix tests on vc6 builds that failed
          due to the vc6 bug on template function instantiation.

        * tests/DCPS/FooTest3_2/run_test.pl:

          Extended the timeout to fix test.

        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:

          Fixed incorrect data member initialization.

Tue Sep 27 10:31:34 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/Compiler/idl_test3_main/main.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/transport/simple_bp/SimpleDataReader.cpp:

          Clean up the remaining gcc warnings.

Fri Sep 23 16:18:49 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/InstanceState.cpp:

          Clean up some gcc warnings.

Fri Sep 23 15:31:37 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Add limitation to release notes describing excess memory
          usage of DDS because of application object bufferes being
          oversized.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Add a new configuration option for Nagle's algorithm
          (TCP_NODELAY).  The default is to disable Nagle's algorithm.
          This was uncovered by some latency testing.  Some
          performance tests with small sample sizes may benefit
          from enabling this algorithm.

Wed Sep  7 08:47:48 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * bin/all_tests.pl:

          Finally added the all_tests.pl script to the repo.  This
          is a script that automatically runs all the run_*.pl scripts
          it can find under a directory.  It can also loop on the tests
          for a set number of iterations or until a failure is encountered.

Tue Sep  6 11:57:09 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DdsDcps.mpc:

          Make sure the Built-In Topic IDL files use the -Gdcps IDL
          compiler option.  This was causing compilation problems with
          SunCC 5.6.

Wed Aug 31 06:39:06 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.h:

          Removed extra semicolon's on the closing curly braces for
          namespaces.

Wed Aug 17 09:10:10 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:

          Enhance these scripts so they properly delete existing ior files
          at the beginning and the end of the test.

Thu Aug 11 13:56:18 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.6 released.

        * DDS_release_notes.txt:
        * VERSION:

          Updates for DDS 0.6.

Thu Aug 11 11:24:15 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Fix some more function overloading issues with VC6.

Thu Aug 11 11:18:35 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Increase the sample and packet lengths to be 32 bit integers
          so we can support larger samples (greater than 64 KB).

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:

          Limit the simple UDP transport to about 64 KB samples
          because of its lack of fragmentation and the MTU.

Tue Aug  2 16:24:58 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the default IOR file written from dcps_ir.ior to repo.ior.
          This makes it match the default that the service participant is
          looking for.

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:

          Clean these tests up by substituting a timed wait for the repo.ior
          file instead of a sleep(5).

Tue Aug  2 15:39:50 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.cpp:

          Let the host/port default on this test.

        * tests/DCPS/Compiler/idl_test1_main/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Fix some string problems caused by VC6's inability to pick the
          correct overloaded function.

Fri Jul 29 17:10:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Fixed memory leaks.
          - Use _var instead of _ptr.

Fri Jul 29 14:14:16 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fix a variable scoping issue for VC6.

Fri Jul 29 12:48:42 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Updated the release notes (and renamed them).

        * VERSION:

          Added a version file.

        * DDS_realease_notes.txt:

          Removed this file.

Fri Jul 29 12:35:25 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataBlockLockPool.h:

          Remove explicit scope that was causing problems for VC6.

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Clean up this test a little.

Thu Jul 28 14:08:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Fixed memory leak.
          - Removed an extra get_name() call on topic which duplicates
            the string.

Thu Jul 28 13:43:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the Pt*TypeSupportImpl servant.

Thu Jul 28 13:17:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed memory leak of DataReaderRemote object references.
          - Made the get_dr_obj_ref () assign to a DataReader_var
            since the accessor duplicates object reference count.

        * dds/DCPS/Marked_Default_Qos.cpp:

          Fixed memory leak of DomainParticipantFactory object reference.
          - Made TheParticipantFactory assign to
            DomainParticipantFactory_var since the TheParticipantFactory
            duplicates the object reference count.

        * dds/DCPS/WriteDataContainer.cpp:

          Fixed memory leak of the registered sample data and the
          PublicationInstance object.
          - Made the unregister_all() delete all PublicationInstance
            objects in the instance handle list.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fixed memory leak of the DataWriter object reference.
          - Delete every Writer object after test is done.

        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the listener servant.
          - Made the servant assign to PortableServer::ServantBase_var.

Thu Jul 28 10:41:07 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Changes to compile on unix systems.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Removed the debugging code from
          Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

Wed Jul 27 17:37:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DdsDcps.mpc:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Created a class to give out ACE_Thread_Mutex lock adapters.
          This just cycles through an array giving out the next lock.
          It does not currently require the returning of the locks.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Changed to use a DataBlockLockPool for providing locks to the
          ACE_Data_Blocks.  The blocks need to be locked to prevent the
          simultaneous access by multiple threads from deforming the
          reference count.

Wed Jul 27 17:20:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/Service_Participant.h:

          Rolled back previous version and found the memory
          leak is in the reference_to_servant function
          of Service_Participant.

Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added additional code to give more information when the send_bytes
          fails.  This code is marked with "//remove" and
          "DUMP_FOR_PACKET_INFO"

          This code should be removed when the problem has been fixed.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:

          Fixed error with data size.

Tue Jul 26 22:33:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Fixed PublisherImpl and Subscriber memory leak.

        * tests/DCPS/FooTest3_2/pub_id.txt:

          Removed test generated file.

Tue Jul 26 15:38:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.h:

          Correctly applied the _var and _ptr.

        * tests/DCPS/FooTest3_0/pub_id.txt:

          Removed test generated file.

Fri Jul 22 08:40:18 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Make SimpleTcpSendStrategy::send_bytes log the iovec array when
          sendv returns an unexpected errno in hopes of getting it to
          core when the sendv fails for AAC.  Hopefully this will shed
          some light on the problem.

Thu Jul 21 18:38:54 CDT 2005  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.hi:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Added -sd <msec> option to allow the subscriber to sleep for
          <msec> milliseconds for every read call.
          This was added to see what would happend if there was a slow
          subscriber.

Wed Jul 20 15:59:55 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/RcObject_T.h:

          Added appropriate ACE_DES_FREEs for allocator frees.

Wed Jul 20 15:40:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/ReceivedDataElementList.inl:

          Corrected comment about why the instance state is not
          deleted in the destructor.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Added delete of queue in destructor.  It was new'd in
          the constructor.

Wed Jul 20 12:11:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
          Changed ptr in read to var to not leak memory.

Wed Jul 20 13:10:23 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Fix -a option so it overrides the address properly.

Mon Jul 18 17:27:29 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/transport/simple_bp/SimpleSubscriber.cpp:

          Fix return value error that VC6 caught.

Mon Jul 18 13:30:13 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/FooTest5/publisher.cpp:

          Remove extra fclose() that was causing failures.

Mon Jul 18 13:18:45 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/Messenger.idl:
        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger/Writer.h:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger/domain_ids:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Update and merge the devguide example.  I put it here
          because it proved difficult to integrate into the TAO
          DevGuideExamples directory.

Mon Jul 18 06:43:11 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Backed out the change of Thu Jul 14 12:39:15 MST 2005
          because reference_to_servant was fixed in 1.4a_p4.

Sat Jul 16 17:51:05 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Make samples replaced in the subscriber's instance queue delete as
          well as free the sample.

        * dds/DCPS/ReceivedDataElementList.inl:

          Added a comment about the ReceivedDataElement destructor
          needing to destroy its InstanceState. But it currently
          causes troubles.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Change the number of samples from 80,000 to 20,000.

Fri Jul 15 16:01:19 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Added Paul C's changes to free read elements in the subscriber
          side instance queue that are being replaced by the recieved
          samples.  It still leaks the if the sample contains a type
          that requires freeing the fields individiually (like sequences).

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Changed this test to just have MAX_SAMPLES and
          MAX_SAMPLES_PER_INSTANCE set to the number that will be in
          the instance queue plus some for good measure.
          Previously it would set MAX_SAMPLES and PER_INSTANCE to
          the number of expected samples.

Thu Jul 14 12:39:15 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Changed reference_to_servant template to not remove
          a reference to the servant because POA::reference_to_servant
          changed in TAO 1.4a (and 1.4.x) to not increment
          the reference count.

Wed Jul 13 14:03:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Removing checks for the Dcps in the TAO_ORBSVCS list.

Wed Jul 13 10:48:01 MST 2005  Trevor Fields  <fields_t@ociweb.com>
        * dds/DCPS/Service_Participant.h:

          Changed to new Root_POA.h for all builds.

Wed Jul 13 10:28:48 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.h:
        * tests/transport/simple_bp/SimpleDataReader.cpp:
        * tests/transport/simple_bp/SimpleDataReader.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp/sub_main.cpp:

          Modified the publisher to take a size parameter (-c ).

Tue Jul 12 14:33:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Increased the receive buffer size and corrected a comment.

Mon Jul 11 13:38:21 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Set the library path correctly

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Change default values to account for correct memory usage.

Wed Jun 29 22:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
          Fixed array indexing.

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
          Fixed issues with the data size.

Wed Jun 29 20:55:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
          Adding identifier option to the publisher.

Wed Jun 29 17:09:02 MST 2005 Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/TestStats.h:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Changed to shift the data size when first passed in.  This
          fixes an issue with the tests not sending the correct amount of data.

Tue Jun 29 13:54:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Update test section per fixes and split out of DDS from ocitao repository.

Wed Jun 29 11:16:05 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Definitions.h:
          Changed ACE_Message_Block allocator to use an ACE_Thread_Lock
          The message block's duplicate method was using the same
          allocator in different threads at the same time.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
          Changed to remove all the associations when
          DataReader/DataWriter is deleted.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
          Changed to not send remove assocations call back.

Tue Jun 28 10:50:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Add release notes to the repository.

Wed Jun 15 11:28:42 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Added include of tao/Version.h so can distinguish between DOC
          and OCI's repos.  This will need to be removed after the DOC's
          POA changes come into the OCI repo.

Tue Jun 14 16:31:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/auto_run_tests.pl:
        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DdsDcps_pch.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/InfoRepo/DcpsInfo_pch.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/unit/Main.cpp:

          Changed includes to work with the DOC repo.

        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest3_1/pub_id.txt:
        * tests/DCPS/unit/test.log:

          Removed some log files that got checked in accidently.

Fri Jun 10 14:40:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/Compiler/idl_test1_main/run_test.pl:
        * tests/DCPS/Compiler/idl_test3_main/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/DCPS/unit/test.log:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Changed tests to not depend on being under TAO_ROOT.
          They still depend on ACE_ROOT being defined to locate
          the PERLACE package.

Tue Jun 10 18:55:09 UTC 2005  Trevor Fields  <fields_t@ociweb.com>

          Moved files from a branch off of TAO 1.4a to this separate
          repository.
          All files in ACE_wrappers/TAO/orbsvcs/DDS and
                       ACE_wrappers/TAO/orbsvcs/orbsvcs/DDS and
                       ACE_wrappers/bin/DCPS
          were moved over.

Tue Jun  7 16:55:09 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Fixing compilation warnings on solaris.

Fri Jun  3 19:43:05 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:

          Ensure that the maximum number of blocks per packet is not
          exceeded when filling the iovec to send.

Fri Jun  3 19:30:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:

          Ensure that the maximum number of samples per packet does not
          exceed the maximum number of blocks per packet.

Fri Jun  3 18:37:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:

          Changed the MAX_SEND_BLOCKS to be ACE_IOV_MAX if
          it is defined.

Fri Jun  3 17:33:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:

          Made the Reader and Writer sleep for 5 seconds
          before release the transport. This would avoid
          the access violation on
          TransportInterface::remove_association.

Fri Jun  3 16:06:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added delay shutdown option to subscriber.
          This is to avoid the subscriber disconnect before the
          publisher shutdown which might still be sending
          liveliness messages or unregister messages.

Fri Jun  3 15:12:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/common.cpp:

          Forgot to add this file earlier.

Fri Jun  3 14:28:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:

          Made shutdown not destroy the poa from the client's
          orb and made the_poa to get the root poa from the
          orb if it's nil.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:

          Made the subscriber pass the client's orb to the
          service participant so the framwork can use it.

Fri Jun  3 13:28:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/README:

          Allowed the test to be run with "take" parameter that makes
          it take instead of read samples.

Fri Jun  3 12:57:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/obsolete_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/README:

          Renamed the run_test.pl to obsolete_test.pl and
          documented the test is obsolete.

Fri Jun  3 13:12:02 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:

          Changed the test to wait until all data readers have connected.

Fri Jun  3 14:06:17 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Changed InstanceState::accessed back to the way it was.

Fri Jun  3 09:28:49 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:

          Fixed test shutdown problem.

Thu Jun  3 08:01:03 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Fix some spelling errors in comments and some
          internally-used function names.

Thu Jun  2 23:48:09 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Resolve build errors found using gcc but not VC++ 7.1.

Thu Jun  2 22:47:53 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Fix the liveliness changed status and instance state implementation.
          Liveliness is tracked per DataWriter in a given DataReader

        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fixed the listener_for() method to only get the factories listener
          if the mask did not enable at the current level.

        * tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DDS/DCPS/LivelinessTest/common.h:
        * tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Make the test tougher to pass and refect how liveliness should work.

Thu Jun  2 21:32:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DDS/DCPS/common/TestSupport.h:
        * tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * tests/DDS/DCPS/FooTest2/main.cpp:
        * tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3/main.cpp:
        * tests/DDS/DCPS/FooTest3/Writer.cpp:
        * tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DDS/DCPS/FooTest5/Writer.cpp:
        * tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Replaced ACE_ASSERT with TEST_CHECK so the tests can work
          on non-debug builds.

Thu Jun  2 13:55:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:

          Changed to remove an association from the mapping even if the
          subscriber or publisher dies and is marked dead.

Thu Jun  2 12:40:07 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Change logging to a file when output expects to have ERROR in
          it.

Thu Jun  2 11:52:38 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Made the sequence length to be 10 instead of 100 so the
          test can pass on Solaris.
          - The problem with longer sequence has not been
            investigated at this time.

Thu Jun  2 12:02:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Clean up comment so doesnt show up in search for //remove

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.h:

          Only build transport debugging code if ACE_NDEBUG is defined.

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/subscriber.cpp:

          Clean up //remove comments put in by Trevor.

Thu Jun  2 10:41:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed a problem in remove_oldest_sample that does not
          remove the sample in sending list from the next_send_sample
          link list.

        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Fixed the not cleanup problem.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Removed a debug logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:

          Minor changes.

Thu Jun  2 09:47:10 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Only call DataReaderImpl::liveliness_lost if the instance
          is currently active.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Change test to use liveliness_lost_status instead of
          maintaining its own counter.

Thu Jun  2 08:44:02 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:

          Fix the @file comments at the top of the file to reflect
          the proper file name.

Wed Jun  1 23:16:43 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Fix problem where library tried to link with itself.

Wed Jun  1 22:02:21 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * TAO/orbsvcs/DDS/DCPSInfoRepo.mpc:
        * TAO/orbsvcs/orbsvcs/DdsDcps.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TCPListener.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/UDPListener.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/UDPNoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/idl_test1_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/DcpsIntegration/dcps_integration.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_2/FooTest3_2.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5_0/FooTest5_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTest/MultiTopicTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Serializer/Serializer.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/common/common.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
        * TAO/orbsvcs/tests/DDS/transport/dds_comparative/dds_transport_comparative.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple/DDS_transport_simple.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_n/DDS_transport_simple_n.mpc:
        * TAO/orbsvcs/tests/DDS/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * TAO/orbsvcs/tests/DDS/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Modify mpc files to use new dcps and dcpsexe parent projects.
          This should simplify documentation and maintenance.

Wed Jun  1 17:54:27 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

           Added temporary debug log.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:

           Added #include <string> to avoid error for inline=0 builds.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Made the test complete faster and added debugging logs.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:

          Write output to stderr so logs would collate ACE_DEBUG/ACE_ERROR and
          printf logs better.


Wed Jun  1 13:54:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added option to specify the directory of files used
          to coordinate the publisher and subscriber.

Wed Jun  1 12:59:25 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Corrected the mixed transport test option parameter.

Wed Jun  1 11:34:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Removed loggings in constructor and destructor.

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.h:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.h:

          Removed /**/ in the include lines and fixed some warnings.

Wed Jun  1 10:15:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Removed the goto usages and used exception instead.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:

          Removed unused variable declaration.

Wed Jun  1 09:22:49 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:

          Add some extra scopes to avoid VC6 for loop scoping problems.

Tue May 31 23:27:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Limit debug output to when DCPS_debug_level is not zero.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Avoid hex_dump calls when not writing the results.
          Should improve performance since it happened on every sample received.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:

          Add comment on why the ORB is "paused".

Tue May 31 21:25:53 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DdsDcps.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:

          Modified these MPC files to support dcps_ts.pl build rules.
          This automatically generates *TypeSupport.idl,
          *TypeSupportImpl.h, and *TypeSupportImpl.cpp files.

        * TAO/orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/generateTS.pl:
        * TAO/orbsvcs/tests/DDS/generateTS.pl:

          Removed these files.  The C++ and IDL files are no longer needed
          because they are automatically generated.  The perl scripts are
          no longer needed because the build system will do this work.

Tue May 31 17:28:55 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Regenerated files so the listener tests run.

        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/DataReaderListener.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/UDPListener.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/subscriber.cpp:

          Added UDP listener test.

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:

          Changed some formatting.

Tue May 31 16:07:26 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Add .in() call to DataReaderListener_var usage to avoid
          implicit conversions that VC6 can't do.

Tue May 31 16:03:12 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Made the delete_datawriter/delete_datareader methods
          not erase the datawriter/datareader info by the topic
          name because there might be multiple datawriter/datareaders
          with the same topic name in the multimap.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:

          Made the data_received() method to restore the rd_ptr when there
          are multiple entries.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/README:

          Added mixed transport test and the multiple datawriters
          multiple datareaders test and updated readme.

Tue May 31 14:02:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Added entity_deleted_ state to the entities.  This is used
          to indicate that the entity is in a state of deleting.
          Currently the state is set to true while delete_contained_entites
          is removing the contained entites and then set back to false
          when finished.  Add associations was the only method changed
          to check the value.

Tue May 31 14:39:42 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fix bug in liveliness

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Check that liveliness is lost the correct number of times,
          as well as liveliness_lost_count == no_writers_generation_count

Tue May 31 10:04:46 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:

          Made the random interval much smaller so the tests run faster.

Tue May 31 07:56:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * LivelinessTest/LivelinessTest.mpc:
        * MultiTopicTest/MultiTopicTest.mpc:

          Added "after" commands to order the build of projects.

        * LivelinessTest/run_test.pl:
        * MultiTopicTest/run_test.pl:
        * MultiTopicTest/run_test1.pl:
        * MultiTopicTest/run_test2.pl:
        * MultiTopicTest/run_test3.pl:

          Made the tests scripts timeout more quickly when the test drivers timeout.

Tue May 31 06:12:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Fixed the LivelinessQosPolicy valid test.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:

          Ensured that every call to the TransportInterface is protected by the
          same PublisherImpl::lock_.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Added a SubscriberImpl::lock_ and made sure that every call to TransportInterface
          was protected by it.  Also ensured that the maps in SubscriberImpl were also
          protected by the lock.

Mon May 30 17:02:11 CDT 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:

          Make the publisher more efficient by waiting for a signal
          from each writer when it is done instead of spinning.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test_long.pl:

          Add a test that stresses the DCPS/transport framework.

Sun May 29 17:40:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_codegen.cpp:

          Add include when required for strlen() call by _dcps_find_size().

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:

          Add include required for ACE_OS::time() call.

Fri May 27 15:50:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Fixed accessing a null ACE Message block.

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TCPListener.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/subscriber.cpp:

          Adding performance test that uses a listener to call the read operation.

Fri May 27 16:11:20 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/subscriber.cpp:

          Fix warnings when using gcc.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:

          Display a message when the DataWriter::write method call fails
          so we know how far it got.

Fri May 27 14:06:31 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Avoid gready read receive buffers from creating infinite ->cont() loops.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Minor improvements in logging.

Fri May 27 13:11:31 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:

          Added methods to allow perform work to release the lock
          before trying to send data_delivered notifications.  There
          was a dead lock between the PerThreadSych running the
          perform_work() and the client calling write.  The perform_work
          would acquire the TransportSendStrategy's lock and then try to
          acquire the WriteDataContainer lock.  The client would acquire
          them in the reverse order.

Fri May 27 09:52:19 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test1.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test2.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test3.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Automate results checking.

        * orbsvcs/tests/DDS/generateTS.pl:

          Add MultiTopicTypes

Thu May 26 18:25:50 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/run_test.pl:

          These are some modifications to improve these tests
          and their reliability/speed.  The changes can be
          summarized as:
            - Write out files in the subscribers to avoid sleep calls
              in the test scripts
            - Use random port #s.
            - Remove temporary files at the end of the script.
            - Shorten the default run times

Thu May 26 14:33:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Minor change on the debug message.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Added locking for data_delivered and data_dropped.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:

          Added multiple instances, blocking and blocking timeout
          system test cases.

Thu May 26 15:48:59 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:

          Add another explicit scope to avoid VC6 variable redefinition
          errors.

Thu May 26 11:40:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener1.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener2.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener3.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/MultiTopicTest.mpc:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/README:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/domain_ids:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test1.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test2.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test3.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Initial check in of system test case 11. Still
          need to automate checking of results and double
          check coordiantion in multi process test cases

Thu May 26 10:09:41 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Add missing include for linux builds.

Wed May 25 20:56:36 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          This is a set of changes to get things compiling with
          VC6.  They consist of the following changes:
              - Add .in() calls to _var usage to avoid implicit
                conversions that VC6 can't do.
              - Add explicit scopes around some for statements
                that cause duplicate variable definitions.
              - Add some missing includes.
              - Fix some issues with 64 bit integers.  Some diagnostic
                print statements were commented out.

Wed May 25 11:59:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Fixed a problem that does not duplicate the listener.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Correct a log message.

        * orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType5/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType5/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooType5/README.txt:

          Added FooType5 library to support datatypes with key
          and without key system tests.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Updated the FooTest5 to be system test which now just test
          TCP, UDP and data type with key and without key combination
          test cases.

        * orbsvcs/tests/DDS/generateTS.pl:

          Added FooType5 directory.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:

          Made the array of message received flag are initialized
          with not received.


Wed May 25 12:42:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo1Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo2Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo3Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/README.txt:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/foolib_export.h:

          Library with 3 data type used by the multi topic test.

Wed May 25 11:13:58 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Cleanup handle timeout.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Automate the test.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:

          add missing inline

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.cpp:

          Removed these files.

Tue May 24 22:39:53 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Changed actual depth (of sample queue maximum size) used to be
          LONG_MAX when it is UNLIMITED so comparison operators will work.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added validity checking of QoS and changed the consistency
          checking to not require resource_limits.max_samples_per_instance
          to be non-UNLIMITED for history.kind=KEEP_ALL.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:

          Removed an error message in  TransportSendStrategy::send_packet()
          that is now covered by SimpleTcpSendStrategy::send_bytes().

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made send_bytes() log the errno message when returning -1.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:

          Fixed a build problem under VC++;

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Fix a problem with invalid failures because the timeout
          can be just under the timeout given.

Tue May 24 15:00:52 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Updated tests to accomodate the changes from using _var
          instead of _ptr.

Tue May 24 14:16:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:

          Removing debugging comments accidently left in.

Tue May 24 15:23:46 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/README:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/domain_ids:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Added liveliness test (system test #5).  Still a couple
          of things left to do (see README).

Mon May 23 16:29:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestException.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestStats.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/UDPNoKey.mpc
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/common.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/domain_ids
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/publisher.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/run_test-2pubs.pl
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/run_test.pl
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/subscriber.cpp

          Added UDP performance test.

Mon May 23 15:09:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Opps - forgot to commit the *TypeSupportImpl.h changes.

Mon May 23 14:20:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Added option for testing udp transport.

Mon May 23 14:14:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:

          Changed locks from ACE_Thread_Mutext to ACE_Recursive_Thread_Mutext
          to avoid single thread deadlock on Linux/gcc.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:

          Updated bin/DCPS/CPPTemplate.pm.

Mon May 23 08:20:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Made all interfaces that create or get an object reference to
          return the duplicates of the object reference, the caller
          now needs assign the returned object reference to a _var type.
          The object references internally used in Dcps lib are changed
          to using _var. When any entity needs the object reference of
          others then it will duplicate the object reference. When any
          entity needs reference to other servants, it will add_ref_
          on initilization and _remove_ref in its destructor.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated tests to accomodate the changes from using _var
          instead of _ptr.

Mon May 23 10:15:01 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:

          Conform to another in CPPTemplate.pm

Mon May 23 10:03:34 2005  James A. Chapell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Remove compiler warnings on Linux and conform to
          changes in CPPTemplate.pm

Sun May 22 22:18:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:

          Added guards protecting sample containers and statuses in the
          DataWriter.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Comment out an unused lock member.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test_rejected.pl:

          Made the test count rejected and lost samples so it will
          complete when samples are rejected or lost.
          Added a test script that should get rejected samples.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Fail when invalid paramaters are given.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.h:

          Remove these unused files from CVS.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Changed the dcps_ts.pl CPP template.

        * orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * orbsvcs/performance-tests/DDS/generateTS.pl:
        * orbsvcs/tests/DDS/generateTS.pl:

          Allow passing extra options to the dcps_ts.pl script.

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Fix indenting.

Sun May 22 13:11:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.h:

          removed.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.h:

          Changed to use the TransportDebug.h instead of Debug.h
          The two debug.h files caused conflicts on Windows.

Sat May 21 15:51:26 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DCPS/FooTest2/obsolete_test.pl:
        * DCPS/FooTest2/run_test.pl:

          obsolete test - renamed it to avoid all_tests.pl running it.

        * DCPS/FooTest3/run_test.pl:
        * DCPS/FooTest3/special_build_test.pl:
        * DCPS/FooTest3NoKey/run_test.pl:
        * DCPS/FooTest3NoKey/run_test_mw.pl:
        * DCPS/FooTest3NoKey/special_build_test.pl:
        * DCPS/FooTest3NoKey/special_build_test_mw.pl:

          The above require special builds - renamed them to
          avoid all_tests.pl running them.

        * DCPS/unit/run_test.pl:

          Redirected the output to a file because it contained
          expected "ERROR" output and both the nightly build testing
          and all_tests.pl would mark it as failed.

Fri May 20 13:45:11 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed duplicate Transport *.cpp lines.
          Added Debug.cpp and removed TheVerboseDebugFlag.cpp.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.inl:

          Replaced TheVerboseDebugFlag singleton with
          Transport_debug_level integer because the ACE_Singleton was
          slower than just looking at an integer.

Fri May 20 15:30:11 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Added DCPS_debug_level that can be set by -DCPSDebugLevel.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Changed DataWriter and DataReader memory caches to be
          allocated durring the enable() call because not until
          that time is the number of chunks determined from the
          QoS.  Before that the QoS values might change.

          Changed cached allocators to be based only on
          RESOURCE_LIMITS.max_samples.

          Also added logging with DCPS_debug_level guards.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Update for changes to dcps_ts.pl templates.

        * DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * DCPS/unit/MyTypeSupportImpl.cpp:
        * DCPS/unit/MyTypeSupportImpl.h:

          Changes to tests because of pure virtual enable_specific()
          added to DataWriterImpl and DataReaderImpl.

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/common/TestException.cpp:
        * corbsvcs/tests/DDS/DCPS/ommon/TestException.h:
        * orbsvcs/tests/DDS/DCPS/common/common.mpc:
        * orbsvcs/tests/DDS/DCPS/common/common_export.h:

          Make the common test library build for VC++.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Allow more control over the setting of QoS.
          Showed that resource_limits.max_instances can be less than
          the number of samples being sent (in other words the blocking
          on write calls works for history.kind = KEEP_ALL_HISTORY).
          Made the DataReader/Writer QoS based on the TopicQos so
          as not to have to specify it in two locations.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Update for changes to dcps_ts.pl templates.

Fri May 20 14:11:41 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:

          more read tests, make liveliness lost test more interesting

Fri May 20 10:33:02 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Update for dcps_ts.pl to reflect changes in CPPTemplate.pm

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:

          Automate checking sample infos

Thu May 19 22:46:54 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:

          Changed the Writer to not be finished until all the
          subscribers have removed their associations.

Thu May 19 14:22:32 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          Moved common files to a common directory.

        * orbsvcs/tests/DDS/DCPS/FooType4/FooDef.idl:

          added a char field to Foo.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/common/TestException.h:
        * orbsvcs/tests/DDS/DCPS/common/common.mpc:

          Moved these file to a common directory.

        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/TestException.h:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/TestException.h:

          Removed these files.

Thu May 19 12:34:07 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fix return value in lookup_topicdescription

Thu May 19 01:23:31 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:

          Made the DCPSInfo server not use a fixed address for
          the Built-in Topic transport.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Made the client side of Built-in Topic support
          not use a fixed address for the its transport.

Thu May 19 01:04:31 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fixed warnings.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Fixed core when logging acceptor open failure.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:

          Turn off Built-In Topic support in the DCSPInfo.

Wed May 18 19:49:22 MST 2005  Scott Harris  <harris_s@ociweb.com>


        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:

          Remove warnings and print out samples per num_reads.

Wed May 18 14:38:54 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:

          Only set the transport address if one is given.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:

          Removed managing process synchronization files.

Wed May 18 14:21:22 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added commented out possible kludge for Built-in Topic's
          implemnatation for TRANSIENT_LOCAL.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Made it so the SimpleTcpTransport does not require specifying the
          local_address_ in the configuration.
          If local_address_ is not set then the OS will pick the port
          and the hosts IP address will be used.

Wed May 18 13:43:51 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Removed using files to synchronize running.  Added a space between
          < and :: of the templated method instantiation in reader and writer.

Wed May 18 13:43:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:

          Fixed compilation errors on linux.

Wed May 18 10:57:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made the init_bit_topics to not register builtin topic type if
          it's already registered.

Wed May 18 13:08:06 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fixed a potentially ghastly bug in the liveliness processing.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Added a liveliness test.


Tue May 17 16:16:14 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl:

          Made the DCPSInfo consider the Transport type ID
          for association compatibility.
          Fixed a problem with the IncompatibleQosStatus policy list
          not being set.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Changed timing and comments related to setting the total_count_change=0
          when the listener is called.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Added missing argument to %p log:
             ERROR: Unrecoverable problem with data link detected: %p

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Added a test case using UDP (not TCP) and one where
          the subscriber and publisher have incompatible transport types.


Tue May 17 15:27:39 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Correcting so the test works with values 512, 2048, and 8192.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Committing regenerated files.

Tue May 17 11:52:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Made instance_handle_to_repo_id LM_ERROR log instead LM_DEBUG
          when failed to find the repo id from builtin topic data.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:

          Extended the sleep time from 5 seconds to 10 seconds after the
          create_participant to give enough time for the builtin topic
          datareaders receive the builtin topic data. This would resolve the
          problem that ignore failed due to the repo_id_to_instance_handle
          timed out.

          Made the ignore_publication and ignore_subscription always
          happened after add_assiciation because we need the repo id for
          ignore.

Tue May 17 14:05:45 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Initialize listenser_mask_ to something reasonable.
          Remove move some dead code.

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Remove commented out code.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Initialize listenser_mask_ to something reasonable.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Add a DataReaderListenerImpl to test on_sample_rejected.
          on_sample_lost, etc.

Tue May 17 10:15:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed repo_ids_to_instance_handles not return when timed out.

Tue May 17 10:01:12 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Fixed parameter order in is_xxx_ignored calls.

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixes and extra logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made add_associations tell the Transport to associate
          before it calls the listener and other work.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Added temporary logging to debug BIT test.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Made address error log the address.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:

          Improved the test and added review comments.

          Still having problems with ignore tests sometimes not ignoring.

Mon May 16 14:40:01 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

         Code review changes

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Update for dcps_ts.pl to reflect changes in CPPTemplate.pm

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

         Added some changes to facilitate future testing.


Mon May 16 12:09:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.obsolete_mpc:

          Renamed the MPC file to remove FooType2 from the build
          since it is obsolete.  Forgot this last time.

Mon May 16 08:59:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.obsolete_mpc:

          Renamed the MPC file to remove FooTest2 from the build
          since it is obsolete.

Mon May 16 08:25:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Added a comment.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Update for dcps_ts.pl template changes related to the change
          described below.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Made create_topic, find_topic, and get_topic return
          a duplicate reference and tracked entity (datawriter/datareader),
          client (from create, find) and object references separately.
          Now clients should hold Topic references in a Topic_var.

Mon May 16 07:59:52 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Code review changes

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

         The signature of InstanceState::accessed was modified in the above
         changes.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

         Added some sleeps.

Sun May 15 01:03:30 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:

          Changed PT### to Pt###.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:

          Renamed PT128* to Pt128*.

Sat May 14 23:36:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Made the subscriber have just one reader using one client
          thread (for performance reasons) and spin waiting for
          the first sample to arrive.   It was waiting for three seconds
          which was unfair because the publisher was able to
          write a bunch before the reader started reading.

Sat May 14 22:52:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Make stats handle multiple samples read at one time.
          Change -d (DATA_SIZE) to be log2(num_floats_per_sample)
          like the other comparitive tests.

Sat May 14 19:52:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/generateTS.pl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Added a Perl script to generate the TypeSupport files and ran it.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:

          Improved the performance of the test by reading multiple samples
          in each read.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Removed temporary logging that impacted performance.

Sat May 14 17:10:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Changed the TypeSupport template.

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Improved logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:

          Changed servant_to_reference to not decrement the ref_count.
          Changed TopicMap to hold Topic_vars instead of Topic_Ptrs.

          TBD - make all create_xx, find_xx, get_xxx return a
          duplicate of the object reference.

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:

          Review comments.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Simplified the logic.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Made the test return success or failure.
          Fixed ignore_participant case.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Log DCPSInfo debug output.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Enabled Built-In Topic support.

Fri May 13 17:55:45 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added checks for more invalid qos states.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:

          Corrected some error messages.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PTDef.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PTTypeLib_Export.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:

          Added performance test types.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestException.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Performance test.

Fri May 13 14:41:04 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          Put FooTest4_0 into a framework similar to FooTest5_0.

Fri May 13 09:38:29 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix occasional SEGV in Linux caused by get_datareaders.

Thu May 12 11:48:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:

          Made -NOBITS also not create a transport impl.

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Change the order of add_association notificaiton
          to avoid deadlock in single-threaded applications
          creating both the publication and subscription
          sides of the association.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Run DCPSInfo -NOBITS and pring a PASS/FAIL summary.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Improved the test.

Thu May 12 12:43:16 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          More subscriber/datareader tests - still under development

Thu May 12 11:36:47 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Fix sample_rank calculation for the case when multiple
          intances are returned by a read/take operation

Thu May 12 00:17:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Avoid infinite wait in open() when svc() gets the lock first.
          Did not happen on Windows and Solaris but happened on RH 9;
          may be it happens on slow machines.

Wed May 11 21:47:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS/AssociationData.h:
        * orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/DDS/DCPS/RcObject_T.h:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
        * orbsvcs/DDS/DCPS/Serializer.cpp:
        * orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/DDS/DCPS/SubscriptionInstance.h:
        * orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/DDS/DCPS/TypeSupportImpl.cpp:
        * orbsvcs/DDS/DCPS/TypeSupportImpl.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkAllocator_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkChunk_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.inl:
        * orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/DDS/transport/framework/DataLink.inl:
        * orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/DDS/transport/framework/NetworkAddress.inl:
        * orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/DDS/transport/framework/NullSynch.inl:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.inl:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.inl:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/DDS/transport/framework/PoolSynch.inl:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.inl:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.inl:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/DDS/transport/framework/RepoIdSet.inl:
        * orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchResource.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchWorker.inl:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.inl:
        * orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/DDS/transport/framework/TransportHeader.inl:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.inl:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.inl:
        * orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.inl:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/DDS/transport/framework/TransportSendElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/DDS/transport/framework/TransportSendListener.inl:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport_rch.h:

          Removed /**/ in the include lines.

Wed May 11 20:53:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Updated to make the test worked with one write.

  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Changed the Publication and Subscription ids to be unique across
          a domain. i.e. a publication and subscription will never
          have the same id in the same domain.

Wed May 11 19:24:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed repo_ids_to_instance_handles and instance_handle_to_repo_id.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made the add_association returned when repo_ids_to_instance_handles()
          return error.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed a bug in create_topic and update log messages in
          ignore methods.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Added checking of nil topic description in create_datareader()
          method.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Made the destructor log error if the samples are not cleaned.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Fixed a bug that causes dead lock.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/domain_ids:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:

          Added ignore test.

Wed May 11 15:07:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Remember to set the length on the returned sequence.

Wed May 11 12:03:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/FooTest5_0.mpc:

          Oops - forgot the MPC file.

Wed May 11 11:16:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Made it run with verbose logging.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          A single threaded (plus the ORB and transport threads)
          example test.

Wed May 11 12:11:26 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added debug info in data_received

Tue May 10 13:05:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:

          Added the repo id to add_associations calls.  This is the
          repo id of the object being called.  This is to prevent
          the problem where the add_association is called before the
          add_subscription or add_publication had returned with the
          objects id.

Tue May 10 11:44:02 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:

          Add "Error: " to all LM_ERROR and exception logs.

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Reduce the time waiting on "ready" files.

Tue May 10 09:46:08 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Had to #include two header files to get this to compile under
          Linux.  The two files that are now included are:
          DomainParticipantImpl.h and Service_Participant.h.

Tue May 10 10:41:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix get_datareaders.

Mon May  9 18:37:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Added functionality to disable Built-In Topics.  The
          command line parameter -NOBITS will run the Repo
          without Built-In Topic support.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Fixed the InfoRepo test.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:

          Added missing shutdown of Service Participant.

Mon May  9 16:58:35 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Make DCPSInfo tell the subscriber before the publisher
          because the subscriber will be the transport acceptor.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:

          Made Service_Participant::get_domain_participant_factory
          and parse_args consume the arguments given to them.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Turn on DCPSInfo DebugLevel 1.

Mon May  9 12:53:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Implemeted methods to convert between the instance handle
          and repo id and applied to the
          add_association, remove_association, get_matched_publication_data
          and get_matched_subscription_data methods.

          Made the publication side code to not throw the exceptions
          internally but return the error code and log errors instead.

          Other minor review fixes.

Mon May  9 12:43:35 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:

          Added -z option to enable verbose Transport logs.

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:

          Removed inappropriate "if (TAO_debug_level > 0)" gaurds around
          error messages.

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Added temporary sleep to help transport connections
          establish properly.  Marked with //REMOVE.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added temporary logging.  Marked with //REMOVE.

        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added -z option to enable verbose Transport logs.
          Changed timing trying to workaround a transport bug.
          Added more logging.

Fri May  6 16:01:04 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        *  orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added synchronization before starting data writers.

Fri May  6 16:26:44 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Identifying locations for some code change to make the connection
          establishment more robust.

Fri May  6 16:18:48 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed compilation errors on linux.

Fri May  6 13:45:02 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Extended the run time for publisher to make test pass on
          some slow machines.

Fri May  6 13:30:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:

          Moved the set_BIT to Service_Participant instead of
          DomainParticipantImpl because it needs to be set before
          create the participant.

Fri May  6 13:09:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:

          Temprary added the set_BIT () method in DomainParticipantImpl
          to turn on and off the builtin topic stuff.
          Moved the helper class to BuiltInTopicUtils and added
          the repo_id_to_instance_handle method.

        * orbsvcs/tests/DDS/DCPS/FooTest2/README:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Fixed tests.

Fri May  6 10:43:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Added split version of the test.
Fri May  6 10:38:00 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Code review changes.

        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Make the output a bit clearer.

Fri May  6 07:32:25 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          Removed a change that made it build with VC++ v6.0
          because it failed to execute properly.

Thu May  5 23:00:04 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:

          Make it build with inline=0 on gcc 3.3.2.

Thu May  5 20:08:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:

          Fix a build error.

Thu May  5 17:30:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          Changes to make it build with Visual C++ v6.0.
                  Not all tests build.  Some fail to execute.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Remove unused variable.

Thu May  5 16:19:22 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed the delete_contained_entities() not delete the
          publishers and subscribers.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/domain_ids:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupport.idl:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/README:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Added the builtin topic basic funtion test.

Thu May  5 17:40:07 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

          Removed gratuitous use of std::string.

        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:

          Retain an additional reference: own the socket.

        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:

          Extend run time.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:

          Eliminated gratuitous verbosity.  This needs to be done for other
          tests as well in order to run for the nightlies.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:

          Extend run time.

        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:

          Added some diagnostics.

        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:

          Extend run time.

Thu May  5 15:03:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Updated because the dcps_ts.pl templates changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Code review comments/changes and improved casting.

Thu May  5 13:51:37 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Cleaned up the simple test.

Thu May  5 14:52:49 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed a case problem in an include file name.

Thu May  5 14:32:19 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Removed a gratuitous use of std::string.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:

          Added the INLINE inclusion that is required when inlining is off.

Thu May  5 10:44:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

          Made the built in topic initialization in a correct order
          and enabled Transient_Kludge in init_built_in_topics().

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:

          Changed the Transient_Kludge interfaces to be clear.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:

          Made the participant's object reference is given to the
          servant before enable.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:

          Fixed a few problems in handling the builtin topics and
          added delete_topic_i() to give options to remove object
          reference.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Partcipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Partcipant.cpp:

          Added accessor for user to specify the transport port
          number for the builtin topics.

        * orbsvcs/orbsvcs/DDS/DCPS/Subscriberimpl.cpp:

          Fixed is_clean method to not count the builtin topic
          datareaders.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Updated with the new Transient_Kludge interfaces and
          minor changes on script.

Thu May  5 12:59:16 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added simple loan/return_loan test.

Thu May  5 10:27:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Added missing constructors and fixed compilation error on windows.

Thu May  5 11:21:51 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/.SimpleTcpDataLink.cpp.swp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/.SimpleTcpDataLink.h.swp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Added inline files and modified to inline all possible methods.

Wed May  4 20:10:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest5/README:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Adding a simple end to end test.  This is not cleaned up yet.

Wed May  4 15:19:52 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Add function to print all fields in SampleInfo.

        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:

          Init all fields in SampleInfo.

        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Fix call to copy_from_topic_qos.

Wed May  4 10:48:06 MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Avoid the Built-In Topic problems until Yan fixes them.

Wed May  4 07:10:27 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed compilation errors on linux.

Tue May  3 18:31:17 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DomainParticipantListener_i.cpp:
        * orbsvcs/DDS/DomainParticipantListener_i.h:

          The domain participant requires a valid listener.

Tue May  3 16:27:18 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Minor code review changes and comments.

        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.h:

          Remove unused include of <hash_map> but had to include
          <string> where std::string was used.

Tue May  3 12:22:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Implemented get_builtin_subscriber.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:

          Updated comments.

Tue May  3 11:09:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.cpp:

          Adding missing file.

Mon May  2 18:49:32 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed warning messages on gcc.

Mon May  2 17:51:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Remove memory leaks.

Mon May  2 17:12:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Changes while reviewing DomainParticipantImpl.

Mon May  2 13:05:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h:

          Resolve build errors using VC++ 7.1.

Mon May  2 11:32:41 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Code review fixes.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Implemented ignore_* methods.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Removed assert_liveliness call since it does nothing
          for current supported AUTOMATIC liveliness qos.

Mon May  2 13:25:29 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:

          Added a level to the library search to find the PerlACE package.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Added some diagnostic messages.

        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:

          Added include of <string> since std::string type is used.

Mon May  2 10:40:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_find_size
          and _dcsp_max_marshaled_size on a struct.

Mon May  2 07:45:54 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp

          I double-checked a fix that Scott had made to the send_control()
          implementation, and removed his comments (asking me to check it).
          I removed a couple of Mike's inspection comments - in one case I
          replaced his comment/question with a statement that explained what
          he was unsure about.  Also, I made an important fix in the send()
          implementation that Yan pointed out a long, long time ago.  I added
          a comment that is prefaced with "VERY IMPORTANT NOTE" to explain
          what was a subtle misuse of the DataSampleListElement.

        * orbsvcs/tests/DDS/transport/dds_comparative/dds_transport_comparative.mpc
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.h
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.h
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.h
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.h
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.h
        * orbsvcs/tests/DDS/transport/dds_comparative/TestException.h
        * orbsvcs/tests/DDS/transport/dds_comparative/pub_main.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/sub_main.cpp

          I added the new test above.  It is the comparative test that
          should also get checked-in to the projects/AdvancedAcousticConcepts
          repository (under performance-tests/comparative).  There are still
          some tweaks that could be made, and it still needs the "TestStats"
          class on the subscriber-side of things in order to collect the
          appropriate "comparative" results.  Other tests under the
          performance-tests/comparative directory have the TestStats class
          defined, so it can be "stolen" from one of those tests.

Mon May  2 09:11:22 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Fixed compilation error on linux.

Sun May  1 18:21:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Added Built-In Topic support to the info repo.  The topic names
          and types are defined in the BuiltInTopicUtils.h file.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Fixed typo and incorrect renaming of variable in the run_test.pl

Sun May  1 14:52:56 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_is_bounded on a struct.

Sat Apr 30 22:29:12 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_is_bounded on a struct.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          fix copy_from_topic_qos.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:

          Tell it where to find the data type library.

Fri Apr 29 14:13:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Made the send_control handle the no subscription case correctly.

Fri Apr 29 13:29:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Regenerated these to get changes to CPPTemplate.pm.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Change set_listener to accept a nil listener.

Fri Apr 29 12:01:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Updated to use the fast listener.

Fri Apr 29 13:56:07 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Added sample lost processing

Thu Apr 28 20:46:49 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Removed duplicate DdsDcpsInfrastructure.idl line that
          was not using the -Gdcps option.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:

          Update made while code reviewing.

Thu Apr 28 14:48:40 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/generateTS.pl:

          Added FooType3Unbounded directory for generating type support
          implementation.

Thu Apr 28 14:00:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/README:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/FooTest3_2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/README:

          Added the unbounded sequence data type test.

Thu Apr 28 12:10:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:

          fixed read_instance test.

Thu Apr 28 09:40:32 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:

          Added library dependency.

Thu Apr 28 09:28:41 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Created a perl script to generate Built-in Topic type support
          files.  And regenerated them.

        * orbsvcs/tests/DDS/generateTS.pl:

          Created a perl script to generate test type support files.
          This replaces the bash and batch files.

Thu Apr 28 10:01:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added read_instance, read_next_instance,
          take_instance, and take_next_instance unit
          tests.

Wed Apr 27 17:21:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Corrected n_chunk configuration.

Wed Apr 27 17:07:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:

          Added path to run the perl script.

Wed Apr 27 16:39:49 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Only give -Gdcps option for DdsDcpsInfrastructure.idl
          because it is the only one with Built-in Topics that
          require DCPS data type support.

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h

          Minor changes made as part of code peer review.


Wed Apr 27 15:50:37 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added control_dropped_count_ and control_delivered_count_.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Added test for control_dropped and control_delivered
          call.

Wed Apr 27 14:15:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added assert_liveliness call to the liveliness test.

Wed Apr 27 13:59:46 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Added remove_associations and get_domain_id test.
          Made the run_test.pl get the CommandLine from Process.

Wed Apr 27 16:08:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix DataReaderImpl::get_subscriber and
          DataReaderImpl::get_topicdescription

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added some more unit tests

Wed Apr 27 11:48:26 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkAllocator_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkChunk_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp

          All of the files above were added/changed to support a much
          improved (performance-wise) implementation of the
          BasicQueueLinkPool<T> class.  I also made some changes per
          code inspection comments to merge some "init()" methods into
          a non-default ctor.  It cleaned some things up and made them
          prettier.

        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp

          Moved a verbose debug message into a conditional where it should
          have been.

        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h

          Removed a commented out method that was never implemented - it
          was a remnant of a half-completed band-aid solution for the
          blocking send_control/timeout stuff that we once envisioned doing.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp
        * orbsvcs/tests/DDS/transport/simple_bp_rm/sub_main.cpp

          Added #include for the EntryExit.h and added commented-out
          lines to the front of both main() functions.  The commented-out
          line is a call to the TURN_ON_VERBOSE_DEBUG macro.  Now I
          can uncomment one line in the main() function and get all of
          the debug info.  It was needed at one point in testing, and
          I decided to just leave it in place, but commented-out.

Wed Apr 27 11:45:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Code Review fixes.

        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Make the script print the command line,

Wed Apr 27 07:12:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Review fixes and comments.

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Review comments based on review of similar code
          in Publication module.

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Make the script print the command line,
          print $ACE_PROCESS->CommandLine(), "\n";

Tue Apr 26 16:39:20 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/WriteDataContainer.cpp:

          Updated to use non-blocking send_control.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Removed the obsolete send_control method.

Tue Apr 26 17:53:32 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Corrected a bug with chaining a received sample.  It was not
          allocating new blocks in the chain...

Tue Apr 26 15:14:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:

          Made the test built after FooTest3_1NoKey lib.

Tue Apr 26 15:07:46 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

                Fixed compilation errors and warnings on linux.

Tue Apr 26 13:52:17 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/transport_dev/framework_test_exe.mpc:
        * orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:

          Removed the test code above as it was OBE.

        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.inl:

          Part of the transport "cleanup" effort.  Some new .inl files.

        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:

          Most of the changes above were made as part of the transport
          "cleanup" effort.  But there was also a significant change made
          to the send_control() logic.  It is now a non-blocking call, and
          behaves very similarly to the way the send() works.  The
          remove_all_control_samples(RepoId pub_id) has also been implemented.
          The old send_control() method still exists, but has been depricated,
          and will always return SEND_CONTROL_ERROR.

Tue Apr 26 13:13:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Changed -d and -c DCPS Servant_Participant options to
          -DCPSInfo and DCPSChunks respectively.
          Also got rid of initial_xxx_status accessors because
          the value should just be in the constructor of the
          object creating statuses.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test_mw.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/README:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Change DCPS options to long names and other minor fixes.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Minor code review changes.

Tue Apr 26 12:22:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Made changes to build under VC6.  Changes involved
          scoping the ::TAO_Singleton and scoping variables in
          switch and for statements.

Tue Apr 26 12:11:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:

          Added data_dropped_count_ and data_delivered_count_ and made
          destructor delete data_container_.

        * orbsvcs/orbsvcs/WriteDataContainer.cpp:

          Made unregister_all tell transport to remove all samples currently
          processing.

        * orbsvcs/orbsvcs/Qos_Helper.inl:

          Fixed the consistency checking on history and resource limit.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added remove sample under backpressure test and blocking writer
          test.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:

          Changed SubDriver's option to shutdown publisher to be '-x'.

Tue Apr 26 13:59:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Fix segfault caused by the take function.

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Add option to call take instead of read while
          accessing data.

Tue Apr 26 09:44:46 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:

          Do not put the library in $ACE_ROOT/lib.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:

          Find the FooType library locally.

Mon Apr 25 22:45:14 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Made -Gdcps ignore sequences of interfaces.
          Removed octet sequence optimization not supported by Serializer.

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added XXXBuiltinTopicDataTypeSupport.idl for all four BIT topics.
          Had to force XXXBuiltinTopicDataTypeSupportC/S.h/inl/cpp.  Why?

        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl:

          Added #pramgas to define BIT data types and keys.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Added generated BIT types support files.
          These need to be generated using dcps_ts.pl.

Mon Apr 25 14:23:49 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added liveliness support for the datareader.

Mon Apr 25 10:41:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataSampleList.h:
        * orbsvcs/orbsvcs/DataSampleList.inl:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed access violation due to nil listener and a few
          other bugs while testing reenqueue_all.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added test for reenqueue_all which supports transient_local qos.

        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:

          Added precompiled header.

Mon Apr 25 08:45:13 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * M orbsvcs/orbsvcs/DdsDcps.mpc:

          Changed the name of one .cpp from TransportReplacedSendElement.cpp
          to TransportReplacedElement.cpp.
          Also added all of the new source files from under the new dir:
          orbsvcs/orbsvcs/DDS/transport/simpleUDP for the UDP transport
          implementation.

        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:

          Slight mods - mostly indenting.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:

          Rename of class/source files from TransportReplacedSendElement
          to just TransportReplacedElement.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Modifications to the files above were mainly bug fixes, added
          debug info, and modifications made to support an easier way
          to "plug-in" the SimpleUdpTransport implementation while still
          supporting the ability to easily "plug-in" the SimpleTcpTransport.

        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport_rch.h:

          The new "Simple UDP" implementation source files.  I am currently
          experiencing a failure (segfault) on termination of my test
          applications for the Simple UDP transport.  I'll be looking into
          the cause shortly.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Modifed to make use of the verbose debug macro (VDBG) for
          the verbose debug output rather than straight ACE_DEBUG.

        * orbsvcs/tests/DDS/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/README:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/TestException.h:
        * orbsvcs/tests/DDS/transport/udp_simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple/sub_main.cpp:

          New transport test that uses the "Simple UDP" transport
          implementation.  This is nearly identical to the normal
          "simple" transport test except that the SimpleUdpFactory
          is used instead of the SimpleTcpFactory.

        * orbsvcs/tests/DDS/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/README:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/TestException.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple_n/sub_main.cpp:

          New transport test that uses the "Simple UDP" transport
          implementation.  This is nearly identical to the normal
          "simple_n" transport test except that the SimpleUdpFactory
          is used instead of the SimpleTcpFactory.

Mon Apr 25 09:52:57 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added sample_info function, fixed bug(typo) in get_qos,
          use cached allocators

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Added sample_info function

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Added fields required for filling out sample_info
          structure on read/take

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/FooType4/README.txt:

        Update unit tests.

Sun Apr 24 21:29:00 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Fixed build errors and warnings using gcc.

Sun Apr 24 20:35:00 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed a build problem and fixed a few warnings.

Fri Apr 22 16:52:13 USMST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:

          Specified the path to the FooType library.

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:

          Changed ACE_ASSERT to TEST_CHECK macro defined locally
          because ACE_ASSERT is a noop when built non-debug.

Fri Apr 22 16:01:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:

          Added the reenqueue_all to support TRANSIENT_LOCAL
          durability qos and added listener on_publication_match
          callback.

Fri Apr 22 15:42:13 USMST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed unused TypeSupportImpl.h/cpp.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:

          Minor changes as part of peer review.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/README:
        * orbsvcs/tests/DDS/DCPS/FooType/README:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/README:

          Added test READMEs as part of peer review.

Fri Apr 22 16:44:38 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Initial, incomplete review comments.  I am still reviewing
          TransportSendStrategy.cpp.  I am only about 30% through that file.
          Overall, it looks pretty complete and workable.  Of course, I have
          yet to get to the interesting bits!

Fri Apr 22 12:12:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Added liveliness support for the datawriter.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added liveliness test.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Updated to use the renamed convert time methods.

Thu Apr 21 17:49:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsDomain.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.h:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/dcps_integration.mpc:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/domain_ids:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:

          Added Infrastructure and Topic integration tests.  Also fixed several
          missing functionalities along the way.

Thu Apr 21 14:08:23 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new TransportReplacedSendElement.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.h:

          These are new files.  This is the TransportQueueElement subclass
          that serves as a "replacement element" for a TransportQueueElement
          that is removed from a partially sent packet via a remove_sample()
          call.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Added support to the BasicQueue<T> class to accept a visitor
          for the purposes of "element replacement".  Changed
          BasicQueueVisitor<T> class to support the "element replacement"
          style of visitation.  Modified the TransportSendStrategy to use
          the "element replacement" style of visitation for the
          PacketRemoveVisitor it uses in remove_sample().  It was using the
          "element removal" style of visitation.  And lastly, I updated
          the PacketRemoveVisitor to be capable of visiting a BasicQueue<T>
          object as a "element replacement" visitor.  The "visit element"
          operation was modified considerably to account for the act of
          element replacement.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/README:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/TestException.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/sub_main.cpp:

          Added a new transport test - the "Simple Backpressure/Remove Sample"
          test.  The SimpleDataWriter only has one DataSampleListElement to
          loan out.  When backpressure occurs, the SimpleDataWriter ends up
          having to perform a remove_sample() before it can attempt the
          next send().  When backpressure clears, things start zipping through
          the connection again.  Then we hit backpressure which causes another
          round of remove_sample()/send() calls...  until the backpressure
          clears.  Repeat.

Thu Apr 21 10:53:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Updated the data_dropped() method to only handle the case
          from remove_sample, not from the transport thread directly.
          Also updated data_delivered (), obtain_buffer () methods.

Thu Apr 21 10:40:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

         Include NetworkAddress.h instead of SimpleTcpTypes.h.

Thu Apr 21 06:26:12 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed one .cpp file and added several others.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          The files above were removed.  The contents were placed into
          two new files (see below) called the NetworkAddress.h and .cpp.

        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:

          The files above are the replacements for the SimpleTcpTypes files.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:

          Added the smart-pointer types listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.h:

          These will be used to support the SimpleUDP transport implementation
          because UDP cannot experience backpressure, and thus will not make
          use of the "send queue" or the "send thread strategy" (it will use
          the new NullSynchStrategy for the send thread strategy).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified to support the new classes that were introduced.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp

          Changed the test code above to accomodate the changes.

Thu Apr 21 00:48:40 MST 2005  Scott Harris <harris_s@ociweb.com>

       * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

         Fixed DCPSInfo IOR file name to make the test connect to the DCPSInfo.

Wed Apr 20 23:58:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:

          Put libraries in local directory (not ACE_wrappers/lib).
          Use PerlAce::add_lib_path to add the library path.
          Make builds work on Windows.

        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Added run_test.pl for FooTest4.

        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Changed test to delete the datareader(s).

        * orbsvcs/tests/DDS/DCPS/FooTest4/repo.ior:

          Removed this generated file from CVS repo.

Wed Apr 20 11:27:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added Test.idl to synchronize shutdown of subscriber and
          publisher.

Tue Apr 19 16:56:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:

          Added precompile header.

Tue Apr 19 13:42:10 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp

          Mike fixed a problem where the receive strategy was breaking
          a single sent sample into two receive samples - each with only
          a portion of the 'data' portion of the orginally sent sample.
          I've tested this using the transport simple_bp test (it was
          showing the problem), and all is now well!  Yay!

Tue Apr 19 12:07:08 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added some new .cpp files to the .mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:

          New files.  This is the singleton object used to control the
          transport's "debug verbose-ness" at runtime.  By default,
          the transport is not verbose.  There are two macros in the
          EntryExit.h file that will allow you to turn on/off the
          vebose debug messages in the transport code:

          TURN_ON_VERBOSE_DEBUG;
          TURN_OFF_VERBOSE_DEBUG;

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Added the new files above.  These allow the "Send Thread Strategy"
          to wait for the Thread Resource to wait until the resource is
          unclogged.  The SimpleTcpSynchResource implements this to wait
          via a "select" call on the socket.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:

          Modified the EntryExit such that the debug code can be completely
          compiled out (it is compiled-in by default).  Also integrated the
          use of the new TheVerboseDebugFlag to provide a runtime on/off
          switch for the verbose debug output.

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:

          All of the above was modified to integrate with the new
          ThreadSynchResource type (needed to get the backpressure case
          working).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Fixed two bugs in here in addition to integration of the new
          ThreadSynchResource type and all that it entailed.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Modifed to conform to the new "verbose debugging" stuff.

        * orbsvcs/tests/DDS/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/README:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/TestException.h:
        * orbsvcs/tests/DDS/transport/simple_bp/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp/sub_main.cpp:

          I added the new transport test above.  All new files in a new
          subdir called "simple_bp" for "simple backpressure" test.

Tue Apr 19 11:53:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:

          Fixed the decision_made parameter in the data_dropped() method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Made unregister test call write() with nil handle after unregistered.
          This will automatically register the instance again.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Made error returned when an invalid argument is pass to script.

Tue Apr 19 11:14:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Undefined ::TAO::DCPS::INFINITE_VALUE and replaced with const
          defined in DdsDcpsInfrastructure.idl.

Mon Apr 18 21:21:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Updated readme and corrected the test number.

Mon Apr 18 16:43:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:

          Added run_test.pl and updated README.txt to say how to run
          the tests.

        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:

          Made the test return 0 for success or 1 for failure
          to support run_test.pl.

Mon Apr 18 20:37:31 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          fixed delete_datareader

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed ReadDataContainer

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/repo.ior:

          Scubscriber unit test

        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:

          Removed these files.

Mon Apr 18 11:23:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Fixed a bug in detach_transport() that uses the nil
          TransportImpl.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Made the destructor call detach_transport().
          This would fix the access violation that accesses the deleted
          publisher/TranportInterface upon transport factory release.

Mon Apr 18 09:37:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

          Updated code to use TransportInterface::attach_transport() and
          SimpleTcpConfiguration_rch.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Added precompile headers.

Mon Apr 18 06:17:49 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          I added the new .cpp files mentioned below.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          New source files - the biggest change here was the introduction
          of the new Transport Send/Receive Strategy classes.  This is logic
          that used to "live" within the SimpleTcpConnection class, and has
          no been re-factored to "live" in the framework.

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:

          Lots of the files changed were just changed to add some additional
          debug info.  Otherwise, the significant change is the re-factoring
          of the SimpleTcpConnection object - pulling pieces of it up to
          the transport framework level.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:

          Test code changes.  Most of the changes was the addition of more
          debug output.  But there were some changes forced on the client
          applications due to changes made in the transport framework.

Sun Apr 17 22:42:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Added unregistered_ flag to the PublicationInstance and made the
          WriteDataContainer not remove the unregistered instance when
          unregistering and give the same instance handle when
          re-registering.

        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Fixed a bug that did not initialize some members.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Changed the n_chunk option to be '-c' instead of '-s'.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added the allocator test.

Thu Apr 14 22:55:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:

          Added code to test DataWriterImpl::get_matched_subscriptions().

Thu Apr 14 22:31:30 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:

          Added no key data type tests.

Thu Apr 14 16:32:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made the lock_ replace subscription_handle_lock_
          to protect active subscription and also status changes.
          Updated get_*_status () methods.

        * orbsvcs/orbsvcs/DDS/DCPS/Entityimpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entityimpl.cpp:

          Added StatusKind to StatusChangedFlag map to remember
          which status is changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made DCPSInfo object reference cached in the class instead
          of getting from the Service_Participant multiple times.

        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made listener_for () not return the listener if the entity
          is not enabled.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Added initial values for the statuses used in DataWriterImpl.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:

          Added the listener and status test.

        * orbsvcs/tests/DDS/DCPS/unit/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/TopicListner.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Removed files. They are not tested in unit test.

Thu Apr 14 16:12:19 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/foolib_export.h:

          Added because dogenerate.bash/bat does not generate it.

Wed Apr 13 14:17:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Corrected the assertion in data_available () method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added suspend/resume_publication test.

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataSample.h:

          Made export for windows.

Wed Apr 13 20:00:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          demarshal is no longer pure virtual

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

          added SampleInfo member

Wed Apr 13 12:55:19 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:

          Yan helped me discover a problem with the way I implemented the
          fix for the "stuck" send_control() method.  I was calling a method
          on an object that had been deleted.

Wed Apr 13 12:53:06 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:
        * orbsvcs/tests/DDS/generateTS.bat:

          Added windows batch file to do the same thing as the bash script.
          Commands to run these will be added to the nightly build XML files.

Wed Apr 13 12:05:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriterDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriterDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Made the registered_sample_ in PublicationInstance not including
          the header part. Each register/unregister/dispose call on the data
          container will give the datawriter a duplicated sample data as
          part of the control message. The control message is released when
          send_control completes.
          Removed update_control_message method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Reversed the Publisher and Subscriber start order and
          sychronized them to make test work.

Wed Apr 13 11:06:11 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Updated to reflect name changes for some transport source files,
          and to account for some new transport source files.  See below.

        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.h:

          The files above have been removed.  They have actually been
          replaced with files conforming to a standard naming scheme for
          the subclasses of BasicQueueVisitor<T>.  Some of the files listed
          below as new files are actually the renamed files.

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:

          The files above have been added.  Most are really renamed files,
          replacing files I listed as being removed.  The truely new files
          here are the PacketRemoveVisitor.h and .cpp files.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:

          Slight modifications to the way the "visitor" pattern was
          implemented.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:

          Filled in a TBD to release the sample_ (ACE_Message_Block chain)
          in the ReceivedDataSample destructor.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:

          Adjusted the send_control() method to account for the (very common)
          possibility that the control message is sent "directly" by all
          DataLinks using the thread that called send_control().  If this
          is what happens, then the send_control() will not wait() on the
          condition object.  Yan found this problem and came up with the
          solution.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:

          Added a new data member and a const accessor method for it.
          The new data member is a flag that indicates whether or not the
          condition has already been signalled.  This is used by the (new)
          DataLinkSet::send_control() logic that was described earlier.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Just added some comments to the file(s) above.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:

          Added new settings to the SimpleTcpConfiguration for the
          "maximum transport packet size (in bytes)", the "optimal transport
          packet size (in bytes)", and the "maximum samples per transport
          packet".  The default values given are 65535, 4096, and 10,
          respectively.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:

          Updated to accept the new configuration values specified above
          in the SimpleTcpDataLink::connect() method.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Updated the SimpleTcpTransport::configure_i() method to
          save off the new configuration settings mentioned earlier.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Many changes here, but the most significant were those to
          accomodate the new configuation settings as explained earlier,
          and those changes needed in order to implement the remove_sample()
          logic, which is now done.  Note that I haven't run any tests that
          actually attempt to remove_sample()... I'm crossing my fingers.

Wed Apr 13 10:09:29 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

          Made class exported on windows.

Wed Apr 13 09:46:38 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:
          Build support.

Tue Apr 12 20:00:15 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
          fix incorrect #include

Tue Apr 12 12:33:59 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added num_samples () method to provide the number of samples
          for a given instance and made the unregistered sample cloned
          for send control.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Fixed a bug on copy_from_topic_qos that does not initialize
          DataWriterQos members that are not part of the TopicQos.
          Fixed a bug on the delete_contained_entities that use an
          erased iterator.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Fixed a few missing qos assignments and removed comments.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added FooTest3_0 test to test most functionalities of the
          Publisher and DataWriter.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:

          Verified write () return value.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Added lib path to script.

Tue Apr 12 19:09:21 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Add processing for LIVELINESS
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
          Fix type in destructor
Tue Apr 12 17:46:39 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Broke out ReceivedDataElementList and SubscriptionInstance.h from
          DataReaderImpl.h and DataReaderImpl.cpp.

        * orbsvcs/tests/DDS/DCPS/FooType4/FooTypeSupport.idl:

          Removed this file.

Tue Apr 12 07:56:06 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new ChainQueueVisitor.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.h:

          I added these new files.  The ChainQueueVisitor can visit a
          BasicQueue<TransportQueueElement> object, and create a chain
          of ACE_Message_Blocks using a duplicate of each element's
          message block.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:

          Added the peek() and size() methods to BasicQueue<T>, and added
          support for "chain" visitors.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:

          Just added more verbose log messages.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:

          Added the concept of a TransportQueueElement that requires that it
          is sent in an "exclusive" transport packet.  This is for the
          "send control" messages.  This makes it such that a "send control"
          message is always sent in its own transport packet (ie, the transport
          does not aggregate any other samples into the packet).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Added all of the code to support the "direct send" and "queue send"
          logic - except for the remove_sample() logic - which is stubbed out
          for now.

Tue Apr 12 09:46:03 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Corrected a problem with managing the creation of the iovec sent to
          the recvv() call and the size indicated to the call.

Mon Apr 11 13:28:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fixed build error of not finding gettimeofday in ACE_OS
          and Windows PCH include missing.

Mon Apr 11 19:23:04 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
          Fix compile error.
        * orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType4/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType4/FooTypeSupport.idl:
        * orbsvcs/tests/DDS/DCPS/FooType4/README.txt:
        * orbsvcs/tests/DDS/DCPS/FooType4/foolib_export.h:
          Initial version

Mon Apr 11 19:09:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Add Support for Instance state
          Add demarshal to data_received
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
          Change constructor to take only DataReaderImpl *
          Added sample state support.
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          straighten out instance handle issues


Mon Apr 11 13:54:41 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
          Added command line parsing to make running lots-o-tests easier.

Mon Apr 11 13:33:23 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
          Added simple test managers.  I got tired of firing things up
          manually.

Fri Apr  8 18:20:18 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added support for InstanceState management for DataReader.  This
          needs to be integrated into the instance data containers in the
          readers.

Fri Apr  8 14:46:11 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:

          Updated message_length_ in header to not including the
          header size.

Fri Apr  8 13:47:43 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Updates made mostly by Mike, but includes a lot of ugly debug
          code that I put in there.  I'll remove the debug code shortly.
          But the simple and simple_n tests now work using the latest
          receive logic.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp

          Changed the DataSampleHeader message_length_ to not include
          header bytes.

Fri Apr  8 10:09:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3_1/DcpsFooType3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:

          Made the test library output to current directory instead
          of $ACE_ROOT/lib.

Fri Apr  8 09:08:01 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:

          Checking in what I have so far, just to get in synch with the
          latest version in CVS.  All new code is stubbed out, and not
          relied upon yet.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Modified to serialize the header correctly (using the actual code
          instead of a test kluge).

Fri Apr  8 10:53:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:

          Added ability to serialize using a reference as well as a pointer to
          an ACE_Message_Block.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Debugging.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Modified to serialize the header correctly (using the actual code
          instead of a test kluge).

Thu Apr  7 15:24:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Added Dynamic_Cached_Allocator_With_Overflow.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Used max_marshaled_size as the header size for control message
          and allocator that size for the header message block.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:

          Used Serializer for typed data.

Thu Apr  7 17:21:49 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added macro definitions to use new receive operations.

Thu Apr  7 17:00:26 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Break out dropped connection errors separately.  Ooops.

Thu Apr  7 16:37:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Added a marshaled_size() method to return the number of bytes read
          from a message block chain.  NB: This now invalidates the use of
          sizeof() operators on these headers.  Use the max_marshaled_size()
          method instead.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
          Modified to use a NULL synch for receive buffers.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          First complete receive chain coding.  Now to test...

Thu Apr  7 10:14:31 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Moved wr_ptr adjustment code from the DataSampleHeader to
          the DataWriterImpl.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Fixed a bug that returns error when inserting an already bound
          remote id to the remote map.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Added options to specify max_samples_per_instance and
          history.depth and correctly verfied results.

        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mi.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mw.pl:

          Added options to specify max_samples_per_instance and
          history.depth and combined other test cases into the
          run_test.pl.

        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:

          Dumped Foo data and reduced publisher sleep time after
          sending message.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:

          Added pre compiled header.

Thu Apr  7 09:45:22 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new .cpp files listed below.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:

          Added all of the files above.  These all play a part in the
          "Transport Send Thread Strategy" mechanism, which should hopefully
          give us a way to "plug-in" different thread strategies to be
          used for the transport sending logic.
          Note that the PoolSynch.cpp has an incomplete implementation.  It
          isn't used anywhere (yet), so this doesn't cause a problem.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          The files above were updated to make use of the new
          "Transport Send Thread Strategy" mechanism.  I made the default
          ThreadSynchStrategy be the PerConnectionSynchStrategy.  This
          can be changed to a different ThreadSynchStrategy via a change
          to the TransportConfiguration.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Very minor updates - just added a comment to each file.

Wed Apr  6 17:42:51 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
          Added max_sample_size() in the spirit of the IDL generated code.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Daily update.  First cut up to creating the sample data and message
          blocks to send on is done.

Wed Apr  6 13:07:31 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Adding implementation for receive side.

Tue Apr  5 22:45:50 USMST 2005  Yan Dai  <dai_y@ociweb.com>

         * DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Fixed problem of never sending due to the disconnect_
          not initialized.
          Made the destroy() call disconnect so the handle_output
          thread can exit upon destroy.

        * DDS/transport/framework/TransportReactorTask.cpp:

          Added more debug message.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Made the data_delivered/data_dropped not delete the
          DataSampleListElement which will be used by the transport
          afterwards.

        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:

          Made the publisher wait a while after send all data.
          This would avoid the problem of subscriber not receiving
          all messages due to disconnected by peer.

Tue Apr  5 17:16:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
          Added allocator types for the receive chain.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
          Simplified, removed that dang wr_ptr() bump that should _*NEVER*_
          have been in the low level code, and added the valid() checking
          method.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added allocators for receive chain processing.  Added pseudo code
          for what I am about to do.

Tue Apr  5 13:20:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * DDS/transport/framework/TransportReactorTask.h:
        * DDS/transport/framework/TransportReactorTask.cpp:

          Removed stop_requested_ flag and used
          run_reactor_event_loop instead of handle_events in
          a while loop.

        * DDS/transport/framework/TransportQueueElement.cpp:

          Initialized dropped_.

        * DDS/transport/framework/TransportHeader.cpp:

          Fixed compilation error on windows.

Tue Apr  5 13:23:14 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Changed the sending logic to use a thread per connection.
          This "sending thread" will service the sending queue.
          This is in place of having the reactor invoke our
          handle_output() method.  Note that all of this is eventually
          going to be replaced with a better threading strategy.  This
          is to get things to work on both Linux and Windows.  Windows
          didn't like the previous implementation that involved the
          reactor and handle_output().
          Also added was logic to cause the TransportFactory::release()
          method to shutdown the TransportImpls, which in turn will
          disconnect the DataLinks, which in turn will stop the "send
          thread" from running.

Tue Apr  5 11:27:31 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new TransportHeader.cpp file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:

          Added these two new files.  These define the TransportHeader
          struct that will prepended to each "Transport Packet" that
          is sent (and received).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp

          Added a block of commented-out code that will be used to
          prepend the TransportHeader to the data sample being sent.

Mon Apr  4 17:41:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Remove some obsolete TBD comments.

        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Update some comments on dead code.

Mon Apr  4 17:01:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Fixed sequence of array bug for _dcsp_is_bounded() and
          _dcsp_max_mashaled_size() generated code.
          The temporary sequence element value was not initialized.
          This was causing problems on gcc but not VC7.1.
          Also restored the test to a full test.

Mon Apr  4 14:42:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Removed unused argument warnings from generated code.

Mon Apr  4 10:14:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:

          Corrected insertion operator signature.

        * DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * DDS/transport/framework/TransportQueueElement.cpp:
        * DDS/transport/framework/TransportSendControlElement.cpp:
        * DDS/transport/framework/TransportSendElement.cpp:

          Added pre compiled header and fixed a few warnings on
          windows.

Mon Apr  4 09:55:53 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Removed some temporary debug code from the files above.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Made some modifications to the way that the header and data
          message blocks are created/populated.  It mirrors what happens
          in the new simple_n test code (see below).

        * orbsvcs/tests/DDS/transport/simple_n/DDS_transport_simple_n.mpc
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.h
        * orbsvcs/tests/DDS/transport/simple_n/README
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.h
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.h
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.h
        * orbsvcs/tests/DDS/transport/simple_n/TestException.h
        * orbsvcs/tests/DDS/transport/simple_n/pub_main.cpp
        * orbsvcs/tests/DDS/transport/simple_n/sub_main.cpp

          Added a new variant to the simple transport test that will send
          "n" messages (specified by -n, which defaults to 100).  See the
          README file.

Mon Apr  4 09:25:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:

          Fixed bug array of sequence bug intruduced in cleanup.

Mon Apr  4 07:39:56 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added new .cpp files and removed one .cpp file.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:

          Added the new files listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:

          Removed the files listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          Modified the files above.  All of these changes are to support the
          implementation of the transport queue.  All of this builds and runs
          on Linux.

Mon Apr  4 05:49:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/foo_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/foo_test2_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/idl_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:

          renamed orbsvcs/tests/DDS/DCPS/Compiler/foo_test* to idl_test*.

Mon Apr  4 05:19:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fixed array of arrays, sequence of arrays, enums and strings
          in arrays and enums in sequences.

        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:

          Renamed _tao_has_key(Foo) to _dcps_has_key(Foo).

        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_cs.h:

          Produced easier to debug code when the macro DCPS_DEBUG_IDL
          is defined.

        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Made unions always return false from _dcps_is_bounded(Foo) because
          _dcps_max_marshaled_size(Foo) might crash with an access violation
          if it attempted to get a correct value. _dcps_max_marshaled_size(Foo)
          on a union returns a bogus value of 10,000 to avoid producing an
          access violation.  The access violation would be caused by accessing
          a branch that was not initalized for the discriminant value when
          checking the max size for all discriminant values.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Removed unneeded debug output and TBD comments.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added more test cases.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:

          Updated the description of this test.

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Added a systematic test of IDL types.

Mon Apr  4 00:13:12 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:

          Fixed the DataSampleHeader serialization.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added DataSampleHeader serialization for publication side.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:

          Made extern functions exported on windows.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added multiple instances and multiple datawriter tests.

Fri Apr  1 17:12:46 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Updated support to include more initialization from buffers to make
          the handle_input() usage more efficient.  Added the inline file.

Fri Apr  1 14:58:46 2005  Mike Martinez  <martinez_m@ociweb.com>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
          Added support for multiple DCPS data type definitions in the IDL
          source files.

Fri Apr  1 12:41:31 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
          Relocated the pragma once appropriately.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Cleaned up a bit, including comments from Scott.

Fri Apr  1 11:44:41 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Changes to make string serialization (and by implication wstring
          serialization) work correctly.  Added missing newline to end of file.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:
          Added a missing include directive.

        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
          Added a test for string serialization.  Wstring test is present but
          lacks an actual string value.

Fri Apr  1 10:00:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mi.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mw.pl:

          Added multiple instances and multiple datawriters
          test cases.

        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test_mw.pl:

          Added multiple datawriters test case.

Fri Apr  1 11:02:40 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

        Filled in some details re ReadDataContainer

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

        Fixed compilation error on Linux

Thu Mar 31 21:45:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Changed _tao_find_size to _dcps__find_size and
          _tao_max_marshaled_size to _dcps_max_marshaled_size.

Thu Mar 31 20:59:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added support for sequence of arrays, sequences strings and unions.
          Added support for unions containing structs and strings.
          Backed out typedef xx _base_type; addition when I found that I could
          get it from the AST when I needed to use it.
          Changed "4"s to _dcps_max_marshaled_size_ulong().

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added _dcps_max_marshaled_size_ulong() for lengths of strings and sequences.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Tested newly supported types (see above).

Thu Mar 31 17:07:27 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added serialization support for the header.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added use of serialization support for the header.

Thu Mar 31 11:13:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_field/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added DCPS support for a union of predefined types in a structure
          and start of support for user defined types in union branches.

        * docs/compiler.html:

          Documented the -Gdcps switch.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added a union to the test.

Thu Mar 31 09:16:11 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

          Applied the network address to transport info blob.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          Fixed compilation errors on windows.

Thu Mar 31 07:52:37 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new SimpleTcpTypes.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          These are new files.  Currently, the only type is the
          NetworkAddress type.  This used to be a struct defined within
          the SimpleTcpTransport class, but has now been moved "up" to
          live under the TAO::DCPS namespace.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Removed the NetworkAddress struct from the header and moved it
          into its own file (see SimpleTcpTypes.h and .cpp).  Also
          modified the use of the NetworkAddress within the SimpleTcpTransport
          to use the new version of the NetworkAddress struct.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Updated the "faking out" logic that creates AssociationData
          structs that normally come from the Repository.  This logic
          uses the new NetworkAddress struct.

Wed Mar 30 16:34:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/FooType3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/README.txt:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/foolib_export.h:

          Added FooTest3NoKey and FooType3NoKey.

        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:
        * orbsvcs/tests/DDS/DCPS/FooType3/README:

          Updated documentation.

Wed Mar 30 16:37:09 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed some locking issues regarding the adding and releasing
          of DataLink reservations.  Also, fixed the way the connection
          info is constructed for SimpleTCP so that it is byte-order safe.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          These tests "fake out" the Repository by constructing the
          AssociationData objects themselves.  This needed to be changed
          due to the changes made for the SimpleTCP transport to get
          the byte-order handled correctly.

Wed Mar 30 14:06:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added FooTest3_1 integration test.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added PUBLISHER_TEST guard the code calling transport via
          PublisherImpl.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Minor changes.

Wed Mar 30 12:16:30 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:

          Removed unnessary warning from IDL compiler with -Gdcps option.
            "Warning: DDS does not support <corba type> in data types"

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fixed generated code to not give unused variable warning.

Wed Mar 30 11:33:30 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Change character to Serializer operator<< methods to take const
          characters to be compatible with generated code.

        * TAO_IDL/be/be_global.cpp:

          Disallowed trailing extra characters after -G options.

        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_ch.h:

          Added support for strings, sequences, structures in structures.
          Fixed _tao_is_bounded() and _tao_find_size() to work in more cases.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Updated test to test strings, sequences and structures.

Wed Mar 30 11:18:14 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * DDS/DCPS/DataWriterImpl.cpp:

          Fixed warnings.

        * DDS/transport/framework/DataLink.cpp:
        * DDS/transport/framework/DataLink.h:
        * DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * DDS/transport/framework/ReceiveListenerSetMap.h:
        * DDS/transport/framework/TransportFactory.cpp:
        * DDS/transport/framework/TransportFactory.h:
        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/framework/TransportReactorTask.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Added locking in certain places and solved some race condition
          problems in the DataLink when it releases its last reservation.
          The TransportImpl could, at the same time (in another thread),
          find the DataLink as being suitable for another TransportInterface's
          request to add associations.  Also fixed some other TBDs.

Tue Mar 29 16:58:30 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DdsDcps.mpc:

          Removed the ReceiversMap.cpp from the SourceFiles.

        * DDS/transport/framework/ReceiveListenerSetMap_rch.h:
        * DDS/transport/framework/ReceiversMap.cpp:
        * DDS/transport/framework/ReceiversMap.h:

          Removed these three source files.

        * DDS/transport/framework/DataLink.cpp:
        * DDS/transport/framework/DataLink.h:
        * DDS/transport/framework/ReceiveListenerSet.h:
        * DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * DDS/transport/framework/ReceiveListenerSetMap.h:
        * DDS/transport/framework/RepoIdSetMap.cpp:
        * DDS/transport/framework/RepoIdSetMap.h:
        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/framework/TransportInterface.cpp:

          Updated the DataLink maps to remove the TransportInterface.
          This simplification has been made because of the recent change
          where we do not inform the TransportInterface about the
          data_received() "event".

Tue Mar 29 16:20:09 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:

          Implemented support for string and wstring operations.

Tue Mar 29 14:58:48 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Remove SubscriberImpl::data_received

Tue Mar 29 11:12:32 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Integrated with Tim's change of combining the TransportListener
          and TransportInterface together.

Tue Mar 29 11:12:47 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Implemented some of the remove_sample() logic.  But the big change
          was the removal of the ReceiveListenerSet_rch data member from the
          ReceivedDataSample *and* the removal of the data_received() method
          from the TransportInterface.  The data_received() was a pure
          virtual method, so this will affect any subclasses of the
          TransportInterface class.  I have made those changes in the files
          below.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          These are the changes to the DCPS "core" code due to the
          transport framework changes made above.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:

          These are the changes to the simple tranport test due to the
          transport framework changes made above.

Tue Mar 29 08:41:07 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed the TransportListener.cpp from the Source_Files.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:

          This file has been removed.  The TransportListener and the
          TransportInterface have been "merged" into one class -
          and it is called the TransportInterface.  Publishers and
          Subscribers should inherite from the TransportInterface rather
          than the (now defunct) TransportListener.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Updated code for various reasons.  Some minor TBDs have been
          cleared up, I've added some locking to some of the classes where
          it was missing (and needed), and I've made changes due to the
          merging of the TransportListener and TransportInterface classes.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          These files were changed as a result of the merge of the
          TransportListener and TransportInterface classes.  Authors
          of these classes should probably perform a "cvs diff" to see
          what modifications were made.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:

          This test code was also modified in light of the merging of
          the TransportInterface and TransportListener classes.


Mon Mar 28 23:52:06 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooDef.idl-dont-compile:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupport.idl-dont-compile:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.inl:

          Removed the stub and skeleton code and hand coded servant
          implementation.

        * orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/README.txt:

          Updated to make the test work.

Mon Mar 28 17:23:33 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Corrected the servant's reference count and made the
          TopicImpl::is_clean () check topic reference count to
          see if any datareader/datawriter is using it.

Mon Mar 28 15:55:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:

          Added Cached_Allocator_With_Overflow to provide the cached
          allocator which can allocate memory on the heap when the
          preallocated memory is not enough.
          Made the chunk size of the Cached_Allocator_With_Overflow
          for datawriter specified from the command line ("-s").
          Made initial qos accessor functions to be inline.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Changed the WriteDataContainer constructor.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Updated test to use the Cached_Allocator_With_Overflow.

        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:

          Update comments.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Fixed a bug on the PUBLISHER_TEST code.

Mon Mar 28 16:43:27 2005  Mike Martinez  <martinez_m@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Corrected a return statement.

        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
          Added newline to end of file.

Mon Mar 28 11:25:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/foo_test2_lib.mpc:

          Added test that compiles dcps_ts.pl generated files.

Mon Mar 28 09:05:10 MST 2005  Scott Harris <harris_s@ociweb.com>

          Added DCPS support in the TAO IDL compiler when -Gdcps is given.
          Details of the change are grouped below.

        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:

          Make a serializer pass for *C.h and *C.cpp.

        * TAO_IDL/be_include/be_visitor_array/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_module/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_root/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_cs.h:
        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_module/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_root/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added code to generate DCPS/serializer code.
          Code includes operator<< and operator>> methods calling
          TAO::DCPS::Serializer, _tao_max_marshaled_size(Foo),
          _tao_is_bounded_size(Foo) and _tao_find_size(Foo) methods
          for Foo and its sub-types as well as struct KeyLessThan
          (for std::map support) and _tao_has_key(Foo) for just
          the Foo type.

          Currenlty, the data type, Foo, must be a structure and can only
          contain scalar/predefined types, arrays and enums.
          Sequences, strings, and unions are not yet supported.
          Keys can only be scalar/predefined types and enums at this time.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Handle #pragma DCPS_DATA_TYPE and #pragma DCPS_DATA_KEY.
          Can handle multiple keys per data type but just one data type
          per compiler invocation.

        * TAO_IDL/be_include/be_visitor_array.h:
        * TAO_IDL/be_include/be_visitor_enum.h:
        * TAO_IDL/be_include/be_visitor_field.h:
        * TAO_IDL/be_include/be_visitor_module.h:
        * TAO_IDL/be_include/be_visitor_root.h:
        * TAO_IDL/be_include/be_visitor_sequence.h:
        * TAO_IDL/be_include/be_visitor_structure.h:
        * TAO_IDL/be_include/be_visitor_typedef.h:
        * TAO_IDL/be_include/be_visitor_union.h:
        * TAO_IDL/be_include/be_visitor_union_branch.h:
        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_field.cpp:
        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:

          Make DCPS/serializer code part of the IDL compiler using
          #inlude - yuck.

        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be/be_decl.cpp:

        Add support for not generating serializer code multiple times.

        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be/be_codegen.cpp:

        #include "orbsvcs/DDS/DCPS/Serializer.h" if -Gdcps is given.

        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be/be_global.cpp:

        Parse -Gdcps option.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added _tao_max_marshaled_size(<type>) methods to support
          getting the size of a buffer for serialization.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/foo_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added a test of the -Gdcps option and using
          the TAO::DCSP::Serializer.

        * orbsvcs/tests/DDS/DCPS/DCPS_IDL_tests.mwc_skip:

          Make solution for DCSP IDL tests but only if explicitly requested;
          not just because it was picked up by -recurse.

Fri Mar 25 15:03:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Changed source_timestamp in DataSampleHeader to have sec_
          and nanosec_ instead of the ACE_Time_Value and added
          funtion to convert between the ACE_Time_Value and
          ::DDS::Time_t.
          Added the source_timestamp to the register_instance,
          unregister and dispose methods in DataWriterImpl to support
          the *_w_timestamp interfaces.
          Resolved some tbd.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:

          Made the TransportListener cache the connection_info and
          provide accessor.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Implemented the interfaces with the timestamp.

Fri Mar 25 12:34:52 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Added two .cpp files and removed one.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h

          Renamed and changed the ReceivedDataSampleList.h and .cpp
          files to ReceivedDataSample.h and .cpp.  Plus - the List
          type no longer exists and there is no "next_" data member
          in the ReceivedDataSample anymore.  BTW, the ReceivedDataSample
          class is what was formerly known as the
          ReceivedDataSampleListElement class.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap_rch.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.h

          Added these files since I needed to integrate the TransportListener
          into one of the DataLink's maps.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp

          Changed these files due integration of the TransportListener into
          one of the DataLink maps, the changes to the ReceivedDataSampleList
          type (its removal) and interface changes made due to it, as well as
          completing the initial implementation of the receive/deliver logic.
          I also removed a bunch of debug statements.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple/README
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp

          Updated the test code due to changes in the framework, and made
          the SimpleDataReader print out the message it receives.
          I also removed a bunch of debug statements. And I added a README
          file.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp

          These DCPS files were modified due to the removal of the
          ReceivedDataSampleList type, the renaming of the
          ReceivedDataSampleListElement type (to ReceivedDataSample), and
          the interface changes involving the various data_received()
          methods.

Fri Mar 25 11:18:26 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Corrections after feature testing.

        * orbsvcs/tests/DDS/DCPS/Serializer/.cvsignore:
        * orbsvcs/tests/DDS/DCPS/Serializer/README:
        * orbsvcs/tests/DDS/DCPS/Serializer/Serializer.mpc:
        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
        * orbsvcs/tests/DDS/DCPS/Serializer/run_test.pl:

          Initial feature tests.  This still needs to be ACE-ified, and
          should add some cases driven from written files so that we
          ensure that the ordering for all expected cases is handled,
          but this covers all the known issues that I am aware of.

Fri Mar 25 09:06:10 2005 Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
          Typed a constant.

Thu Mar 24 17:19:29 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Added documentation and added the implementation
          for the status condition methods.
          Added the listener_for method to find the listener
          for a specific status kind. The listener will not
          be copied from the factory to the entity which does
          not have a registered listener.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Updated tests to get the default
          datawriter/datareader/topic qos from its factory instead
          of from the initial values.
          Removed the using_factorys_listener parameter from
          datawriter initialize method.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated DataSampleList test.

Thu Mar 24 15:43:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:

          Minor cleanup and "_i" became "Impl" postfix for servants.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Change #if 1 code to #ifndef PUBLISHER_TEST so by default
          the code will use the Transport but adding the PUBLISHER_TEST
          macro to the build line will produce code for publisher testing.

Thu Mar 24 13:53:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added comments and review notes.

Thu Mar 24 12:39:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubsciberImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:

          Fixed a few bugs found while testing with FooTest3.

Thu Mar 24 08:45:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Got the connection establishment code working in my tests.  I
          also filled-in the implementation for the send() calls.  Of
          course, the queue is missing, so the send() call will change
          eventually.

          The next set of changes that are coming will be the logic to
          actually receive messages from the connection, turn them into
          a ReceivedDataSampleList, and deliver the ReceivedDataSampleList
          to the appropriate TransportListener objects.

Wed Mar 23 14:30:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Fixed compilation error on windows.

Wed Mar 23 14:46:29 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added interfaces for reading and writing arrays of basic
          types.

Wed Mar 23 14:19:39 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Add implemenations for data_received's and
          SubscriberImpl::get_datareaders

Wed Mar 23 12:09:43 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added new .cpp files listed below.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport_rch.h:

          Added the files above as I attempt to solve the connection
          establishment problem.  I'm currently debugging the connection
          establishment solution that is being checked in, but it does
          have problems right now.  This all builds on Linux.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified the files above as I attempt to solve the connection
          establishment problem.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:

          Modified the test code above as I attempt to solve the connection
          establishment problem.

Tue Mar 22 12:44:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:

          Added FooTest3 which uses the FooType3 lib.

Tue Mar 22 12:24:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:

          Added the implementation to FooDataWriter_i and
          FooDataReader_i.

Tue Mar 22 10:40:07 MST 2005  Scott Harris <harris_s@ociweb.com>

        * DcpsFooType3.mpc:
        * FooDef.idl-dont-compile:
        * FooDefC.cpp:
        * FooDefC.h:
        * FooDefC.inl:
        * FooDefS.cpp:
        * FooDefS.h:
        * FooDefS.inl:
        * FooDefS_T.cpp:
        * FooDefS_T.h:
        * FooDefS_T.inl:
        * FooTypeSupport.idl-dont-compile:
        * FooTypeSupportC.cpp:
        * FooTypeSupportC.h:
        * FooTypeSupportC.inl:
        * FooTypeSupportImpl.cpp:
        * FooTypeSupportImpl.h:
        * FooTypeSupportS.cpp:
        * FooTypeSupportS.h:
        * FooTypeSupportS.inl:
        * FooTypeSupportS_T.cpp:
        * FooTypeSupportS_T.h:
        * FooTypeSupportS_T.inl:
        * README.txt:
        * foolib_export.h:

          Added Foo type library in style the DDS script and compiler will
          produce.  NOTE: see README.txt about why *C.* and *S.* are
          checked in.

Mon Mar 21 12:38:19 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:

          Fixed compilation errors and warnings on linux.

Mon Mar 21 09:39:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h:

          Fixed compilation error on linux.

Mon Mar 21 08:27:30 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Updated the DataSampleList and WriteDataContainer for
          blocking/non-blocking write.
          Added the HISTORY, RESOURCE_LIMITS and RELIABILITY qos
          checking in Qos_Helper.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated unit test after the DataSampleList change.
          Added blocking write tests.

Mon Mar 21 07:02:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h

          New header file added for debugging only.  This will ultimately
          be removed from the source code, but is here during development
          to assist in tracing the code.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Added EntryExit statements for debugging.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp

          Added EntryExit statements for debugging + other debug statements
          and some fixes to problems found in testing.

Fri Mar 18 14:17:03 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:

          Interface change!  Woop-Woop-Woop!  Sound the alarm!  Only a
          single ReceivedDataSampleListElement is sent to the data_received()
          method on the TransportReceiveListener.  Note that the
          TransportListener's data_received() has not changed.  It receives
          a ReceivedDataSampleList argument still.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Fixed some TBDs in the test subscriber exe code.  And adjusted
          the SimpleDataReader to accomodate for the TransportReceiveListener
          interface change.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Made changes to accomodate for the TransportReceiveListener
          interface change.  Also fixed three unused argument warnings
          in the WriteDataContainer.cpp file.  All of this stuff builds
          on linux without errors or warnings.


Fri Mar 18 14:34:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Some code cleanup, added add_associations,
          SubscriberImpl::enable_reader, added
          DataReaderImpl::enable and got rid of
          find_topic/delete_topic in SubscriberImpl

Fri Mar 18 13:19:46 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS_transport_simple.mpc:

          Added a new sub-project to the mpc file for the test subscriber exe.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          New files added for the test subscriber exe.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp

          Just whitespace changes.

Fri Mar 18 12:08:15 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Filled in the remaining TBDs for the test publisher exe.

Fri Mar 18 11:12:47 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:

          Added the new header file for the singleton TransportFactory.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Filled-in more pieces of implementation, replacing stub code.

        * orbsvcs/tests/DDS/transport/simple/DDS_transport_simple.mpc:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/TestException.h:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:

          The simple test publisher executable code for testing the
          transport framework.  There are still just a couple of TBDs
          in this code.  The simple test subscriber code will be added
          here shortly.

Thu Mar 17 17:59:06 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TransportSendListener.h:

          Made the PublicationInstance struct defined in
          PublicationInstance.h instead of inside of WriteDataContainer.
          Made the DataSampleListElement has PublicationInstance
          pointer instead of InstanceHandle_t.
          Fixed a few bugs while testing.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp

          Made multiple threads write.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Minor change.

Thu Mar 17 17:34:35  MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/SimpleTcpConnection.cpp:

          Added PCH include to fix VC7.1 build.

Thu Mar 17 16:12:14 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the SimpleTcpConnection.cpp to Source_Files.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Initial checkin of these files.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Integrated pieces of the Acceptor/Connector logic into the
          SimpleTCP code.  Still more to do.  This compiles on Linux.

Thu Mar 17 15:44:35  MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:

          Added PCH include to fix VC7.1 build.

Thu Mar 17 14:28:57 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp

          Modified test code to use a SimpleTcpConfiguration object
          to configure the TransportImpl objects (using SIMPLE_TCP type_ids).

Thu Mar 17 14:10:57 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * DdsDcps.mpc:

          Added new .cpp files (see below).

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink_rch.h:

          Added these new files (listed above).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified these files (listed above).  Now a great deal more of the
          TransportImpl and DataLink implementation is available.  Most work
          is now being focused on the simpleTCP code, with more updates to
          come shortly before jumping into writing the test code.

Thu Mar 17 12:06:35 MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:

          Fixed DLL import cut & paste error to build under VC7.1.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added PCH include to build under VC7.1.

Wed Mar 16 22:27:02 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Made class exported and fixed DataSampleList operations.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
        * orbsvcs/tests/DDS/DCPS/unit/MyTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/unit/MyTypeSupportImpl.cpp:
          Updated unit test and added DataSampleList test.

Wed Mar 16 13:36:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Fixed a few bugs while testing.

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest2/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType.idl
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.mpc
        * orbsvcs/tests/DDS/DCPS/FooType2/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/footype_export.h
          Added FooTest2 which tests the current implementation of
          publication side.

Wed Mar 16 13:18:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Fixed compilation error.

Wed Mar 16 14:16:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        Continue SubscriberImpl/DataReaderImpl coding

Wed Mar 16 12:28:09 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkIdMap.h:
          Removed this file.  Turns out that I needed something like
          a DataLinkIdSetMap, and the existing DataLinkSetMap fulfills
          this need and actually works a bit better.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          This is the initial version of the concrete subclass of
          the DataLink base class - this one for the SimpleTcp
          implementation of the transport.  All methods have stubbed
          implementations at this point.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
          Worked off several of the TBD issues that remained in various
          parts of the code, and implemented a great deal (if not all) of
          the DataLink methods.  Note that all of these changes have been
          built on Linux with no errors or warnings.

Tue Mar 15 16:35:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Reduced the subscription_handle_lock_ locking scope.

        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps.mpc:
          Added missed files.

Tue Mar 15 15:01:39 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Change unregistered method not be pure virtual function.

Tue Mar 15 15:11:37 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * ReadDataContainer.cpp:
        * WriteDataContainer.h:
          Fixed a compilation error and warning under Linux.

Tue Mar 15 14:41:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Changed the container to have the InstanceHandle_t set
          instead of using InstanceHandle_t to PublicationInstance
          map. The InstanceHandle_t intenally is the pointer to the
          PublicationInstance. This would avoid multiple lookups.
          Also added the HISTORY and RELIABILITY qos support.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Made DataWriterImpl inherited from TransportSendListener.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
          Added message_length_ to header.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
          Made the DataSampleList operations to be inline.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
          Made delete_* methods calling the deactivate_object and
          added the remove_sample call in PublisherImpl.

        * orbsvcs/DDS/DCPS/Exceptions.h:
          Added more exceptions.

        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
          Fixed compilation error.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
          Added deactivate_object method.

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetmap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
          Fixed compilation error and added precompiled header.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
          Removed the "//" from the include path.

Tue Mar 15 15:20:17 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
          Needed to add an include for compilation without inlining.
          This was due to internals of ACE implementation.

Tue Mar 15 14:49:16 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
          Needed to include additional files when not inlining.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Added ACE_UNUSED_ARGS() macros.

Tue Mar 15 13:30:55 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkIdMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
          Added these new files.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Filled in a lot more of the implementation, including all of the
          changes to the implementation due to the recent interface changes.
          There is too much to list specifically.  There are a few classes
          that still need a lot of work: TransportImpl and DataLink.  I have
          most, if not all, of that implementation stubbed out.  Almost all
          other parts of the framework are implemented, with a few exceptions.
          A cohesive/completed locking strategy is still an outstanding issue.

        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Had to add implementation of a method (search for TMB comment)
          to get a test executable to link.

Tue Mar 15 14:23:42 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Started fleshing DataReaderImpl (still a ways to go)
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          More changes to conform with TransportListener

Tue Mar 15 11:00:58 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Corrected the declaration and definition of the disambiguated
          extration operators to be extractors.  Added some
          documentation comments to explain the copy/swap operations.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
          Cleaned up the swap routine slightly.

Mon Mar 14 16:55:48 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Forgot to change the length() calls to space() calls for the
          wirte operations.

Mon Mar 14 16:29:48 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
          First attempt at the Serialization object.  This includes
          overloaded insertion and extraction operations, disambiguation
          types and optimized copy and swap.  It does not contain
          support for string types or array reads and writes at this
          time.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added the Serializer source files.

Mon Mar 14 12:42:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Changed to conform with Transport changes
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
          Initial version of ReadDataContainer (stubb, for now)
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          added ReadDataContainer

Fri Mar 11 16:04:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
          Removed Tim's comments and some deprecated methods.

Fri Mar 11 15:50:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Removed the DDS/DCPS/RcObjectBase.cpp.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
          Fixed the compilation error.

Fri Mar 11 15:15:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * M orbsvcs/orbsvcs/DdsDcps.mpc:
        * M orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * A orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * A orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * M orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:
        Fixed compilation warnings and errors on linux.  Also made changes
        to the reference counting "infrastructure" types (and names).

Fri Mar 11 14:40:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
          Fixed compilation warning and errors on linux.

Fri Mar 11 14:02:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
          Fixed compilation on windows.

Fri Mar 11 09:11:51 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMapMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMapMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportExceptions.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Major interface changes for the transport framework.  I ended up
          having to stub-out quite a bit of implementation to get this to
          compile.  Look for my initials (TMB) for places in the code where
          I had to do this.

Thu Mar 10 07:54:41 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Added data_received member function
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Fixed #ifdef #else #endif
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          implemented abstract methods from TransportListener

Thu Mar 10 00:01:28 CST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Added enqueue and dequeue operations to the DataSampleList
          and applied to the WriteDataContainer.

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/DDS/DCPS/PubliserImpl.h:
        * orbsvcs/DDS/DCPS/PubliserImpl.cpp:
          Change the PublisherImpl constructor to pass the
          DomainParticipant servant and added the code for
          foodatawriter test.

        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
          Moved the typedef of MessageBlockAllocator and DataBlockAllocator
          from DataSampleList.h to Definitions.h.

Tue Mar  8 13:38:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Updated the Sequence and CoherencyGroup data type.

        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Added enable checking for idl iterface implementation.

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
          Updated "not enabled" error log messages.

Tue Mar  8 11:12:49 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DcpsInfo_pch.h:
        * orbsvcs/DDS/DcpsInfo_pch.cpp:
          Added precompile header to the source code directory
          instead of using the DdsDcps_pch.h file.

Tue Mar  8 08:09:05 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/DDS/transport/framework/DataLinkMapMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkMapMap.h:
        Initial checkin of the Map of RepoId to DataLinkMap elems.

        * orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        Added more implementation based upon recent discussions with Mike.


Mon Mar  7 17:38:55 2005  Mike Martinez  <martinez_m@ociweb.com>
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        Added PCH stuff and orbsvcs directory include.  This may need
        to be corrected.

        * orbsvcs/DDS/DCPSInfo_i.h:
        Moved pragma once, inserted space to allow parser to
        understand global scope operator inside template
        specification.

        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        Changed ordering of initializers to correspond to declaration.

        * orbsvcs/DDS/DCPS_Utils.cpp:
        Added ACE_UNUSED_ARG macro.

        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.h:
        Moved pragma once.

Mon Mar  7 14:45:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Fixed a few warnings when building on linux.

Mon Mar  7 14:40:03 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
          Updated to get this to build on Linux with just a few
          warnings remaining.
          See 2 "TBD" messages in PublisherImpl.cpp and 1 "TBD" message
          in WriteDataContainer.cpp.


Mon Mar  7 13:16:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
          Updated the publication implementation to use the
          WriteDataContainer per datawriter.


Mon Mar  7 12:55:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.cpp:
          Added precompiled header and fixed compilation errors on
          windows.

Mon Mar  7 11:21:46 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
          Added more incomplete logic and pseudo-code comments.  This
          still builds on Linux.  I am checking-in because I want to
          discuss some of the implementation with Mike.

Mon Mar  7 10:32:39 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added new .cpp files from transport/framework dir (see below).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_var.h:
          Added these new files (initial checkin).

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
          Added logic in place of stub code, and added more comments
          and pseudo-code where implementation is still incomplete.
          This is all building on Linux - I may have broken the windows
          build because of the new DataLink and DataLinkMap classes.

Mon Mar  7 10:40:25 2005  James A. Chappell  <chappell_j@ociweb.com>
          Added find_topic to create_data_reader
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

Mon Mar  7 09:24:33 2005  James A. Chappell  <chappell_j@ociweb.com>
          Added initial implementation of SubscriberImpl
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

Fri Mar  4 09:58:04 CST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/DDS/DCPS/AssociationData.h:
          Added some missing standard comments.

        * orbsvcs/DDS/DCPS/DataSampleList.h:
          Created this file, containing the DataSampleList and
          DataSampleListElement types.

        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportListener.h:
          Added stubbed implementations of the following methods:
          Note that I am not showing the signatures here:
            TransportInterface::send()
            TransportInterface::send_control()
            TransportListener::data_received()
            TransportListener::data_delivered()



Thu Mar  3 17:56:48 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/DDS/DCPS/DataReadImpl.h:
        * orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
          Cleaned up the #include paths and made compiled on windows.

Thu Mar  3 16:41:21 CST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DCPS/AssociationData.h:
          Extracted this out of the PublisherImpl.h file into its own
          file because the TransportInterface needs to include it.

        * DCPS/DataWriterImpl.cpp:
        * DCPS/DomainParticipantImpl.cpp:
        * DCPS/PublisherImpl.cpp:
        * DCPS/PublisherImpl.h:
          Fixed warnings by using the in() method on _var objects.

        * DCPS/RcObjectBase.cpp:
        * DCPS/RcObjectBase.h:
        * DCPS/RcObjectHolder_T.h:
        * transport/framework/TransportDefs.h:
        * transport/framework/TransportExceptions.h:
        * transport/framework/TransportFactory.cpp:
        * transport/framework/TransportFactory.h:
        * transport/framework/TransportImpl.cpp:
        * transport/framework/TransportImpl.h:
        * transport/framework/TransportImplFactory.h:
        * transport/framework/TransportImplFactory_var.h:
        * transport/framework/TransportImpl_var.h:
        * transport/framework/TransportListener.cpp:
        * transport/framework/TransportListener.h:
        * transport/simpleTCP/SimpleTcpFactory.cpp:
        * transport/simpleTCP/SimpleTcpFactory.h:
        * transport/simpleTCP/SimpleTcpTransport.cpp:
        * transport/simpleTCP/SimpleTcpTransport.h:
          Cleaned up the #include paths and added the silly /**/ comment
          between the #include and the filename.

        * transport/framework/TransportInterface.cpp:
        * transport/framework/TransportInterface.h:
          Added a stubbed version of add_assocations() and
          remove_associations to the TransportInterface, using the
          agreed upon signatures.


Thu Mar  3 14:05:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Made the transport code built on windows.

Thu Mar  3 13:29:13 2005  Mike Martinez  <martinez_m@>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Added ACE_UNUSED_ARG() to remove warnings.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
          Added newline to end of file to remove a warning.

        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
          Fixed a problem with the pragma once thingie.

Thu Mar  3 13:13:58 CST 2005 Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportExceptions.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/tests/DDS/DCPS/transport_dev/framework_test_exe.mpc:
        * orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:
          Initial checkin of the DDS transport framework code.
          This builds under Linux, but won't work on Windows.
          Yan has agreed to make it build on Windows very shortly
          after I commit.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added all of the .cpp files from the DDS transport framework
          and the simple TCP transport directories (see files above)
          into the Source_Files for the main DDS library.  This
          might have to change in the future if we decide to go with
          separate libs.

Wed Mar  2 14:17:03 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
          Fixed the compilation errors on the Solaris platforms.


Tue Mar  1 13:28:27 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps_pch.cpp:
        * orbsvcs/orbsvcs/DdsDcps_pch.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps_pch.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps_pch.h:
          Moved the precompiled header to avoid problems with it getting
          put into other projects

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
          Compilation fixes, pre compiled header change, and
          include of TAO_ROOT/orbsvcs for idl generated files.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_publisher.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_subscriber.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
          Reduced down to a single file.

Sun Feb 27 12:01:42 MST 2005  Trevor Fields  <fields_t@ociweb.com>

       * orbsvcs/DDS/DCPSInfo_i.cpp
       * orbsvcs/DDS/DCPSInfo_i.h
       * orbsvcs/DDS/DCPS_Entity_Id_Generator.h
       * orbsvcs/DDS/DCPS_IR_Domain.cpp
       * orbsvcs/DDS/DCPS_IR_Domain.h
       * orbsvcs/DDS/DCPS_IR_Participant.cpp
       * orbsvcs/DDS/DCPS_IR_Participant.h
       * orbsvcs/DDS/DCPS_IR_Publication.cpp
       * orbsvcs/DDS/DCPS_IR_Publication.h
       * orbsvcs/DDS/DCPS_IR_Subscription.cpp
       * orbsvcs/DDS/DCPS_IR_Subscription.h
       * orbsvcs/DDS/DCPS_IR_Topic.cpp
       * orbsvcs/DDS/DCPS_IR_Topic.h
       * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp
       * orbsvcs/DDS/DCPS_IR_Topic_Description.h
       * orbsvcs/DDS/DCPS_Utils.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h
       * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp

         Adding documentation.

Thu Feb 24 16:32:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.cpp
        * orbsvcs/DDS/DCPS_IR_Publication.cpp
        * orbsvcs/DDS/DCPS_IR_Publication.h
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp
        * orbsvcs/DDS/DCPS_IR_Subscription.h
        * orbsvcs/DDS/DCPS_IR_Topic.cpp
        * orbsvcs/DDS/DCPS_IR_Topic.h
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp
        * orbsvcs/DDS/DCPS_Utils.cpp
        * orbsvcs/DDS/DCPS_Utils.h
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
          Changed DCPS Info Repo to notify for inconsistent
          QOS.

        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl
          Added TAO specific TRANSPORTTYPE_QOS_POLICY_ID
          This is used to discriminate based on the transport
          that the publication/subscription uses.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp
          Test is now able to create inconsistent QOS situation.
          It does NOT check that it worked.

Thu Feb 24 11:19:15 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
          Fixed the compilation errors since idl module and
          implementation namespace changes.

Wed Feb 23 17:13:55 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
          Added most implementations for PublisherImpl class.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
          Implemented a few functions and changed the
          remove_associations method signiture since the idl
          interface is changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
          Changed the remove_associations method signiture since
          the idl interface is changed.

        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
          Corrected writerTransInfo variable name in the
          WriterAssociation struct.

        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl:
          Corrected included DdsDcpsTypeSupportTAO.idl file name.

Tue Feb 22 18:47:21 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.mpc
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h
          Added functionality to get simple data readers and writers
          working.

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl
          Added simple data reader and writer test.

Fri Feb 18 12:35:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl
          Updating the idl.

Fri Feb 18 12:00:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl:
          Changed the interface return type.

Fri Feb 18 11:25:41 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h

          Added some of the topic support functionality.  Checking in
          so yan can use it.

Fri Feb 18 10:40:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
          Added template function servant_to_reference and
          reference_to_servant in TAO::DCPS namespace to
          reduce duplicate code.

Thu Feb 17 14:31:37 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc
        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h
          Adding Registered_Data_Types singleton for registering
          TypeSupports.

        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/footype_export.h

          Adding DcpsFooType library for testing.

Wed Feb 16 13:13:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp
          Added missing file accidently removed during last commit.

Wed Feb 16 12:25:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.idl
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDomain.idl
        * orbsvcs/orbsvcs/DdsDcpsInfo.idl
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl
        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl
        * orbsvcs/orbsvcs/DdsDcpsPublication.idl
        * orbsvcs/orbsvcs/DdsDcpsSubscription.idl
        * orbsvcs/orbsvcs/DdsDcpsTopic.idl
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsInfo.idl:
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.h

          Renamed the DCPSInfo idl files and the servant files,
          and added the CVS keyword string.
          Added changeable methods to Qos_Helper and made all
          entities check if its qos is changeable after enabled.

        * orbsvcs/DDS/DCPS_IR_Domain.h
        * orbsvcs/DDS/DCPS_IR_Participant.h
        * orbsvcs/DDS/DCPS_IR_Publication.h
        * orbsvcs/DDS/DCPS_IR_Subscription.h
        * orbsvcs/DDS/DCPS_IR_Topic.h
        * orbsvcs/DDS/DCPSInfo_i.h
        * orbsvcs/DDS/DCPSInfoRepo.cpp
          Fixed the compilation error after the renaming.

Tue Feb 15 15:42:42 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
          Made the interfaces in TAO::DCPS module.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupport.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupport.h:
          Made the servant implementation and the helper class
          in namespace TAO::DCPS.

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
          Fixed compilation error after the DCPSInfo idl interfaces
          are changed to be in the TAO::DCPS module.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/domain_ids:
          Added missing domain_ids file to support test and
          other minor changes in Main.cpp.

Mon Feb 14 17:34:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfo.idl:
        * orbsvcs/DDS/DdsDcps.mpc:
        * orbsvcs/DDS/DdsDcpsInfrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
          Updated implementation of Domain components.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/README:
          Updated tests and tested against the DCPSInfo server.

        * orbsvcs/DDS/DCPSInfo_i.cpp:
          Fixed a bug in find_topic() method that does not allocate
          memory for out parameter when the topic does not exist.

Sun Feb 13 14:51:04 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/DDS/README:

        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
          Update the functionality of the DCPSInfoRepo.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:

          Update the sample publisher.

Tue Feb  8 11:57:01 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
          Got it to a working state.  It is missing some error checking
          currently.

        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          The callback interface for the publications and
          subscriptions.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_publisher.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_subscriber.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
          A simple publisher and subscriber.

Tue Feb  8 11:43:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        Fixed get_offered_incompatible_qos_status method name
        misspelling.

Tue Feb  8 11:18:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DdsDcps.mpc:
        * orbsvcs/DDS/DdsDcpsDomain.idl:
        * orbsvcs/DDS/DdsDcpsInfrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        Added implementation of Domain components.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        Added domain interface tests.

Fri Feb  4 12:13:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/orbsvcs/DCPSInfo.idl:

          Adding the DCPSInfo repository.

Tue Feb  1 14:04:38 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DCPSInfo.idl:
          Adding the idl file.

Thu Jan 27 13:04:17 USMST 2005 Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DdsDcpsTopic.idl:
        * orbsvcs/orbsvcs/Topic.h:
        * orbsvcs/orbsvcs/Topic.cpp:
          Added set_qos, get_qos, set_listener and get_listener methods
          to Topic interface.

        * orbsvcs/tests/DDS/DCPS/UnitTest.mpc
          Renamed the project name to follow name convention of orbsvcs
          tests.

Thu Jan 27 11:58:09 USMST 2005 Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DdsDcps.idl:
        * orbsvcs/DdsDcpsDomain.idl:
        * orbsvcs/DdsDcpsInfrastructure.idl:
        * orbsvcs/DdsDcpsPublication.idl:
        * orbsvcs/DdsDcpsSubscription.idl:
        * orbsvcs/DdsDcpsTopic.idl:
        * orbsvcs/DdsDcps.mpc:
          Renamed the idl files, moved them from
          orbsvcs/orbsvcs/DDS/DCPS directory to the orbsvcs/orbsvcs/ directory
          and made the TAO_DdsDcps library exportable.

        * orbsvcs/orbsvcs/DDS/DCPS/dcps_export.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/Topic.h:
        * orbsvcs/orbsvcs/Topic.cpp:
        * orbsvcs/orbsvcs/TypeSupport.h:
        * orbsvcs/orbsvcs/TypeSupport.cpp:
          Rename servant files, made the class name prefixed with "TAO_DCPS" and
          made the class exportable.

        * Service_Participant.h:
        * Service_Participant.cpp:
          Added the Service_Participant singleton to initialize the configuration
          for DDS/DCPS and start/shutdown the DDS service.

        * orbsvcs/tests/DDS/DCPS/UnitTest.mpc
        * orbsvcs/tests/DDS/DCPS/Main.cpp
        * orbsvcs/tests/DDS/DCPS/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DataWriterListener.h:
        * orbsvcs/tests/DDS/DCPS/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/Listener.h:
        * orbsvcs/tests/DDS/DCPS/Listener.cpp:
        * orbsvcs/tests/DDS/DCPS/PublisherListener.h:
        * orbsvcs/tests/DDS/DCPS/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/SubscriberListener.h:
        * orbsvcs/tests/DDS/DCPS/SubscriberListener.cpp:
        * orbsvcs/tests/DDS/DCPS/TopicListener.h:
        * orbsvcs/tests/DDS/DCPS/TopicListener.cpp:
          Added DDS/DCPS/unit test directory and moved all listener implementations
          there.

Mon Jan 24 11:22:01 USMST 2005 2005 Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_domain.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_infrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_publication.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_subscription.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_topic.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dds_dcps.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReaderListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReaderListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReader_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReader_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriterListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriterListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriter_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriter_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantFactory_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantFactory_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipant_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipant_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Entity_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Entity_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Listener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Listener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_PublisherListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_PublisherListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Publisher_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Publisher_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_SubscriberListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_SubscriberListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Subscriber_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Subscriber_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicDescription_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicDescription_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Topic_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Topic_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TypeSupport_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TypeSupport_i.h:

        Added dcps idl files and implementation starter code.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
